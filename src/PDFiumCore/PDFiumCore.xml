<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PDFiumCore</name>
    </assembly>
    <members>
        <member name="F:PDFiumCore.FPDFBitmapFormat.Unknown">
            <summary>
            Unknown or unsupported format.
            </summary>
        </member>
        <member name="F:PDFiumCore.FPDFBitmapFormat.Gray">
            <summary>
            Gray scale bitmap, one byte per pixel.
            </summary>
        </member>
        <member name="F:PDFiumCore.FPDFBitmapFormat.BGR">
            <summary>
            3 bytes per pixel, byte order: blue, green, red.
            </summary>
        </member>
        <member name="F:PDFiumCore.FPDFBitmapFormat.BGRx">
            <summary>
            4 bytes per pixel, byte order: blue, green, red, unused.
            </summary>
        </member>
        <member name="F:PDFiumCore.FPDFBitmapFormat.BGRA">
            <summary>
            4 bytes per pixel, byte order: blue, green, red, alpha.
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_InitLibraryWithConfig(PDFiumCore.FPDF_LIBRARY_CONFIG_)">
            <summary>
            <para>Function: FPDF_InitLibraryWithConfig</para>
            <para>Initialize the PDFium library and allocate global resources for it.</para>
            <para>Parameters:</para>
            <para>config - configuration information as above.</para>
            <para>Return value:</para>
            <para>None.</para>
            <para>Comments: You have to call this function before you can call any PDF processing functions.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_InitLibrary">
            <summary>
            <para>Function: FPDF_InitLibrary</para>
            <para>Initialize the PDFium library (alternative form).</para>
            <para>Parameters:</para>
            <para>None</para>
            <para>Return value:</para>
            <para>None.</para>
            <para>Comments: Convenience function to call FPDF_InitLibraryWithConfig() with a default configuration for backwards compatibility purposes. New code should call FPDF_InitLibraryWithConfig() instead. This will be deprecated in the future.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_DestroyLibrary">
            <summary>
            <para>Function: FPDF_DestroyLibrary</para>
            <para>Release global resources allocated to the PDFium library by</para>
            <para>FPDF_InitLibrary() or FPDF_InitLibraryWithConfig().</para>
            <para>Parameters:</para>
            <para>None.</para>
            <para>Return value:</para>
            <para>None.</para>
            <para>Comments: After this function is called, you must not call any PDF processing functions.</para>
            <para>Calling this function does not automatically close other objects. It is recommended to close other objects before closing the library with this function.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_SetSandBoxPolicy(System.UInt32,System.Int32)">
            <summary>
            <para>Function: FPDF_SetSandBoxPolicy</para>
            <para>Set the policy for the sandbox environment.</para>
            <para>Parameters:</para>
            <para>policy -   The specified policy for setting, for example: FPDF_POLICY_MACHINETIME_ACCESS.</para>
            <para>enable -   True to enable, false to disable the policy.</para>
            <para>Return value:</para>
            <para>None.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_LoadDocument(System.String,System.String)">
            <summary>
            <para>Function: FPDF_LoadDocument</para>
            <para>Open and load a PDF document.</para>
            <para>Parameters:</para>
            <para>file_path -  Path to the PDF file (including extension).</para>
            <para>password  -  A string used as the password for the PDF file. If no password is needed, empty or NULL can be used. See comments below regarding the encoding.</para>
            <para>Return value:</para>
            <para>A handle to the loaded document, or NULL on failure.</para>
            <para>Comments: Loaded document can be closed by FPDF_CloseDocument(). If this function fails, you can use FPDF_GetLastError() to retrieve the reason why it failed.</para>
            <para>The encoding for |file_path| is UTF-8.</para>
            <para>The encoding for |password| can be either UTF-8 or Latin-1. PDFs, depending on the security handler revision, will only accept one or the other encoding. If |password|'s encoding and the PDF's expected encoding do not match, FPDF_LoadDocument() will automatically convert |password| to the other encoding.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_LoadMemDocument(System.IntPtr,System.Int32,System.String)">
            <summary>
            <para>Function: FPDF_LoadMemDocument</para>
            <para>Open and load a PDF document from memory.</para>
            <para>Parameters:</para>
            <para>data_buf    -   Pointer to a buffer containing the PDF document.</para>
            <para>size        -   Number of bytes in the PDF document.</para>
            <para>password    -   A string used as the password for the PDF file. If no password is needed, empty or NULL can be used.</para>
            <para>Return value:</para>
            <para>A handle to the loaded document, or NULL on failure.</para>
            <para>Comments: The memory buffer must remain valid when the document is open. The loaded document can be closed by FPDF_CloseDocument. If this function fails, you can use FPDF_GetLastError() to retrieve the reason why it failed.</para>
            <para>See the comments for FPDF_LoadDocument() regarding the encoding for |password|.</para>
            <para>Notes: If PDFium is built with the XFA module, the application should call FPDF_LoadXFA() function after the PDF document loaded to support XFA fields defined in the fpdfformfill.h file.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_LoadMemDocument64(System.IntPtr,System.UInt64,System.String)">
            <summary>
            <para>Function: FPDF_LoadMemDocument64</para>
            <para>Open and load a PDF document from memory.</para>
            <para>Parameters:</para>
            <para>data_buf    -   Pointer to a buffer containing the PDF document.</para>
            <para>size        -   Number of bytes in the PDF document.</para>
            <para>password    -   A string used as the password for the PDF file. If no password is needed, empty or NULL can be used.</para>
            <para>Return value:</para>
            <para>A handle to the loaded document, or NULL on failure.</para>
            <para>Comments: The memory buffer must remain valid when the document is open. The loaded document can be closed by FPDF_CloseDocument. If this function fails, you can use FPDF_GetLastError() to retrieve the reason why it failed.</para>
            <para>See the comments for FPDF_LoadDocument() regarding the encoding for |password|.</para>
            <para>Notes: If PDFium is built with the XFA module, the application should call FPDF_LoadXFA() function after the PDF document loaded to support XFA fields defined in the fpdfformfill.h file.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_LoadCustomDocument(PDFiumCore.FPDF_FILEACCESS,System.String)">
            <summary>
            <para>Function: FPDF_LoadCustomDocument</para>
            <para>Load PDF document from a custom access descriptor.</para>
            <para>Parameters:</para>
            <para>pFileAccess -   A structure for accessing the file.</para>
            <para>password    -   Optional password for decrypting the PDF file.</para>
            <para>Return value:</para>
            <para>A handle to the loaded document, or NULL on failure.</para>
            <para>Comments: The application must keep the file resources |pFileAccess| points to valid until the returned FPDF_DOCUMENT is closed. |pFileAccess| itself does not need to outlive the FPDF_DOCUMENT.</para>
            <para>The loaded document can be closed with FPDF_CloseDocument().</para>
            <para>See the comments for FPDF_LoadDocument() regarding the encoding for |password|.</para>
            <para>Notes: If PDFium is built with the XFA module, the application should call FPDF_LoadXFA() function after the PDF document loaded to support XFA fields defined in the fpdfformfill.h file.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_GetFileVersion(PDFiumCore.FpdfDocumentT,System.Int32@)">
            <summary>
            <para>Function: FPDF_GetFileVersion</para>
            <para>Get the file version of the given PDF document.</para>
            <para>Parameters:</para>
            <para>doc         -   Handle to a document.</para>
            <para>fileVersion -   The PDF file version. File version: 14 for 1.4, 15 for 1.5, ...</para>
            <para>Return value:</para>
            <para>True if succeeds, false otherwise.</para>
            <para>Comments: If the document was created by FPDF_CreateNewDocument, then this function will always fail.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_GetLastError">
            <summary>
            <para>Function: FPDF_GetLastError</para>
            <para>Get last error code when a function fails.</para>
            <para>Parameters:</para>
            <para>None.</para>
            <para>Return value:</para>
            <para>A 32-bit integer indicating error code as defined above.</para>
            <para>Comments: If the previous SDK call succeeded, the return value of this function is not defined. This function only works in conjunction with APIs that mention FPDF_GetLastError() in their documentation.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_DocumentHasValidCrossReferenceTable(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Function: FPDF_DocumentHasValidCrossReferenceTable</para>
            <para>Whether the document's cross reference table is valid or not.</para>
            <para>Parameters:</para>
            <para>document    -   Handle to a document. Returned by FPDF_LoadDocument.</para>
            <para>Return value:</para>
            <para>True if the PDF parser did not encounter problems parsing the cross</para>
            <para>reference table. False if the parser could not parse the cross</para>
            <para>reference table and the table had to be rebuild from other data</para>
            <para>within the document.</para>
            <para>Comments: The return value can change over time as the PDF parser evolves.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_GetTrailerEnds(PDFiumCore.FpdfDocumentT,System.UInt32@,System.UInt32)">
            <summary>
            <para>Function: FPDF_GetTrailerEnds</para>
            <para>Get the byte offsets of trailer ends.</para>
            <para>Parameters:</para>
            <para>document    -   Handle to document. Returned by FPDF_LoadDocument().</para>
            <para>buffer      -   The address of a buffer that receives the byte offsets.</para>
            <para>length      -   The size, in ints, of |buffer|.</para>
            <para>Return value:</para>
            <para>Returns the number of ints in the buffer on success, 0 on error.</para>
            <para>|buffer| is an array of integers that describes the exact byte offsets of the</para>
            <para>trailer ends in the document. If |length| is less than the returned length,</para>
            <para>or |document| or |buffer| is NULL, |buffer| will not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_GetDocPermissions(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Function: FPDF_GetDocPermissions</para>
            <para>Get file permission flags of the document.</para>
            <para>Parameters:</para>
            <para>document    -   Handle to a document. Returned by FPDF_LoadDocument.</para>
            <para>Return value:</para>
            <para>A 32-bit integer indicating permission flags. Please refer to the</para>
            <para>PDF Reference for detailed descriptions. If the document is not</para>
            <para>protected or was unlocked by the owner, 0xffffffff will be returned.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_GetDocUserPermissions(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Function: FPDF_GetDocUserPermissions</para>
            <para>Get user file permission flags of the document.</para>
            <para>Parameters:</para>
            <para>document    -   Handle to a document. Returned by FPDF_LoadDocument.</para>
            <para>Return value:</para>
            <para>A 32-bit integer indicating permission flags. Please refer to the</para>
            <para>PDF Reference for detailed descriptions. If the document is not</para>
            <para>protected, 0xffffffff will be returned. Always returns user</para>
            <para>permissions, even if the document was unlocked by the owner.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_GetSecurityHandlerRevision(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Function: FPDF_GetSecurityHandlerRevision</para>
            <para>Get the revision for the security handler.</para>
            <para>Parameters:</para>
            <para>document    -   Handle to a document. Returned by FPDF_LoadDocument.</para>
            <para>Return value:</para>
            <para>The security handler revision number. Please refer to the PDF</para>
            <para>Reference for a detailed description. If the document is not</para>
            <para>protected, -1 will be returned.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_GetPageCount(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Function: FPDF_GetPageCount</para>
            <para>Get total number of pages in the document.</para>
            <para>Parameters:</para>
            <para>document    -   Handle to document. Returned by FPDF_LoadDocument.</para>
            <para>Return value:</para>
            <para>Total number of pages in the document.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_LoadPage(PDFiumCore.FpdfDocumentT,System.Int32)">
            <summary>
            <para>Function: FPDF_LoadPage</para>
            <para>Load a page inside the document.</para>
            <para>Parameters:</para>
            <para>document    -   Handle to document. Returned by FPDF_LoadDocument</para>
            <para>page_index  -   Index number of the page. 0 for the first page.</para>
            <para>Return value:</para>
            <para>A handle to the loaded page, or NULL if page load fails.</para>
            <para>Comments: The loaded page can be rendered to devices using FPDF_RenderPage. The loaded page can be closed using FPDF_ClosePage.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_GetPageWidthF(PDFiumCore.FpdfPageT)">
            <summary>
            <para>Function: FPDF_GetPageWidthF</para>
            <para>Get page width.</para>
            <para>Parameters:</para>
            <para>page        -   Handle to the page. Returned by FPDF_LoadPage().</para>
            <para>Return value:</para>
            <para>Page width (excluding non-displayable area) measured in points.</para>
            <para>One point is 1/72 inch (around 0.3528 mm).</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_GetPageWidth(PDFiumCore.FpdfPageT)">
            <summary>
            <para>Function: FPDF_GetPageWidth</para>
            <para>Get page width.</para>
            <para>Parameters:</para>
            <para>page        -   Handle to the page. Returned by FPDF_LoadPage.</para>
            <para>Return value:</para>
            <para>Page width (excluding non-displayable area) measured in points.</para>
            <para>One point is 1/72 inch (around 0.3528 mm).</para>
            <para>Note:</para>
            <para>Prefer FPDF_GetPageWidthF() above. This will be deprecated in the</para>
            <para>future.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_GetPageHeightF(PDFiumCore.FpdfPageT)">
            <summary>
            <para>Function: FPDF_GetPageHeightF</para>
            <para>Get page height.</para>
            <para>Parameters:</para>
            <para>page        -   Handle to the page. Returned by FPDF_LoadPage().</para>
            <para>Return value:</para>
            <para>Page height (excluding non-displayable area) measured in points.</para>
            <para>One point is 1/72 inch (around 0.3528 mm)</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_GetPageHeight(PDFiumCore.FpdfPageT)">
            <summary>
            <para>Function: FPDF_GetPageHeight</para>
            <para>Get page height.</para>
            <para>Parameters:</para>
            <para>page        -   Handle to the page. Returned by FPDF_LoadPage.</para>
            <para>Return value:</para>
            <para>Page height (excluding non-displayable area) measured in points.</para>
            <para>One point is 1/72 inch (around 0.3528 mm)</para>
            <para>Note:</para>
            <para>Prefer FPDF_GetPageHeightF() above. This will be deprecated in the</para>
            <para>future.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_GetPageBoundingBox(PDFiumCore.FpdfPageT,PDFiumCore.FS_RECTF_)">
            <summary>
            <para>Function: FPDF_GetPageBoundingBox</para>
            <para>Get the bounding box of the page. This is the intersection between</para>
            <para>its media box and its crop box.</para>
            <para>Parameters:</para>
            <para>page        -   Handle to the page. Returned by FPDF_LoadPage.</para>
            <para>rect        -   Pointer to a rect to receive the page bounding box. On an error, |rect| won't be filled.</para>
            <para>Return value:</para>
            <para>True for success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_GetPageSizeByIndexF(PDFiumCore.FpdfDocumentT,System.Int32,PDFiumCore.FS_SIZEF_)">
            <summary>
            <para>Function: FPDF_GetPageSizeByIndexF</para>
            <para>Get the size of the page at the given index.</para>
            <para>Parameters:</para>
            <para>document    -   Handle to document. Returned by FPDF_LoadDocument().</para>
            <para>page_index  -   Page index, zero for the first page.</para>
            <para>size        -   Pointer to a FS_SIZEF to receive the page size. (in points).</para>
            <para>Return value:</para>
            <para>Non-zero for success. 0 for error (document or page not found).</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_GetPageSizeByIndex(PDFiumCore.FpdfDocumentT,System.Int32,System.Double@,System.Double@)">
            <summary>
            <para>Function: FPDF_GetPageSizeByIndex</para>
            <para>Get the size of the page at the given index.</para>
            <para>Parameters:</para>
            <para>document    -   Handle to document. Returned by FPDF_LoadDocument.</para>
            <para>page_index  -   Page index, zero for the first page.</para>
            <para>width       -   Pointer to a double to receive the page width (in points).</para>
            <para>height      -   Pointer to a double to receive the page height (in points).</para>
            <para>Return value:</para>
            <para>Non-zero for success. 0 for error (document or page not found).</para>
            <para>Note:</para>
            <para>Prefer FPDF_GetPageSizeByIndexF() above. This will be deprecated in</para>
            <para>the future.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_RenderPageBitmap(PDFiumCore.FpdfBitmapT,PDFiumCore.FpdfPageT,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            <para>Function: FPDF_RenderPageBitmap</para>
            <para>Render contents of a page to a device independent bitmap.</para>
            <para>Parameters:</para>
            <para>bitmap      -   Handle to the device independent bitmap (as the output buffer). The bitmap handle can be created by FPDFBitmap_Create or retrieved from an image object by FPDFImageObj_GetBitmap.</para>
            <para>page        -   Handle to the page. Returned by FPDF_LoadPage</para>
            <para>start_x     -   Left pixel position of the display area in bitmap coordinates.</para>
            <para>start_y     -   Top pixel position of the display area in bitmap coordinates.</para>
            <para>size_x      -   Horizontal size (in pixels) for displaying the page.</para>
            <para>size_y      -   Vertical size (in pixels) for displaying the page.</para>
            <para>rotate      -   Page orientation: 0 (normal) 1 (rotated 90 degrees clockwise) 2 (rotated 180 degrees) 3 (rotated 90 degrees counter-clockwise)</para>
            <para>flags       -   0 for normal display, or combination of the Page Rendering flags defined above. With the FPDF_ANNOT flag, it renders all annotations that do not require user-interaction, which are all annotations except widget and popup annotations.</para>
            <para>Return value:</para>
            <para>None.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_RenderPageBitmapWithMatrix(PDFiumCore.FpdfBitmapT,PDFiumCore.FpdfPageT,PDFiumCore.FS_MATRIX_,PDFiumCore.FS_RECTF_,System.Int32)">
            <summary>
            <para>Function: FPDF_RenderPageBitmapWithMatrix</para>
            <para>Render contents of a page to a device independent bitmap.</para>
            <para>Parameters:</para>
            <para>bitmap      -   Handle to the device independent bitmap (as the output buffer). The bitmap handle can be created by FPDFBitmap_Create or retrieved by FPDFImageObj_GetBitmap.</para>
            <para>page        -   Handle to the page. Returned by FPDF_LoadPage.</para>
            <para>matrix      -   The transform matrix, which must be invertible. See PDF Reference 1.7, 4.2.2 Common Transformations.</para>
            <para>clipping    -   The rect to clip to in device coords.</para>
            <para>flags       -   0 for normal display, or combination of the Page Rendering flags defined above. With the FPDF_ANNOT flag, it renders all annotations that do not require user-interaction, which are all annotations except widget and popup annotations.</para>
            <para>Return value:</para>
            <para>None. Note that behavior is undefined if det of |matrix| is 0.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_ClosePage(PDFiumCore.FpdfPageT)">
            <summary>
            <para>Function: FPDF_ClosePage</para>
            <para>Close a loaded PDF page.</para>
            <para>Parameters:</para>
            <para>page        -   Handle to the loaded page.</para>
            <para>Return value:</para>
            <para>None.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_CloseDocument(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Function: FPDF_CloseDocument</para>
            <para>Close a loaded PDF document.</para>
            <para>Parameters:</para>
            <para>document    -   Handle to the loaded document.</para>
            <para>Return value:</para>
            <para>None.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_DeviceToPage(PDFiumCore.FpdfPageT,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            <para>Function: FPDF_DeviceToPage</para>
            <para>Convert the screen coordinates of a point to page coordinates.</para>
            <para>Parameters:</para>
            <para>page        -   Handle to the page. Returned by FPDF_LoadPage.</para>
            <para>start_x     -   Left pixel position of the display area in device coordinates.</para>
            <para>start_y     -   Top pixel position of the display area in device coordinates.</para>
            <para>size_x      -   Horizontal size (in pixels) for displaying the page.</para>
            <para>size_y      -   Vertical size (in pixels) for displaying the page.</para>
            <para>rotate      -   Page orientation: 0 (normal) 1 (rotated 90 degrees clockwise) 2 (rotated 180 degrees) 3 (rotated 90 degrees counter-clockwise)</para>
            <para>device_x    -   X value in device coordinates to be converted.</para>
            <para>device_y    -   Y value in device coordinates to be converted.</para>
            <para>page_x      -   A pointer to a double receiving the converted X value in page coordinates.</para>
            <para>page_y      -   A pointer to a double receiving the converted Y value in page coordinates.</para>
            <para>Return value:</para>
            <para>Returns true if the conversion succeeds, and |page_x| and |page_y|</para>
            <para>successfully receives the converted coordinates.</para>
            <para>Comments: The page coordinate system has its origin at the left-bottom corner of the page, with the X-axis on the bottom going to the right, and the Y-axis on the left side going up.</para>
            <para>NOTE: this coordinate system can be altered when you zoom, scroll, or rotate a page, however, a point on the page should always have the same coordinate values in the page coordinate system.</para>
            <para>The device coordinate system is device dependent. For screen device, its origin is at the left-top corner of the window. However this origin can be altered by the Windows coordinate transformation utilities.</para>
            <para>You must make sure the start_x, start_y, size_x, size_y and rotate parameters have exactly same values as you used in the FPDF_RenderPage() function call.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_PageToDevice(PDFiumCore.FpdfPageT,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Int32@,System.Int32@)">
            <summary>
            <para>Function: FPDF_PageToDevice</para>
            <para>Convert the page coordinates of a point to screen coordinates.</para>
            <para>Parameters:</para>
            <para>page        -   Handle to the page. Returned by FPDF_LoadPage.</para>
            <para>start_x     -   Left pixel position of the display area in device coordinates.</para>
            <para>start_y     -   Top pixel position of the display area in device coordinates.</para>
            <para>size_x      -   Horizontal size (in pixels) for displaying the page.</para>
            <para>size_y      -   Vertical size (in pixels) for displaying the page.</para>
            <para>rotate      -   Page orientation: 0 (normal) 1 (rotated 90 degrees clockwise) 2 (rotated 180 degrees) 3 (rotated 90 degrees counter-clockwise)</para>
            <para>page_x      -   X value in page coordinates.</para>
            <para>page_y      -   Y value in page coordinate.</para>
            <para>device_x    -   A pointer to an integer receiving the result X value in device coordinates.</para>
            <para>device_y    -   A pointer to an integer receiving the result Y value in device coordinates.</para>
            <para>Return value:</para>
            <para>Returns true if the conversion succeeds, and |device_x| and</para>
            <para>|device_y| successfully receives the converted coordinates.</para>
            <para>Comments: See comments for FPDF_DeviceToPage().</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDFBitmapCreate(System.Int32,System.Int32,System.Int32)">
            <summary>
            <para>Function: FPDFBitmap_Create</para>
            <para>Create a device independent bitmap (FXDIB).</para>
            <para>Parameters:</para>
            <para>width       -   The number of pixels in width for the bitmap. Must be greater than 0.</para>
            <para>height      -   The number of pixels in height for the bitmap. Must be greater than 0.</para>
            <para>alpha       -   A flag indicating whether the alpha channel is used. Non-zero for using alpha, zero for not using.</para>
            <para>Return value:</para>
            <para>The created bitmap handle, or NULL if a parameter error or out of</para>
            <para>memory.</para>
            <para>Comments: The bitmap always uses 4 bytes per pixel. The first byte is always double word aligned.</para>
            <para>The byte order is BGRx (the last byte unused if no alpha channel) or BGRA.</para>
            <para>The pixels in a horizontal line are stored side by side, with the left most pixel stored first (with lower memory address). Each line uses width * 4 bytes.</para>
            <para>Lines are stored one after another, with the top most line stored first. There is no gap between adjacent lines.</para>
            <para>This function allocates enough memory for holding all pixels in the bitmap, but it doesn't initialize the buffer. Applications can use FPDFBitmap_FillRect() to fill the bitmap using any color. If the OS allows it, this function can allocate up to 4 GB of memory.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDFBitmapCreateEx(System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            <para>Function: FPDFBitmap_CreateEx</para>
            <para>Create a device independent bitmap (FXDIB)</para>
            <para>Parameters:</para>
            <para>width       -   The number of pixels in width for the bitmap. Must be greater than 0.</para>
            <para>height      -   The number of pixels in height for the bitmap. Must be greater than 0.</para>
            <para>format      -   A number indicating for bitmap format, as defined above.</para>
            <para>first_scan  -   A pointer to the first byte of the first line if using an external buffer. If this parameter is NULL, then a new buffer will be created.</para>
            <para>stride      -   Number of bytes for each scan line. The value must be 0 or greater. When the value is 0, FPDFBitmap_CreateEx() will automatically calculate the appropriate value using |width| and |format|. When using an external buffer, it is recommended for the caller to pass in the value. When not using an external buffer, it is recommended for the caller to pass in 0.</para>
            <para>Return value:</para>
            <para>The bitmap handle, or NULL if parameter error or out of memory.</para>
            <para>Comments: Similar to FPDFBitmap_Create function, but allows for more formats and an external buffer is supported. The bitmap created by this function can be used in any place that a FPDF_BITMAP handle is required.</para>
            <para>If an external buffer is used, then the caller should destroy the buffer. FPDFBitmap_Destroy() will not destroy the buffer.</para>
            <para>It is recommended to use FPDFBitmap_GetStride() to get the stride value.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDFBitmapGetFormat(PDFiumCore.FpdfBitmapT)">
            <summary>
            <para>Function: FPDFBitmap_GetFormat</para>
            <para>Get the format of the bitmap.</para>
            <para>Parameters:</para>
            <para>bitmap      -   Handle to the bitmap. Returned by FPDFBitmap_Create or FPDFImageObj_GetBitmap.</para>
            <para>Return value:</para>
            <para>The format of the bitmap.</para>
            <para>Comments: Only formats supported by FPDFBitmap_CreateEx are supported by this function; see the list of such formats above.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDFBitmapFillRect(PDFiumCore.FpdfBitmapT,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            <para>Function: FPDFBitmap_FillRect</para>
            <para>Fill a rectangle in a bitmap.</para>
            <para>Parameters:</para>
            <para>bitmap      -   The handle to the bitmap. Returned by FPDFBitmap_Create.</para>
            <para>left        -   The left position. Starting from 0 at the left-most pixel.</para>
            <para>top         -   The top position. Starting from 0 at the top-most line.</para>
            <para>width       -   Width in pixels to be filled.</para>
            <para>height      -   Height in pixels to be filled.</para>
            <para>color       -   A 32-bit value specifing the color, in 8888 ARGB format.</para>
            <para>Return value:</para>
            <para>None.</para>
            <para>Comments: This function sets the color and (optionally) alpha value in the specified region of the bitmap.</para>
            <para>NOTE: If the alpha channel is used, this function does NOT composite the background with the source color, instead the background will be replaced by the source color and the alpha.</para>
            <para>If the alpha channel is not used, the alpha parameter is ignored.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDFBitmapGetBuffer(PDFiumCore.FpdfBitmapT)">
            <summary>
            <para>Function: FPDFBitmap_GetBuffer</para>
            <para>Get data buffer of a bitmap.</para>
            <para>Parameters:</para>
            <para>bitmap      -   Handle to the bitmap. Returned by FPDFBitmap_Create or FPDFImageObj_GetBitmap.</para>
            <para>Return value:</para>
            <para>The pointer to the first byte of the bitmap buffer.</para>
            <para>Comments: The stride may be more than width * number of bytes per pixel</para>
            <para>Applications can use this function to get the bitmap buffer pointer, then manipulate any color and/or alpha values for any pixels in the bitmap.</para>
            <para>Use FPDFBitmap_GetFormat() to find out the format of the data.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDFBitmapGetWidth(PDFiumCore.FpdfBitmapT)">
            <summary>
            <para>Function: FPDFBitmap_GetWidth</para>
            <para>Get width of a bitmap.</para>
            <para>Parameters:</para>
            <para>bitmap      -   Handle to the bitmap. Returned by FPDFBitmap_Create or FPDFImageObj_GetBitmap.</para>
            <para>Return value:</para>
            <para>The width of the bitmap in pixels.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDFBitmapGetHeight(PDFiumCore.FpdfBitmapT)">
            <summary>
            <para>Function: FPDFBitmap_GetHeight</para>
            <para>Get height of a bitmap.</para>
            <para>Parameters:</para>
            <para>bitmap      -   Handle to the bitmap. Returned by FPDFBitmap_Create or FPDFImageObj_GetBitmap.</para>
            <para>Return value:</para>
            <para>The height of the bitmap in pixels.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDFBitmapGetStride(PDFiumCore.FpdfBitmapT)">
            <summary>
            <para>Function: FPDFBitmap_GetStride</para>
            <para>Get number of bytes for each line in the bitmap buffer.</para>
            <para>Parameters:</para>
            <para>bitmap      -   Handle to the bitmap. Returned by FPDFBitmap_Create or FPDFImageObj_GetBitmap.</para>
            <para>Return value:</para>
            <para>The number of bytes for each line in the bitmap buffer.</para>
            <para>Comments: The stride may be more than width * number of bytes per pixel.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDFBitmapDestroy(PDFiumCore.FpdfBitmapT)">
            <summary>
            <para>Function: FPDFBitmap_Destroy</para>
            <para>Destroy a bitmap and release all related buffers.</para>
            <para>Parameters:</para>
            <para>bitmap      -   Handle to the bitmap. Returned by FPDFBitmap_Create or FPDFImageObj_GetBitmap.</para>
            <para>Return value:</para>
            <para>None.</para>
            <para>Comments: This function will not destroy any external buffers provided when the bitmap was created.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_VIEWERREF_GetPrintScaling(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Function: FPDF_VIEWERREF_GetPrintScaling</para>
            <para>Whether the PDF document prefers to be scaled or not.</para>
            <para>Parameters:</para>
            <para>document    -   Handle to the loaded document.</para>
            <para>Return value:</para>
            <para>None.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_VIEWERREF_GetNumCopies(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Function: FPDF_VIEWERREF_GetNumCopies</para>
            <para>Returns the number of copies to be printed.</para>
            <para>Parameters:</para>
            <para>document    -   Handle to the loaded document.</para>
            <para>Return value:</para>
            <para>The number of copies to be printed.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_VIEWERREF_GetPrintPageRange(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Function: FPDF_VIEWERREF_GetPrintPageRange</para>
            <para>Page numbers to initialize print dialog box when file is printed.</para>
            <para>Parameters:</para>
            <para>document    -   Handle to the loaded document.</para>
            <para>Return value:</para>
            <para>The print page range to be used for printing.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_VIEWERREF_GetPrintPageRangeCount(PDFiumCore.FpdfPagerangeT)">
            <summary>
            <para>Function: FPDF_VIEWERREF_GetPrintPageRangeCount</para>
            <para>Returns the number of elements in a FPDF_PAGERANGE.</para>
            <para>Parameters:</para>
            <para>pagerange   -   Handle to the page range.</para>
            <para>Return value:</para>
            <para>The number of elements in the page range. Returns 0 on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_VIEWERREF_GetPrintPageRangeElement(PDFiumCore.FpdfPagerangeT,System.UInt64)">
            <summary>
            <para>Function: FPDF_VIEWERREF_GetPrintPageRangeElement</para>
            <para>Returns an element from a FPDF_PAGERANGE.</para>
            <para>Parameters:</para>
            <para>pagerange   -   Handle to the page range.</para>
            <para>index       -   Index of the element.</para>
            <para>Return value:</para>
            <para>The value of the element in the page range at a given index.</para>
            <para>Returns -1 on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_VIEWERREF_GetDuplex(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Function: FPDF_VIEWERREF_GetDuplex</para>
            <para>Returns the paper handling option to be used when printing from</para>
            <para>the print dialog.</para>
            <para>Parameters:</para>
            <para>document    -   Handle to the loaded document.</para>
            <para>Return value:</para>
            <para>The paper handling option to be used when printing.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_VIEWERREF_GetName(PDFiumCore.FpdfDocumentT,System.String,System.SByte*,System.UInt32)">
            <summary>
            <para>Function: FPDF_VIEWERREF_GetName</para>
            <para>Gets the contents for a viewer ref, with a given key. The value must</para>
            <para>be of type &quot;name&quot;.</para>
            <para>Parameters:</para>
            <para>document    -   Handle to the loaded document.</para>
            <para>key         -   Name of the key in the viewer pref dictionary, encoded in UTF-8.</para>
            <para>buffer      -   A string to write the contents of the key to.</para>
            <para>length      -   Length of the buffer.</para>
            <para>Return value:</para>
            <para>The number of bytes in the contents, including the NULL terminator.</para>
            <para>Thus if the return value is 0, then that indicates an error, such</para>
            <para>as when |document| is invalid or |buffer| is NULL. If |length| is</para>
            <para>less than the returned length, or |buffer| is NULL, |buffer| will</para>
            <para>not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_CountNamedDests(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Function: FPDF_CountNamedDests</para>
            <para>Get the count of named destinations in the PDF document.</para>
            <para>Parameters:</para>
            <para>document    -   Handle to a document</para>
            <para>Return value:</para>
            <para>The count of named destinations.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_GetNamedDestByName(PDFiumCore.FpdfDocumentT,System.String)">
            <summary>
            <para>Function: FPDF_GetNamedDestByName</para>
            <para>Get a the destination handle for the given name.</para>
            <para>Parameters:</para>
            <para>document    -   Handle to the loaded document.</para>
            <para>name        -   The name of a destination.</para>
            <para>Return value:</para>
            <para>The handle to the destination.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_GetNamedDest(PDFiumCore.FpdfDocumentT,System.Int32,System.IntPtr,System.Int32@)">
            <summary>
            <para>Function: FPDF_GetNamedDest</para>
            <para>Get the named destination by index.</para>
            <para>Parameters:</para>
            <para>document        -   Handle to a document</para>
            <para>index           -   The index of a named destination.</para>
            <para>buffer          -   The buffer to store the destination name, used as wchar_t*.</para>
            <para>buflen [in/out] -   Size of the buffer in bytes on input, length of the result in bytes on output or -1 if the buffer is too small.</para>
            <para>Return value:</para>
            <para>The destination handle for a given index, or NULL if there is no</para>
            <para>named destination corresponding to |index|.</para>
            <para>Comments: Call this function twice to get the name of the named destination: 1) First time pass in |buffer| as NULL and get buflen. 2) Second time pass in allocated |buffer| and buflen to retrieve |buffer|, which should be used as wchar_t*.</para>
            <para>If buflen is not sufficiently large, it will be set to -1 upon return.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_GetXFAPacketCount(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Function: FPDF_GetXFAPacketCount</para>
            <para>Get the number of valid packets in the XFA entry.</para>
            <para>Parameters:</para>
            <para>document - Handle to the document.</para>
            <para>Return value:</para>
            <para>The number of valid packets, or -1 on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_GetXFAPacketName(PDFiumCore.FpdfDocumentT,System.Int32,System.IntPtr,System.UInt32)">
            <summary>
            <para>Function: FPDF_GetXFAPacketName</para>
            <para>Get the name of a packet in the XFA array.</para>
            <para>Parameters:</para>
            <para>document - Handle to the document.</para>
            <para>index    - Index number of the packet. 0 for the first packet.</para>
            <para>buffer   - Buffer for holding the name of the XFA packet.</para>
            <para>buflen   - Length of |buffer| in bytes.</para>
            <para>Return value:</para>
            <para>The length of the packet name in bytes, or 0 on error.</para>
            <para>|document| must be valid and |index| must be in the range [0, N), where N is</para>
            <para>the value returned by FPDF_GetXFAPacketCount().</para>
            <para>|buffer| is only modified if it is non-NULL and |buflen| is greater than or</para>
            <para>equal to the length of the packet name. The packet name includes a</para>
            <para>terminating NUL character. |buffer| is unmodified on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdfview.FPDF_GetXFAPacketContent(PDFiumCore.FpdfDocumentT,System.Int32,System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            <para>Function: FPDF_GetXFAPacketContent</para>
            <para>Get the content of a packet in the XFA array.</para>
            <para>Parameters:</para>
            <para>document   - Handle to the document.</para>
            <para>index      - Index number of the packet. 0 for the first packet.</para>
            <para>buffer     - Buffer for holding the content of the XFA packet.</para>
            <para>buflen     - Length of |buffer| in bytes.</para>
            <para>out_buflen - Pointer to the variable that will receive the minimum buffer size needed to contain the content of the XFA packet.</para>
            <para>Return value:</para>
            <para>Whether the operation succeeded or not.</para>
            <para>|document| must be valid and |index| must be in the range [0, N), where N is</para>
            <para>the value returned by FPDF_GetXFAPacketCount(). |out_buflen| must not be</para>
            <para>NULL. When the aforementioned arguments are valid, the operation succeeds,</para>
            <para>and |out_buflen| receives the content size. |buffer| is only modified if</para>
            <para>|buffer| is non-null and long enough to contain the content. Callers must</para>
            <para>check both the return value and the input |buflen| is no less than the</para>
            <para>returned |out_buflen| before using the data in |buffer|.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotIsSupportedSubtype(System.Int32)">
            <summary>
            <para>Experimental API.</para>
            <para>Check if an annotation subtype is currently supported for creation.</para>
            <para>Currently supported subtypes:</para>
            <para>- circle</para>
            <para>- fileattachment</para>
            <para>- freetext</para>
            <para>- highlight</para>
            <para>- ink</para>
            <para>- link</para>
            <para>- popup</para>
            <para>- square,</para>
            <para>- squiggly</para>
            <para>- stamp</para>
            <para>- strikeout</para>
            <para>- text</para>
            <para>- underline</para>
            <para>subtype   - the subtype to be checked.</para>
            <para>Returns true if this subtype supported.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFPageCreateAnnot(PDFiumCore.FpdfPageT,System.Int32)">
            <summary>
            <para>Experimental API.</para>
            <para>Create an annotation in |page| of the subtype |subtype|. If the specified</para>
            <para>subtype is illegal or unsupported, then a new annotation will not be created.</para>
            <para>Must call FPDFPage_CloseAnnot() when the annotation returned by this</para>
            <para>function is no longer needed.</para>
            <para>page      - handle to a page.</para>
            <para>subtype   - the subtype of the new annotation.</para>
            <para>Returns a handle to the new annotation object, or NULL on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFPageGetAnnotCount(PDFiumCore.FpdfPageT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the number of annotations in |page|.</para>
            <para>page   - handle to a page.</para>
            <para>Returns the number of annotations in |page|.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFPageGetAnnot(PDFiumCore.FpdfPageT,System.Int32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get annotation in |page| at |index|. Must call FPDFPage_CloseAnnot() when the</para>
            <para>annotation returned by this function is no longer needed.</para>
            <para>page  - handle to a page.</para>
            <para>index - the index of the annotation.</para>
            <para>Returns a handle to the annotation object, or NULL on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFPageGetAnnotIndex(PDFiumCore.FpdfPageT,PDFiumCore.FpdfAnnotationT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the index of |annot| in |page|. This is the opposite of</para>
            <para>FPDFPage_GetAnnot().</para>
            <para>page  - handle to the page that the annotation is on.</para>
            <para>annot - handle to an annotation.</para>
            <para>Returns the index of |annot|, or -1 on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFPageCloseAnnot(PDFiumCore.FpdfAnnotationT)">
            <summary>
            <para>Experimental API.</para>
            <para>Close an annotation. Must be called when the annotation returned by</para>
            <para>FPDFPage_CreateAnnot() or FPDFPage_GetAnnot() is no longer needed. This</para>
            <para>function does not remove the annotation from the document.</para>
            <para>annot  - handle to an annotation.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFPageRemoveAnnot(PDFiumCore.FpdfPageT,System.Int32)">
            <summary>
            <para>Experimental API.</para>
            <para>Remove the annotation in |page| at |index|.</para>
            <para>page  - handle to a page.</para>
            <para>index - the index of the annotation.</para>
            <para>Returns true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetSubtype(PDFiumCore.FpdfAnnotationT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the subtype of an annotation.</para>
            <para>annot  - handle to an annotation.</para>
            <para>Returns the annotation subtype.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotIsObjectSupportedSubtype(System.Int32)">
            <summary>
            <para>Experimental API.</para>
            <para>Check if an annotation subtype is currently supported for object extraction,</para>
            <para>update, and removal.</para>
            <para>Currently supported subtypes: ink and stamp.</para>
            <para>subtype   - the subtype to be checked.</para>
            <para>Returns true if this subtype supported.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotUpdateObject(PDFiumCore.FpdfAnnotationT,PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Experimental API.</para>
            <para>Update |obj| in |annot|. |obj| must be in |annot| already and must have</para>
            <para>been retrieved by FPDFAnnot_GetObject(). Currently, only ink and stamp</para>
            <para>annotations are supported by this API. Also note that only path, image, and</para>
            <para>text objects have APIs for modification; see FPDFPath_*(), FPDFText_*(), and</para>
            <para>FPDFImageObj_*().</para>
            <para>annot  - handle to an annotation.</para>
            <para>obj    - handle to the object that |annot| needs to update.</para>
            <para>Return true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotAddInkStroke(PDFiumCore.FpdfAnnotationT,PDFiumCore.FS_POINTF_,System.UInt64)">
            <summary>
            <para>Experimental API.</para>
            <para>Add a new InkStroke, represented by an array of points, to the InkList of</para>
            <para>|annot|. The API creates an InkList if one doesn't already exist in |annot|.</para>
            <para>This API works only for ink annotations. Please refer to ISO 32000-1:2008</para>
            <para>spec, section 12.5.6.13.</para>
            <para>annot       - handle to an annotation.</para>
            <para>points      - pointer to a FS_POINTF array representing input points.</para>
            <para>point_count - number of elements in |points| array. This should not exceed</para>
            <para>the maximum value that can be represented by an int32_t).</para>
            <para>Returns the 0-based index at which the new InkStroke is added in the InkList</para>
            <para>of the |annot|. Returns -1 on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotRemoveInkList(PDFiumCore.FpdfAnnotationT)">
            <summary>
            <para>Experimental API.</para>
            <para>Removes an InkList in |annot|.</para>
            <para>This API works only for ink annotations.</para>
            <para>annot  - handle to an annotation.</para>
            <para>Return true on successful removal of /InkList entry from context of the</para>
            <para>non-null ink |annot|. Returns false on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotAppendObject(PDFiumCore.FpdfAnnotationT,PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Experimental API.</para>
            <para>Add |obj| to |annot|. |obj| must have been created by</para>
            <para>FPDFPageObj_CreateNew{Path|Rect}() or FPDFPageObj_New{Text|Image}Obj(), and</para>
            <para>will be owned by |annot|. Note that an |obj| cannot belong to more than one</para>
            <para>|annot|. Currently, only ink and stamp annotations are supported by this API.</para>
            <para>Also note that only path, image, and text objects have APIs for creation.</para>
            <para>annot  - handle to an annotation.</para>
            <para>obj    - handle to the object that is to be added to |annot|.</para>
            <para>Return true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetObjectCount(PDFiumCore.FpdfAnnotationT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the total number of objects in |annot|, including path objects, text</para>
            <para>objects, external objects, image objects, and shading objects.</para>
            <para>annot  - handle to an annotation.</para>
            <para>Returns the number of objects in |annot|.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetObject(PDFiumCore.FpdfAnnotationT,System.Int32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the object in |annot| at |index|.</para>
            <para>annot  - handle to an annotation.</para>
            <para>index  - the index of the object.</para>
            <para>Return a handle to the object, or NULL on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotRemoveObject(PDFiumCore.FpdfAnnotationT,System.Int32)">
            <summary>
            <para>Experimental API.</para>
            <para>Remove the object in |annot| at |index|.</para>
            <para>annot  - handle to an annotation.</para>
            <para>index  - the index of the object to be removed.</para>
            <para>Return true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotSetColor(PDFiumCore.FpdfAnnotationT,PDFiumCore.FPDFANNOT_COLORTYPE,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Set the color of an annotation. Fails when called on annotations with</para>
            <para>appearance streams already defined; instead use</para>
            <para>FPDFPath_Set{Stroke|Fill}Color().</para>
            <para>annot    - handle to an annotation.</para>
            <para>type     - type of the color to be set.</para>
            <para>R, G, B  - buffer to hold the RGB value of the color. Ranges from 0 to 255.</para>
            <para>A        - buffer to hold the opacity. Ranges from 0 to 255.</para>
            <para>Returns true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetColor(PDFiumCore.FpdfAnnotationT,PDFiumCore.FPDFANNOT_COLORTYPE,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the color of an annotation. If no color is specified, default to yellow</para>
            <para>for highlight annotation, black for all else. Fails when called on</para>
            <para>annotations with appearance streams already defined; instead use</para>
            <para>FPDFPath_Get{Stroke|Fill}Color().</para>
            <para>annot    - handle to an annotation.</para>
            <para>type     - type of the color requested.</para>
            <para>R, G, B  - buffer to hold the RGB value of the color. Ranges from 0 to 255.</para>
            <para>A        - buffer to hold the opacity. Ranges from 0 to 255.</para>
            <para>Returns true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotHasAttachmentPoints(PDFiumCore.FpdfAnnotationT)">
            <summary>
            <para>Experimental API.</para>
            <para>Check if the annotation is of a type that has attachment points</para>
            <para>(i.e. quadpoints). Quadpoints are the vertices of the rectangle that</para>
            <para>encompasses the texts affected by the annotation. They provide the</para>
            <para>coordinates in the page where the annotation is attached. Only text markup</para>
            <para>annotations (i.e. highlight, strikeout, squiggly, and underline) and link</para>
            <para>annotations have quadpoints.</para>
            <para>annot  - handle to an annotation.</para>
            <para>Returns true if the annotation is of a type that has quadpoints, false</para>
            <para>otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotSetAttachmentPoints(PDFiumCore.FpdfAnnotationT,System.UInt64,PDFiumCore.FS_QUADPOINTSF)">
            <summary>
            <para>Experimental API.</para>
            <para>Replace the attachment points (i.e. quadpoints) set of an annotation at</para>
            <para>|quad_index|. This index needs to be within the result of</para>
            <para>FPDFAnnot_CountAttachmentPoints().</para>
            <para>If the annotation's appearance stream is defined and this annotation is of a</para>
            <para>type with quadpoints, then update the bounding box too if the new quadpoints</para>
            <para>define a bigger one.</para>
            <para>annot       - handle to an annotation.</para>
            <para>quad_index  - index of the set of quadpoints.</para>
            <para>quad_points - the quadpoints to be set.</para>
            <para>Returns true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotAppendAttachmentPoints(PDFiumCore.FpdfAnnotationT,PDFiumCore.FS_QUADPOINTSF)">
            <summary>
            <para>Experimental API.</para>
            <para>Append to the list of attachment points (i.e. quadpoints) of an annotation.</para>
            <para>If the annotation's appearance stream is defined and this annotation is of a</para>
            <para>type with quadpoints, then update the bounding box too if the new quadpoints</para>
            <para>define a bigger one.</para>
            <para>annot       - handle to an annotation.</para>
            <para>quad_points - the quadpoints to be set.</para>
            <para>Returns true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotCountAttachmentPoints(PDFiumCore.FpdfAnnotationT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the number of sets of quadpoints of an annotation.</para>
            <para>annot  - handle to an annotation.</para>
            <para>Returns the number of sets of quadpoints, or 0 on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetAttachmentPoints(PDFiumCore.FpdfAnnotationT,System.UInt64,PDFiumCore.FS_QUADPOINTSF)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the attachment points (i.e. quadpoints) of an annotation.</para>
            <para>annot       - handle to an annotation.</para>
            <para>quad_index  - index of the set of quadpoints.</para>
            <para>quad_points - receives the quadpoints; must not be NULL.</para>
            <para>Returns true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotSetRect(PDFiumCore.FpdfAnnotationT,PDFiumCore.FS_RECTF_)">
            <summary>
            <para>Experimental API.</para>
            <para>Set the annotation rectangle defining the location of the annotation. If the</para>
            <para>annotation's appearance stream is defined and this annotation is of a type</para>
            <para>without quadpoints, then update the bounding box too if the new rectangle</para>
            <para>defines a bigger one.</para>
            <para>annot  - handle to an annotation.</para>
            <para>rect   - the annotation rectangle to be set.</para>
            <para>Returns true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetRect(PDFiumCore.FpdfAnnotationT,PDFiumCore.FS_RECTF_)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the annotation rectangle defining the location of the annotation.</para>
            <para>annot  - handle to an annotation.</para>
            <para>rect   - receives the rectangle; must not be NULL.</para>
            <para>Returns true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetVertices(PDFiumCore.FpdfAnnotationT,PDFiumCore.FS_POINTF_,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the vertices of a polygon or polyline annotation. |buffer| is an array of</para>
            <para>points of the annotation. If |length| is less than the returned length, or</para>
            <para>|annot| or |buffer| is NULL, |buffer| will not be modified.</para>
            <para>annot  - handle to an annotation, as returned by e.g. FPDFPage_GetAnnot()</para>
            <para>buffer - buffer for holding the points.</para>
            <para>length - length of the buffer in points.</para>
            <para>Returns the number of points if the annotation is of type polygon or</para>
            <para>polyline, 0 otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetInkListCount(PDFiumCore.FpdfAnnotationT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the number of paths in the ink list of an ink annotation.</para>
            <para>annot  - handle to an annotation, as returned by e.g. FPDFPage_GetAnnot()</para>
            <para>Returns the number of paths in the ink list if the annotation is of type ink,</para>
            <para>0 otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetInkListPath(PDFiumCore.FpdfAnnotationT,System.UInt32,PDFiumCore.FS_POINTF_,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get a path in the ink list of an ink annotation. |buffer| is an array of</para>
            <para>points of the path. If |length| is less than the returned length, or |annot|</para>
            <para>or |buffer| is NULL, |buffer| will not be modified.</para>
            <para>annot  - handle to an annotation, as returned by e.g. FPDFPage_GetAnnot()</para>
            <para>path_index - index of the path</para>
            <para>buffer - buffer for holding the points.</para>
            <para>length - length of the buffer in points.</para>
            <para>Returns the number of points of the path if the annotation is of type ink, 0</para>
            <para>otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetLine(PDFiumCore.FpdfAnnotationT,PDFiumCore.FS_POINTF_,PDFiumCore.FS_POINTF_)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the starting and ending coordinates of a line annotation.</para>
            <para>annot  - handle to an annotation, as returned by e.g. FPDFPage_GetAnnot()</para>
            <para>start - starting point</para>
            <para>end - ending point</para>
            <para>Returns true if the annotation is of type line, |start| and |end| are not</para>
            <para>NULL, false otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotSetBorder(PDFiumCore.FpdfAnnotationT,System.Single,System.Single,System.Single)">
            <summary>
            <para>Experimental API.</para>
            <para>Set the characteristics of the annotation's border (rounded rectangle).</para>
            <para>annot              - handle to an annotation</para>
            <para>horizontal_radius  - horizontal corner radius, in default user space units</para>
            <para>vertical_radius    - vertical corner radius, in default user space units</para>
            <para>border_width       - border width, in default user space units</para>
            <para>Returns true if setting the border for |annot| succeeds, false otherwise.</para>
            <para>If |annot| contains an appearance stream that overrides the border values,</para>
            <para>then the appearance stream will be removed on success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetBorder(PDFiumCore.FpdfAnnotationT,System.Single@,System.Single@,System.Single@)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the characteristics of the annotation's border (rounded rectangle).</para>
            <para>annot              - handle to an annotation</para>
            <para>horizontal_radius  - horizontal corner radius, in default user space units</para>
            <para>vertical_radius    - vertical corner radius, in default user space units</para>
            <para>border_width       - border width, in default user space units</para>
            <para>Returns true if |horizontal_radius|, |vertical_radius| and |border_width| are</para>
            <para>not NULL, false otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetFormAdditionalActionJavaScript(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfAnnotationT,System.Int32,System.UInt16@,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the JavaScript of an event of the annotation's additional actions.</para>
            <para>|buffer| is only modified if |buflen| is large enough to hold the whole</para>
            <para>JavaScript string. If |buflen| is smaller, the total size of the JavaScript</para>
            <para>is still returned, but nothing is copied.  If there is no JavaScript for</para>
            <para>|event| in |annot|, an empty string is written to |buf| and 2 is returned,</para>
            <para>denoting the size of the null terminator in the buffer.  On other errors,</para>
            <para>nothing is written to |buffer| and 0 is returned.</para>
            <para>hHandle     -   handle to the form fill module, returned by</para>
            <para>FPDFDOC_InitFormFillEnvironment().</para>
            <para>annot       -   handle to an interactive form annotation.</para>
            <para>event       -   event type, one of the FPDF_ANNOT_AACTION_* values.</para>
            <para>buffer      -   buffer for holding the value string, encoded in UTF-16LE.</para>
            <para>buflen      -   length of the buffer in bytes.</para>
            <para>Returns the length of the string value in bytes, including the 2-byte</para>
            <para>null terminator.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotHasKey(PDFiumCore.FpdfAnnotationT,System.String)">
            <summary>
            <para>Experimental API.</para>
            <para>Check if |annot|'s dictionary has |key| as a key.</para>
            <para>annot  - handle to an annotation.</para>
            <para>key    - the key to look for, encoded in UTF-8.</para>
            <para>Returns true if |key| exists.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetValueType(PDFiumCore.FpdfAnnotationT,System.String)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the type of the value corresponding to |key| in |annot|'s dictionary.</para>
            <para>annot  - handle to an annotation.</para>
            <para>key    - the key to look for, encoded in UTF-8.</para>
            <para>Returns the type of the dictionary value.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotSetStringValue(PDFiumCore.FpdfAnnotationT,System.String,System.UInt16@)">
            <summary>
            <para>Experimental API.</para>
            <para>Set the string value corresponding to |key| in |annot|'s dictionary,</para>
            <para>overwriting the existing value if any. The value type would be</para>
            <para>FPDF_OBJECT_STRING after this function call succeeds.</para>
            <para>annot  - handle to an annotation.</para>
            <para>key    - the key to the dictionary entry to be set, encoded in UTF-8.</para>
            <para>value  - the string value to be set, encoded in UTF-16LE.</para>
            <para>Returns true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetStringValue(PDFiumCore.FpdfAnnotationT,System.String,System.UInt16@,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the string value corresponding to |key| in |annot|'s dictionary. |buffer|</para>
            <para>is only modified if |buflen| is longer than the length of contents. Note that</para>
            <para>if |key| does not exist in the dictionary or if |key|'s corresponding value</para>
            <para>in the dictionary is not a string (i.e. the value is not of type</para>
            <para>FPDF_OBJECT_STRING or FPDF_OBJECT_NAME), then an empty string would be copied</para>
            <para>to |buffer| and the return value would be 2. On other errors, nothing would</para>
            <para>be added to |buffer| and the return value would be 0.</para>
            <para>annot  - handle to an annotation.</para>
            <para>key    - the key to the requested dictionary entry, encoded in UTF-8.</para>
            <para>buffer - buffer for holding the value string, encoded in UTF-16LE.</para>
            <para>buflen - length of the buffer in bytes.</para>
            <para>Returns the length of the string value in bytes.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetNumberValue(PDFiumCore.FpdfAnnotationT,System.String,System.Single@)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the float value corresponding to |key| in |annot|'s dictionary. Writes</para>
            <para>value to |value| and returns True if |key| exists in the dictionary and</para>
            <para>|key|'s corresponding value is a number (FPDF_OBJECT_NUMBER), False</para>
            <para>otherwise.</para>
            <para>annot  - handle to an annotation.</para>
            <para>key    - the key to the requested dictionary entry, encoded in UTF-8.</para>
            <para>value  - receives the value, must not be NULL.</para>
            <para>Returns True if value found, False otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotSetAP(PDFiumCore.FpdfAnnotationT,System.Int32,System.UInt16@)">
            <summary>
            <para>Experimental API.</para>
            <para>Set the AP (appearance string) in |annot|'s dictionary for a given</para>
            <para>|appearanceMode|.</para>
            <para>annot          - handle to an annotation.</para>
            <para>appearanceMode - the appearance mode (normal, rollover or down) for which</para>
            <para>to get the AP.</para>
            <para>value          - the string value to be set, encoded in UTF-16LE. If</para>
            <para>nullptr is passed, the AP is cleared for that mode. If the</para>
            <para>mode is Normal, APs for all modes are cleared.</para>
            <para>Returns true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetAP(PDFiumCore.FpdfAnnotationT,System.Int32,System.UInt16@,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the AP (appearance string) from |annot|'s dictionary for a given</para>
            <para>|appearanceMode|.</para>
            <para>|buffer| is only modified if |buflen| is large enough to hold the whole AP</para>
            <para>string. If |buflen| is smaller, the total size of the AP is still returned,</para>
            <para>but nothing is copied.</para>
            <para>If there is no appearance stream for |annot| in |appearanceMode|, an empty</para>
            <para>string is written to |buf| and 2 is returned.</para>
            <para>On other errors, nothing is written to |buffer| and 0 is returned.</para>
            <para>annot          - handle to an annotation.</para>
            <para>appearanceMode - the appearance mode (normal, rollover or down) for which</para>
            <para>to get the AP.</para>
            <para>buffer         - buffer for holding the value string, encoded in UTF-16LE.</para>
            <para>buflen         - length of the buffer in bytes.</para>
            <para>Returns the length of the string value in bytes.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetLinkedAnnot(PDFiumCore.FpdfAnnotationT,System.String)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the annotation corresponding to |key| in |annot|'s dictionary. Common</para>
            <para>keys for linking annotations include &quot;IRT&quot; and &quot;Popup&quot;. Must call</para>
            <para>FPDFPage_CloseAnnot() when the annotation returned by this function is no</para>
            <para>longer needed.</para>
            <para>annot  - handle to an annotation.</para>
            <para>key    - the key to the requested dictionary entry, encoded in UTF-8.</para>
            <para>Returns a handle to the linked annotation object, or NULL on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetFlags(PDFiumCore.FpdfAnnotationT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the annotation flags of |annot|.</para>
            <para>annot    - handle to an annotation.</para>
            <para>Returns the annotation flags.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotSetFlags(PDFiumCore.FpdfAnnotationT,System.Int32)">
            <summary>
            <para>Experimental API.</para>
            <para>Set the |annot|'s flags to be of the value |flags|.</para>
            <para>annot      - handle to an annotation.</para>
            <para>flags      - the flag values to be set.</para>
            <para>Returns true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetFormFieldFlags(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfAnnotationT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the annotation flags of |annot|.</para>
            <para>hHandle     -   handle to the form fill module, returned by</para>
            <para>FPDFDOC_InitFormFillEnvironment().</para>
            <para>annot       -   handle to an interactive form annotation.</para>
            <para>Returns the annotation flags specific to interactive forms.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetFormFieldAtPoint(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,PDFiumCore.FS_POINTF_)">
            <summary>
            <para>Experimental API.</para>
            <para>Retrieves an interactive form annotation whose rectangle contains a given</para>
            <para>point on a page. Must call FPDFPage_CloseAnnot() when the annotation returned</para>
            <para>is no longer needed.</para>
            <para>hHandle     -   handle to the form fill module, returned by</para>
            <para>FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   handle to the page, returned by FPDF_LoadPage function.</para>
            <para>point       -   position in PDF &quot;user space&quot;.</para>
            <para>Returns the interactive form annotation whose rectangle contains the given</para>
            <para>coordinates on the page. If there is no such annotation, return NULL.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetFormFieldName(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfAnnotationT,System.UInt16@,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Gets the name of |annot|, which is an interactive form annotation.</para>
            <para>|buffer| is only modified if |buflen| is longer than the length of contents.</para>
            <para>In case of error, nothing will be added to |buffer| and the return value will</para>
            <para>be 0. Note that return value of empty string is 2 for &quot;\0\0&quot;.</para>
            <para>hHandle     -   handle to the form fill module, returned by</para>
            <para>FPDFDOC_InitFormFillEnvironment().</para>
            <para>annot       -   handle to an interactive form annotation.</para>
            <para>buffer      -   buffer for holding the name string, encoded in UTF-16LE.</para>
            <para>buflen      -   length of the buffer in bytes.</para>
            <para>Returns the length of the string value in bytes.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetFormFieldAlternateName(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfAnnotationT,System.UInt16@,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Gets the alternate name of |annot|, which is an interactive form annotation.</para>
            <para>|buffer| is only modified if |buflen| is longer than the length of contents.</para>
            <para>In case of error, nothing will be added to |buffer| and the return value will</para>
            <para>be 0. Note that return value of empty string is 2 for &quot;\0\0&quot;.</para>
            <para>hHandle     -   handle to the form fill module, returned by</para>
            <para>FPDFDOC_InitFormFillEnvironment().</para>
            <para>annot       -   handle to an interactive form annotation.</para>
            <para>buffer      -   buffer for holding the alternate name string, encoded in</para>
            <para>UTF-16LE.</para>
            <para>buflen      -   length of the buffer in bytes.</para>
            <para>Returns the length of the string value in bytes.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetFormFieldType(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfAnnotationT)">
            <summary>
            <para>Experimental API.</para>
            <para>Gets the form field type of |annot|, which is an interactive form annotation.</para>
            <para>hHandle     -   handle to the form fill module, returned by</para>
            <para>FPDFDOC_InitFormFillEnvironment().</para>
            <para>annot       -   handle to an interactive form annotation.</para>
            <para>Returns the type of the form field (one of the FPDF_FORMFIELD_* values) on</para>
            <para>success. Returns -1 on error.</para>
            <para>See field types in fpdf_formfill.h.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetFormFieldValue(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfAnnotationT,System.UInt16@,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Gets the value of |annot|, which is an interactive form annotation.</para>
            <para>|buffer| is only modified if |buflen| is longer than the length of contents.</para>
            <para>In case of error, nothing will be added to |buffer| and the return value will</para>
            <para>be 0. Note that return value of empty string is 2 for &quot;\0\0&quot;.</para>
            <para>hHandle     -   handle to the form fill module, returned by</para>
            <para>FPDFDOC_InitFormFillEnvironment().</para>
            <para>annot       -   handle to an interactive form annotation.</para>
            <para>buffer      -   buffer for holding the value string, encoded in UTF-16LE.</para>
            <para>buflen      -   length of the buffer in bytes.</para>
            <para>Returns the length of the string value in bytes.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetOptionCount(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfAnnotationT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the number of options in the |annot|'s &quot;Opt&quot; dictionary. Intended for</para>
            <para>use with listbox and combobox widget annotations.</para>
            <para>hHandle - handle to the form fill module, returned by</para>
            <para>FPDFDOC_InitFormFillEnvironment.</para>
            <para>annot   - handle to an annotation.</para>
            <para>Returns the number of options in &quot;Opt&quot; dictionary on success. Return value</para>
            <para>will be -1 if annotation does not have an &quot;Opt&quot; dictionary or other error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetOptionLabel(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfAnnotationT,System.Int32,System.UInt16@,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the string value for the label of the option at |index| in |annot|'s</para>
            <para>&quot;Opt&quot; dictionary. Intended for use with listbox and combobox widget</para>
            <para>annotations. |buffer| is only modified if |buflen| is longer than the length</para>
            <para>of contents. If index is out of range or in case of other error, nothing</para>
            <para>will be added to |buffer| and the return value will be 0. Note that</para>
            <para>return value of empty string is 2 for &quot;\0\0&quot;.</para>
            <para>hHandle - handle to the form fill module, returned by</para>
            <para>FPDFDOC_InitFormFillEnvironment.</para>
            <para>annot   - handle to an annotation.</para>
            <para>index   - numeric index of the option in the &quot;Opt&quot; array</para>
            <para>buffer  - buffer for holding the value string, encoded in UTF-16LE.</para>
            <para>buflen  - length of the buffer in bytes.</para>
            <para>Returns the length of the string value in bytes.</para>
            <para>If |annot| does not have an &quot;Opt&quot; array, |index| is out of range or if any</para>
            <para>other error occurs, returns 0.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotIsOptionSelected(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfAnnotationT,System.Int32)">
            <summary>
            <para>Experimental API.</para>
            <para>Determine whether or not the option at |index| in |annot|'s &quot;Opt&quot; dictionary</para>
            <para>is selected. Intended for use with listbox and combobox widget annotations.</para>
            <para>handle  - handle to the form fill module, returned by</para>
            <para>FPDFDOC_InitFormFillEnvironment.</para>
            <para>annot   - handle to an annotation.</para>
            <para>index   - numeric index of the option in the &quot;Opt&quot; array.</para>
            <para>Returns true if the option at |index| in |annot|'s &quot;Opt&quot; dictionary is</para>
            <para>selected, false otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetFontSize(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfAnnotationT,System.Single@)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the float value of the font size for an |annot| with variable text.</para>
            <para>If 0, the font is to be auto-sized: its size is computed as a function of</para>
            <para>the height of the annotation rectangle.</para>
            <para>hHandle - handle to the form fill module, returned by</para>
            <para>FPDFDOC_InitFormFillEnvironment.</para>
            <para>annot   - handle to an annotation.</para>
            <para>value   - Required. Float which will be set to font size on success.</para>
            <para>Returns true if the font size was set in |value|, false on error or if</para>
            <para>|value| not provided.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotIsChecked(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfAnnotationT)">
            <summary>
            <para>Experimental API.</para>
            <para>Determine if |annot| is a form widget that is checked. Intended for use with</para>
            <para>checkbox and radio button widgets.</para>
            <para>hHandle - handle to the form fill module, returned by</para>
            <para>FPDFDOC_InitFormFillEnvironment.</para>
            <para>annot   - handle to an annotation.</para>
            <para>Returns true if |annot| is a form widget and is checked, false otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotSetFocusableSubtypes(PDFiumCore.FpdfFormHandleT,System.Int32@,System.UInt64)">
            <summary>
            <para>Experimental API.</para>
            <para>Set the list of focusable annotation subtypes. Annotations of subtype</para>
            <para>FPDF_ANNOT_WIDGET are by default focusable. New subtypes set using this API</para>
            <para>will override the existing subtypes.</para>
            <para>hHandle  - handle to the form fill module, returned by</para>
            <para>FPDFDOC_InitFormFillEnvironment.</para>
            <para>subtypes - list of annotation subtype which can be tabbed over.</para>
            <para>count    - total number of annotation subtype in list.</para>
            <para>Returns true if list of annotation subtype is set successfully, false</para>
            <para>otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetFocusableSubtypesCount(PDFiumCore.FpdfFormHandleT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the count of focusable annotation subtypes as set by host</para>
            <para>for a |hHandle|.</para>
            <para>hHandle  - handle to the form fill module, returned by</para>
            <para>FPDFDOC_InitFormFillEnvironment.</para>
            <para>Returns the count of focusable annotation subtypes or -1 on error.</para>
            <para>Note : Annotations of type FPDF_ANNOT_WIDGET are by default focusable.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetFocusableSubtypes(PDFiumCore.FpdfFormHandleT,System.Int32@,System.UInt64)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the list of focusable annotation subtype as set by host.</para>
            <para>hHandle  - handle to the form fill module, returned by</para>
            <para>FPDFDOC_InitFormFillEnvironment.</para>
            <para>subtypes - receives the list of annotation subtype which can be tabbed</para>
            <para>over. Caller must have allocated |subtypes| more than or</para>
            <para>equal to the count obtained from</para>
            <para>FPDFAnnot_GetFocusableSubtypesCount() API.</para>
            <para>count    - size of |subtypes|.</para>
            <para>Returns true on success and set list of annotation subtype to |subtypes|,</para>
            <para>false otherwise.</para>
            <para>Note : Annotations of type FPDF_ANNOT_WIDGET are by default focusable.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetLink(PDFiumCore.FpdfAnnotationT)">
            <summary>
            <para>Experimental API.</para>
            <para>Gets FPDF_LINK object for |annot|. Intended to use for link annotations.</para>
            <para>annot   - handle to an annotation.</para>
            <para>Returns FPDF_LINK from the FPDF_ANNOTATION and NULL on failure,</para>
            <para>if the input annot is NULL or input annot's subtype is not link.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetFormControlCount(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfAnnotationT)">
            <summary>
            <para>Experimental API.</para>
            <para>Gets the count of annotations in the |annot|'s control group.</para>
            <para>A group of interactive form annotations is collectively called a form</para>
            <para>control group. Here, |annot|, an interactive form annotation, should be</para>
            <para>either a radio button or a checkbox.</para>
            <para>hHandle - handle to the form fill module, returned by</para>
            <para>FPDFDOC_InitFormFillEnvironment.</para>
            <para>annot   - handle to an annotation.</para>
            <para>Returns number of controls in its control group or -1 on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetFormControlIndex(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfAnnotationT)">
            <summary>
            <para>Experimental API.</para>
            <para>Gets the index of |annot| in |annot|'s control group.</para>
            <para>A group of interactive form annotations is collectively called a form</para>
            <para>control group. Here, |annot|, an interactive form annotation, should be</para>
            <para>either a radio button or a checkbox.</para>
            <para>hHandle - handle to the form fill module, returned by</para>
            <para>FPDFDOC_InitFormFillEnvironment.</para>
            <para>annot   - handle to an annotation.</para>
            <para>Returns index of a given |annot| in its control group or -1 on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetFormFieldExportValue(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfAnnotationT,System.UInt16@,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Gets the export value of |annot| which is an interactive form annotation.</para>
            <para>Intended for use with radio button and checkbox widget annotations.</para>
            <para>|buffer| is only modified if |buflen| is longer than the length of contents.</para>
            <para>In case of error, nothing will be added to |buffer| and the return value</para>
            <para>will be 0. Note that return value of empty string is 2 for &quot;\0\0&quot;.</para>
            <para>hHandle     -   handle to the form fill module, returned by</para>
            <para>FPDFDOC_InitFormFillEnvironment().</para>
            <para>annot       -   handle to an interactive form annotation.</para>
            <para>buffer      -   buffer for holding the value string, encoded in UTF-16LE.</para>
            <para>buflen      -   length of the buffer in bytes.</para>
            <para>Returns the length of the string value in bytes.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotSetURI(PDFiumCore.FpdfAnnotationT,System.String)">
            <summary>
            <para>Experimental API.</para>
            <para>Add a URI action to |annot|, overwriting the existing action, if any.</para>
            <para>annot  - handle to a link annotation.</para>
            <para>uri    - the URI to be set, encoded in 7-bit ASCII.</para>
            <para>Returns true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotGetFileAttachment(PDFiumCore.FpdfAnnotationT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the attachment from |annot|.</para>
            <para>annot - handle to a file annotation.</para>
            <para>Returns the handle to the attachment object, or NULL on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_annot.FPDFAnnotAddFileAttachment(PDFiumCore.FpdfAnnotationT,System.UInt16@)">
            <summary>
            <para>Experimental API.</para>
            <para>Add an embedded file with |name| to |annot|.</para>
            <para>annot    - handle to a file annotation.</para>
            <para>name     - name of the new attachment.</para>
            <para>Returns a handle to the new attachment object, or NULL on failure.</para>
            </summary>
        </member>
        <member name="P:PDFiumCore.FPDF_FORMFILLINFO.FFI_DoURIActionWithKeyboardModifier">
            <summary>
            <para>Method: FFI_DoURIActionWithKeyboardModifier</para>
            <para>Ask the implementation to navigate to a uniform resource identifier</para>
            <para>with the specified modifiers.</para>
            <para>Interface Version:</para>
            <para>Ignored if |version|&lt;2.</para>
            <para>Implementation Required:</para>
            <para>No</para>
            <para>Parameters:</para>
            <para>param           -   Pointer to the interface structure itself.</para>
            <para>uri             -   A byte string which indicates the uniform</para>
            <para>resource identifier, terminated by 0.</para>
            <para>modifiers       -   Keyboard modifier that indicates which of</para>
            <para>the virtual keys are down, if any.</para>
            <para>Return value:</para>
            <para>None.</para>
            <para>Comments:</para>
            <para>If the embedder who is version 2 and does not implement this API,</para>
            <para>then a call will be redirected to FFI_DoURIAction.</para>
            <para>See the URI actions description of&lt;Reference, version 1.7&gt;&gt;</para>
            <para>for more details.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FPDFDOC_InitFormFillEnvironment(PDFiumCore.FpdfDocumentT,PDFiumCore.FPDF_FORMFILLINFO)">
            <summary>
            <para>Function: FPDFDOC_InitFormFillEnvironment</para>
            <para>Initialize form fill environment.</para>
            <para>Parameters:</para>
            <para>document        -   Handle to document from FPDF_LoadDocument().</para>
            <para>formInfo        -   Pointer to a FPDF_FORMFILLINFO structure.</para>
            <para>Return Value:</para>
            <para>Handle to the form fill module, or NULL on failure.</para>
            <para>Comments: This function should be called before any form fill operation. The FPDF_FORMFILLINFO passed in via |formInfo| must remain valid until the returned FPDF_FORMHANDLE is closed.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FPDFDOC_ExitFormFillEnvironment(PDFiumCore.FpdfFormHandleT)">
            <summary>
            <para>Function: FPDFDOC_ExitFormFillEnvironment</para>
            <para>Take ownership of |hHandle| and exit form fill environment.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>Return Value:</para>
            <para>None.</para>
            <para>Comments: This function is a no-op when |hHandle| is null.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_OnAfterLoadPage(PDFiumCore.FpdfPageT,PDFiumCore.FpdfFormHandleT)">
            <summary>
            <para>Function: FORM_OnAfterLoadPage</para>
            <para>This method is required for implementing all the form related</para>
            <para>functions. Should be invoked after user successfully loaded a</para>
            <para>PDF page, and FPDFDOC_InitFormFillEnvironment() has been invoked.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>Return Value:</para>
            <para>None.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_OnBeforeClosePage(PDFiumCore.FpdfPageT,PDFiumCore.FpdfFormHandleT)">
            <summary>
            <para>Function: FORM_OnBeforeClosePage</para>
            <para>This method is required for implementing all the form related</para>
            <para>functions. Should be invoked before user closes the PDF page.</para>
            <para>Parameters:</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>Return Value:</para>
            <para>None.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_DoDocumentJSAction(PDFiumCore.FpdfFormHandleT)">
            <summary>
            <para>Function: FORM_DoDocumentJSAction</para>
            <para>This method is required for performing document-level JavaScript</para>
            <para>actions. It should be invoked after the PDF document has been loaded.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>Return Value:</para>
            <para>None.</para>
            <para>Comments: If there is document-level JavaScript action embedded in the document, this method will execute the JavaScript action. Otherwise, the method will do nothing.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_DoDocumentOpenAction(PDFiumCore.FpdfFormHandleT)">
            <summary>
            <para>Function: FORM_DoDocumentOpenAction</para>
            <para>This method is required for performing open-action when the document</para>
            <para>is opened.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>Return Value:</para>
            <para>None.</para>
            <para>Comments: This method will do nothing if there are no open-actions embedded in the document.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_DoDocumentAAction(PDFiumCore.FpdfFormHandleT,System.Int32)">
            <summary>
            <para>Function: FORM_DoDocumentAAction</para>
            <para>This method is required for performing the document's</para>
            <para>additional-action.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module. Returned by FPDFDOC_InitFormFillEnvironment.</para>
            <para>aaType      -   The type of the additional-actions which defined above.</para>
            <para>Return Value:</para>
            <para>None.</para>
            <para>Comments: This method will do nothing if there is no document additional-action corresponding to the specified |aaType|.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_DoPageAAction(PDFiumCore.FpdfPageT,PDFiumCore.FpdfFormHandleT,System.Int32)">
            <summary>
            <para>Function: FORM_DoPageAAction</para>
            <para>This method is required for performing the page object's</para>
            <para>additional-action when opened or closed.</para>
            <para>Parameters:</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>aaType      -   The type of the page object's additional-actions which defined above.</para>
            <para>Return Value:</para>
            <para>None.</para>
            <para>Comments: This method will do nothing if no additional-action corresponding to the specified |aaType| exists.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_OnMouseMove(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,System.Int32,System.Double,System.Double)">
            <summary>
            <para>Function: FORM_OnMouseMove</para>
            <para>Call this member function when the mouse cursor moves.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>modifier    -   Indicates whether various virtual keys are down.</para>
            <para>page_x      -   Specifies the x-coordinate of the cursor in PDF user space.</para>
            <para>page_y      -   Specifies the y-coordinate of the cursor in PDF user space.</para>
            <para>Return Value:</para>
            <para>True indicates success; otherwise false.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_OnMouseWheel(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,System.Int32,PDFiumCore.FS_POINTF_,System.Int32,System.Int32)">
            <summary>
            <para>Experimental API</para>
            <para>Function: FORM_OnMouseWheel</para>
            <para>Call this member function when the user scrolls the mouse wheel.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>modifier    -   Indicates whether various virtual keys are down.</para>
            <para>page_coord  -   Specifies the coordinates of the cursor in PDF user space.</para>
            <para>delta_x     -   Specifies the amount of wheel movement on the x-axis, in units of platform-agnostic wheel deltas. Negative values mean left.</para>
            <para>delta_y     -   Specifies the amount of wheel movement on the y-axis, in units of platform-agnostic wheel deltas. Negative values mean down.</para>
            <para>Return Value:</para>
            <para>True indicates success; otherwise false.</para>
            <para>Comments: For |delta_x| and |delta_y|, the caller must normalize platform-specific wheel deltas. e.g. On Windows, a delta value of 240 for a WM_MOUSEWHEEL event normalizes to 2, since Windows defines WHEEL_DELTA as 120.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_OnFocus(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,System.Int32,System.Double,System.Double)">
            <summary>
            <para>Function: FORM_OnFocus</para>
            <para>This function focuses the form annotation at a given point. If the</para>
            <para>annotation at the point already has focus, nothing happens. If there</para>
            <para>is no annotation at the point, removes form focus.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>modifier    -   Indicates whether various virtual keys are down.</para>
            <para>page_x      -   Specifies the x-coordinate of the cursor in PDF user space.</para>
            <para>page_y      -   Specifies the y-coordinate of the cursor in PDF user space.</para>
            <para>Return Value:</para>
            <para>True if there is an annotation at the given point and it has focus.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_OnLButtonDown(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,System.Int32,System.Double,System.Double)">
            <summary>
            <para>Function: FORM_OnLButtonDown</para>
            <para>Call this member function when the user presses the left</para>
            <para>mouse button.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>modifier    -   Indicates whether various virtual keys are down.</para>
            <para>page_x      -   Specifies the x-coordinate of the cursor in PDF user space.</para>
            <para>page_y      -   Specifies the y-coordinate of the cursor in PDF user space.</para>
            <para>Return Value:</para>
            <para>True indicates success; otherwise false.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_OnRButtonDown(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,System.Int32,System.Double,System.Double)">
            <summary>
            <para>Function: FORM_OnRButtonDown</para>
            <para>Same as above, execpt for the right mouse button.</para>
            <para>Comments: At the present time, has no effect except in XFA builds, but is included for the sake of symmetry.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_OnLButtonUp(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,System.Int32,System.Double,System.Double)">
            <summary>
            <para>Function: FORM_OnRButtonDown</para>
            <para>Same as above, execpt for the right mouse button.</para>
            <para>Comments: At the present time, has no effect except in XFA builds, but is included for the sake of symmetry.</para>
            <para></para>
            <para>FPDF_EXPORT FPDF_BOOL FPDF_CALLCONV FORM_OnRButtonDown(FPDF_FORMHANDLE hHandle, FPDF_PAGE page, int modifier, double page_x, double page_y);</para>
            <para></para>
            <para>Function: FORM_OnLButtonUp Call this member function when the user releases the left mouse button.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>modifier    -   Indicates whether various virtual keys are down.</para>
            <para>page_x      -   Specifies the x-coordinate of the cursor in device.</para>
            <para>page_y      -   Specifies the y-coordinate of the cursor in device.</para>
            <para>Return Value:</para>
            <para>True indicates success; otherwise false.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_OnRButtonUp(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,System.Int32,System.Double,System.Double)">
            <summary>
            <para>Function: FORM_OnRButtonUp</para>
            <para>Same as above, execpt for the right mouse button.</para>
            <para>Comments: At the present time, has no effect except in XFA builds, but is included for the sake of symmetry.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_OnLButtonDoubleClick(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,System.Int32,System.Double,System.Double)">
            <summary>
            <para>Function: FORM_OnLButtonDoubleClick</para>
            <para>Call this member function when the user double clicks the</para>
            <para>left mouse button.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>modifier    -   Indicates whether various virtual keys are down.</para>
            <para>page_x      -   Specifies the x-coordinate of the cursor in PDF user space.</para>
            <para>page_y      -   Specifies the y-coordinate of the cursor in PDF user space.</para>
            <para>Return Value:</para>
            <para>True indicates success; otherwise false.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_OnKeyDown(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,System.Int32,System.Int32)">
            <summary>
            <para>Function: FORM_OnKeyDown</para>
            <para>Call this member function when a nonsystem key is pressed.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, aseturned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>nKeyCode    -   The virtual-key code of the given key (see fpdf_fwlevent.h for virtual key codes).</para>
            <para>modifier    -   Mask of key flags (see fpdf_fwlevent.h for key flag values).</para>
            <para>Return Value:</para>
            <para>True indicates success; otherwise false.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_OnKeyUp(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,System.Int32,System.Int32)">
            <summary>
            <para>Function: FORM_OnKeyUp</para>
            <para>Call this member function when a nonsystem key is released.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>nKeyCode    -   The virtual-key code of the given key (see fpdf_fwlevent.h for virtual key codes).</para>
            <para>modifier    -   Mask of key flags (see fpdf_fwlevent.h for key flag values).</para>
            <para>Return Value:</para>
            <para>True indicates success; otherwise false.</para>
            <para>Comments: Currently unimplemented and always returns false. PDFium reserves this API and may implement it in the future on an as-needed basis.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_OnChar(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,System.Int32,System.Int32)">
            <summary>
            <para>Function: FORM_OnChar</para>
            <para>Call this member function when a keystroke translates to a</para>
            <para>nonsystem character.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>nChar       -   The character code value itself.</para>
            <para>modifier    -   Mask of key flags (see fpdf_fwlevent.h for key flag values).</para>
            <para>Return Value:</para>
            <para>True indicates success; otherwise false.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_GetFocusedText(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,System.IntPtr,System.UInt32)">
            <summary>
            <para>Experimental API</para>
            <para>Function: FORM_GetFocusedText</para>
            <para>Call this function to obtain the text within the current focused</para>
            <para>field, if any.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>buffer      -   Buffer for holding the form text, encoded in UTF-16LE. If NULL, |buffer| is not modified.</para>
            <para>buflen      -   Length of |buffer| in bytes. If |buflen| is less than the length of the form text string, |buffer| is not modified.</para>
            <para>Return Value:</para>
            <para>Length in bytes for the text in the focused field.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_GetSelectedText(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,System.IntPtr,System.UInt32)">
            <summary>
            <para>Function: FORM_GetSelectedText</para>
            <para>Call this function to obtain selected text within a form text</para>
            <para>field or form combobox text field.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>buffer      -   Buffer for holding the selected text, encoded in UTF-16LE. If NULL, |buffer| is not modified.</para>
            <para>buflen      -   Length of |buffer| in bytes. If |buflen| is less than the length of the selected text string, |buffer| is not modified.</para>
            <para>Return Value:</para>
            <para>Length in bytes of selected text in form text field or form combobox</para>
            <para>text field.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_ReplaceAndKeepSelection(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,System.UInt16@)">
            <summary>
            <para>Experimental API</para>
            <para>Function: FORM_ReplaceAndKeepSelection</para>
            <para>Call this function to replace the selected text in a form</para>
            <para>text field or user-editable form combobox text field with another</para>
            <para>text string (which can be empty or non-empty). If there is no</para>
            <para>selected text, this function will append the replacement text after</para>
            <para>the current caret position. After the insertion, the inserted text</para>
            <para>will be selected.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page, as Returned by FPDF_LoadPage().</para>
            <para>wsText      -   The text to be inserted, in UTF-16LE format.</para>
            <para>Return Value:</para>
            <para>None.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_ReplaceSelection(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,System.UInt16@)">
            <summary>
            <para>Function: FORM_ReplaceSelection</para>
            <para>Call this function to replace the selected text in a form</para>
            <para>text field or user-editable form combobox text field with another</para>
            <para>text string (which can be empty or non-empty). If there is no</para>
            <para>selected text, this function will append the replacement text after</para>
            <para>the current caret position. After the insertion, the selection range</para>
            <para>will be set to empty.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page, as Returned by FPDF_LoadPage().</para>
            <para>wsText      -   The text to be inserted, in UTF-16LE format.</para>
            <para>Return Value:</para>
            <para>None.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_SelectAllText(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT)">
            <summary>
            <para>Experimental API</para>
            <para>Function: FORM_SelectAllText</para>
            <para>Call this function to select all the text within the currently focused</para>
            <para>form text field or form combobox text field.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>Return Value:</para>
            <para>Whether the operation succeeded or not.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_CanUndo(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT)">
            <summary>
            <para>Function: FORM_CanUndo</para>
            <para>Find out if it is possible for the current focused widget in a given</para>
            <para>form to perform an undo operation.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>Return Value:</para>
            <para>True if it is possible to undo.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_CanRedo(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT)">
            <summary>
            <para>Function: FORM_CanRedo</para>
            <para>Find out if it is possible for the current focused widget in a given</para>
            <para>form to perform a redo operation.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>Return Value:</para>
            <para>True if it is possible to redo.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_Undo(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT)">
            <summary>
            <para>Function: FORM_Undo</para>
            <para>Make the current focussed widget perform an undo operation.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>Return Value:</para>
            <para>True if the undo operation succeeded.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_Redo(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT)">
            <summary>
            <para>Function: FORM_Redo</para>
            <para>Make the current focussed widget perform a redo operation.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>Return Value:</para>
            <para>True if the redo operation succeeded.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_ForceToKillFocus(PDFiumCore.FpdfFormHandleT)">
            <summary>
            <para>Function: FORM_ForceToKillFocus.</para>
            <para>Call this member function to force to kill the focus of the form</para>
            <para>field which has focus. If it would kill the focus of a form field,</para>
            <para>save the value of form field if was changed by theuser.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>Return Value:</para>
            <para>True indicates success; otherwise false.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_GetFocusedAnnot(PDFiumCore.FpdfFormHandleT,System.Int32@,PDFiumCore.FpdfAnnotationT)">
            <summary>
            <para>Experimental API.</para>
            <para>Function: FORM_GetFocusedAnnot.</para>
            <para>Call this member function to get the currently focused annotation.</para>
            <para>Parameters:</para>
            <para>handle      -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page_index  -   Buffer to hold the index number of the page which contains the focused annotation. 0 for the first page. Can't be NULL.</para>
            <para>annot       -   Buffer to hold the focused annotation. Can't be NULL.</para>
            <para>Return Value:</para>
            <para>On success, return true and write to the out parameters. Otherwise return</para>
            <para>false and leave the out parameters unmodified.</para>
            <para>Comments: Not currently supported for XFA forms - will report no focused annotation. Must call FPDFPage_CloseAnnot() when the annotation returned in |annot| by this function is no longer needed. This will return true and set |page_index| to -1 and |annot| to NULL, if there is no focused annotation.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_SetFocusedAnnot(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfAnnotationT)">
            <summary>
            <para>Experimental API.</para>
            <para>Function: FORM_SetFocusedAnnot.</para>
            <para>Call this member function to set the currently focused annotation.</para>
            <para>Parameters:</para>
            <para>handle      -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>annot       -   Handle to an annotation.</para>
            <para>Return Value:</para>
            <para>True indicates success; otherwise false.</para>
            <para>Comments: |annot| can't be NULL. To kill focus, use FORM_ForceToKillFocus() instead.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FPDFPageHasFormFieldAtPoint(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,System.Double,System.Double)">
            <summary>
            <para>Function: FPDFPage_HasFormFieldAtPoint</para>
            <para>Get the form field type by point.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module. Returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page. Returned by FPDF_LoadPage().</para>
            <para>page_x      -   X position in PDF &quot;user space&quot;.</para>
            <para>page_y      -   Y position in PDF &quot;user space&quot;.</para>
            <para>Return Value:</para>
            <para>Return the type of the form field; -1 indicates no field.</para>
            <para>See field types above.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FPDFPageFormFieldZOrderAtPoint(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,System.Double,System.Double)">
            <summary>
            <para>Function: FPDFPage_FormFieldZOrderAtPoint</para>
            <para>Get the form field z-order by point.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module. Returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>page        -   Handle to the page. Returned by FPDF_LoadPage().</para>
            <para>page_x      -   X position in PDF &quot;user space&quot;.</para>
            <para>page_y      -   Y position in PDF &quot;user space&quot;.</para>
            <para>Return Value:</para>
            <para>Return the z-order of the form field; -1 indicates no field.</para>
            <para>Higher numbers are closer to the front.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FPDF_SetFormFieldHighlightColor(PDFiumCore.FpdfFormHandleT,System.Int32,System.UInt32)">
            <summary>
            <para>Function: FPDF_SetFormFieldHighlightColor</para>
            <para>Set the highlight color of the specified (or all) form fields</para>
            <para>in the document.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>doc         -   Handle to the document, as returned by FPDF_LoadDocument().</para>
            <para>fieldType   -   A 32-bit integer indicating the type of a form field (defined above).</para>
            <para>color       -   The highlight color of the form field. Constructed by 0xxxrrggbb.</para>
            <para>Return Value:</para>
            <para>None.</para>
            <para>Comments: When the parameter fieldType is set to FPDF_FORMFIELD_UNKNOWN, the highlight color will be applied to all the form fields in the document. Please refresh the client window to show the highlight immediately if necessary.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FPDF_SetFormFieldHighlightAlpha(PDFiumCore.FpdfFormHandleT,System.Byte)">
            <summary>
            <para>Function: FPDF_SetFormFieldHighlightAlpha</para>
            <para>Set the transparency of the form field highlight color in the</para>
            <para>document.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>doc         -   Handle to the document, as returaned by FPDF_LoadDocument().</para>
            <para>alpha       -   The transparency of the form field highlight color, between 0-255.</para>
            <para>Return Value:</para>
            <para>None.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FPDF_RemoveFormFieldHighlight(PDFiumCore.FpdfFormHandleT)">
            <summary>
            <para>Function: FPDF_RemoveFormFieldHighlight</para>
            <para>Remove the form field highlight color in the document.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>Return Value:</para>
            <para>None.</para>
            <para>Comments: Please refresh the client window to remove the highlight immediately if necessary.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FPDF_FFLDraw(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfBitmapT,PDFiumCore.FpdfPageT,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            <para>Function: FPDF_FFLDraw</para>
            <para>Render FormFields and popup window on a page to a device independent</para>
            <para>bitmap.</para>
            <para>Parameters:</para>
            <para>hHandle      -   Handle to the form fill module, as returned by FPDFDOC_InitFormFillEnvironment().</para>
            <para>bitmap       -   Handle to the device independent bitmap (as the output buffer). Bitmap handles can be created by FPDFBitmap_Create().</para>
            <para>page         -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>start_x      -   Left pixel position of the display area in the device coordinates.</para>
            <para>start_y      -   Top pixel position of the display area in the device coordinates.</para>
            <para>size_x       -   Horizontal size (in pixels) for displaying the page.</para>
            <para>size_y       -   Vertical size (in pixels) for displaying the page.</para>
            <para>rotate       -   Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</para>
            <para>flags        -   0 for normal display, or combination of flags defined above.</para>
            <para>Return Value:</para>
            <para>None.</para>
            <para>Comments: This function is designed to render annotations that are user-interactive, which are widget annotations (for FormFields) and popup annotations. With the FPDF_ANNOT flag, this function will render a popup annotation when users mouse-hover on a non-widget annotation. Regardless of FPDF_ANNOT flag, this function will always render widget annotations for FormFields. In order to implement the FormFill functions, implementation should call this function after rendering functions, such as FPDF_RenderPageBitmap() or FPDF_RenderPageBitmap_Start(), have finished rendering the page contents.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FPDF_GetFormType(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Experimental API</para>
            <para>Function: FPDF_GetFormType</para>
            <para>Returns the type of form contained in the PDF document.</para>
            <para>Parameters:</para>
            <para>document - Handle to document.</para>
            <para>Return Value:</para>
            <para>Integer value representing one of the FORMTYPE_ values.</para>
            <para>Comments: If |document| is NULL, then the return value is FORMTYPE_NONE.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_SetIndexSelected(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,System.Int32,System.Int32)">
            <summary>
            <para>Experimental API</para>
            <para>Function: FORM_SetIndexSelected</para>
            <para>Selects/deselects the value at the given |index| of the focused</para>
            <para>annotation.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module. Returned by FPDFDOC_InitFormFillEnvironment.</para>
            <para>page        -   Handle to the page. Returned by FPDF_LoadPage</para>
            <para>index       -   0-based index of value to be set as selected/unselected</para>
            <para>selected    -   true to select, false to deselect</para>
            <para>Return Value:</para>
            <para>TRUE if the operation succeeded.</para>
            <para>FALSE if the operation failed or widget is not a supported type.</para>
            <para>Comments: Intended for use with listbox/combobox widget types. Comboboxes have at most a single value selected at a time which cannot be deselected. Deselect on a combobox is a no-op that returns false. Default implementation is a no-op that will return false for other types. Not currently supported for XFA forms - will return false.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FORM_IsIndexSelected(PDFiumCore.FpdfFormHandleT,PDFiumCore.FpdfPageT,System.Int32)">
            <summary>
            <para>Experimental API</para>
            <para>Function: FORM_IsIndexSelected</para>
            <para>Returns whether or not the value at |index| of the focused</para>
            <para>annotation is currently selected.</para>
            <para>Parameters:</para>
            <para>hHandle     -   Handle to the form fill module. Returned by FPDFDOC_InitFormFillEnvironment.</para>
            <para>page        -   Handle to the page. Returned by FPDF_LoadPage</para>
            <para>index       -   0-based Index of value to check</para>
            <para>Return Value:</para>
            <para>TRUE if value at |index| is currently selected.</para>
            <para>FALSE if value at |index| is not selected or widget is not a</para>
            <para>supported type.</para>
            <para>Comments: Intended for use with listbox/combobox widget types. Default implementation is a no-op that will return false for other types. Not currently supported for XFA forms - will return false.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_formfill.FPDF_LoadXFA(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Function: FPDF_LoadXFA</para>
            <para>If the document consists of XFA fields, call this method to</para>
            <para>attempt to load XFA fields.</para>
            <para>Parameters:</para>
            <para>document     -   Handle to document from FPDF_LoadDocument().</para>
            <para>Return Value:</para>
            <para>TRUE upon success, otherwise FALSE. If XFA support is not built</para>
            <para>into PDFium, performs no action and always returns FALSE.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_attachment.FPDFDocGetAttachmentCount(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the number of embedded files in |document|.</para>
            <para>document - handle to a document.</para>
            <para>Returns the number of embedded files in |document|.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_attachment.FPDFDocAddAttachment(PDFiumCore.FpdfDocumentT,System.UInt16@)">
            <summary>
            <para>Experimental API.</para>
            <para>Add an embedded file with |name| in |document|. If |name| is empty, or if</para>
            <para>|name| is the name of a existing embedded file in |document|, or if</para>
            <para>|document|'s embedded file name tree is too deep (i.e. |document| has too</para>
            <para>many embedded files already), then a new attachment will not be added.</para>
            <para>document - handle to a document.</para>
            <para>name     - name of the new attachment.</para>
            <para>Returns a handle to the new attachment object, or NULL on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_attachment.FPDFDocGetAttachment(PDFiumCore.FpdfDocumentT,System.Int32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the embedded attachment at |index| in |document|. Note that the returned</para>
            <para>attachment handle is only valid while |document| is open.</para>
            <para>document - handle to a document.</para>
            <para>index    - the index of the requested embedded file.</para>
            <para>Returns the handle to the attachment object, or NULL on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_attachment.FPDFDocDeleteAttachment(PDFiumCore.FpdfDocumentT,System.Int32)">
            <summary>
            <para>Experimental API.</para>
            <para>Delete the embedded attachment at |index| in |document|. Note that this does</para>
            <para>not remove the attachment data from the PDF file; it simply removes the</para>
            <para>file's entry in the embedded files name tree so that it does not appear in</para>
            <para>the attachment list. This behavior may change in the future.</para>
            <para>document - handle to a document.</para>
            <para>index    - the index of the embedded file to be deleted.</para>
            <para>Returns true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_attachment.FPDFAttachmentGetName(PDFiumCore.FpdfAttachmentT,System.UInt16@,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the name of the |attachment| file. |buffer| is only modified if |buflen|</para>
            <para>is longer than the length of the file name. On errors, |buffer| is unmodified</para>
            <para>and the returned length is 0.</para>
            <para>attachment - handle to an attachment.</para>
            <para>buffer     - buffer for holding the file name, encoded in UTF-16LE.</para>
            <para>buflen     - length of the buffer in bytes.</para>
            <para>Returns the length of the file name in bytes.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_attachment.FPDFAttachmentHasKey(PDFiumCore.FpdfAttachmentT,System.String)">
            <summary>
            <para>Experimental API.</para>
            <para>Check if the params dictionary of |attachment| has |key| as a key.</para>
            <para>attachment - handle to an attachment.</para>
            <para>key        - the key to look for, encoded in UTF-8.</para>
            <para>Returns true if |key| exists.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_attachment.FPDFAttachmentGetValueType(PDFiumCore.FpdfAttachmentT,System.String)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the type of the value corresponding to |key| in the params dictionary of</para>
            <para>the embedded |attachment|.</para>
            <para>attachment - handle to an attachment.</para>
            <para>key        - the key to look for, encoded in UTF-8.</para>
            <para>Returns the type of the dictionary value.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_attachment.FPDFAttachmentSetStringValue(PDFiumCore.FpdfAttachmentT,System.String,System.UInt16@)">
            <summary>
            <para>Experimental API.</para>
            <para>Set the string value corresponding to |key| in the params dictionary of the</para>
            <para>embedded file |attachment|, overwriting the existing value if any. The value</para>
            <para>type should be FPDF_OBJECT_STRING after this function call succeeds.</para>
            <para>attachment - handle to an attachment.</para>
            <para>key        - the key to the dictionary entry, encoded in UTF-8.</para>
            <para>value      - the string value to be set, encoded in UTF-16LE.</para>
            <para>Returns true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_attachment.FPDFAttachmentGetStringValue(PDFiumCore.FpdfAttachmentT,System.String,System.UInt16@,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the string value corresponding to |key| in the params dictionary of the</para>
            <para>embedded file |attachment|. |buffer| is only modified if |buflen| is longer</para>
            <para>than the length of the string value. Note that if |key| does not exist in the</para>
            <para>dictionary or if |key|'s corresponding value in the dictionary is not a</para>
            <para>string (i.e. the value is not of type FPDF_OBJECT_STRING or</para>
            <para>FPDF_OBJECT_NAME), then an empty string would be copied to |buffer| and the</para>
            <para>return value would be 2. On other errors, nothing would be added to |buffer|</para>
            <para>and the return value would be 0.</para>
            <para>attachment - handle to an attachment.</para>
            <para>key        - the key to the requested string value, encoded in UTF-8.</para>
            <para>buffer     - buffer for holding the string value encoded in UTF-16LE.</para>
            <para>buflen     - length of the buffer in bytes.</para>
            <para>Returns the length of the dictionary value string in bytes.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_attachment.FPDFAttachmentSetFile(PDFiumCore.FpdfAttachmentT,PDFiumCore.FpdfDocumentT,System.IntPtr,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Set the file data of |attachment|, overwriting the existing file data if any.</para>
            <para>The creation date and checksum will be updated, while all other dictionary</para>
            <para>entries will be deleted. Note that only contents with |len| smaller than</para>
            <para>INT_MAX is supported.</para>
            <para>attachment - handle to an attachment.</para>
            <para>contents   - buffer holding the file data to write to |attachment|.</para>
            <para>len        - length of file data in bytes.</para>
            <para>Returns true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_attachment.FPDFAttachmentGetFile(PDFiumCore.FpdfAttachmentT,System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the file data of |attachment|.</para>
            <para>When the attachment file data is readable, true is returned, and |out_buflen|</para>
            <para>is updated to indicate the file data size. |buffer| is only modified if</para>
            <para>|buflen| is non-null and long enough to contain the entire file data. Callers</para>
            <para>must check both the return value and the input |buflen| is no less than the</para>
            <para>returned |out_buflen| before using the data.</para>
            <para>Otherwise, when the attachment file data is unreadable or when |out_buflen|</para>
            <para>is null, false is returned and |buffer| and |out_buflen| remain unmodified.</para>
            <para>attachment - handle to an attachment.</para>
            <para>buffer     - buffer for holding the file data from |attachment|.</para>
            <para>buflen     - length of the buffer in bytes.</para>
            <para>out_buflen - pointer to the variable that will receive the minimum buffer</para>
            <para>size to contain the file data of |attachment|.</para>
            <para>Returns true on success, false otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_catalog.FPDFCatalogIsTagged(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>*</para>
            <para>Experimental API.</para>
            <para>Determine if |document| represents a tagged PDF.</para>
            <para>For the definition of tagged PDF, See (see 10.7 &quot;Tagged PDF&quot; in PDF</para>
            <para>Reference 1.7).</para>
            <para>document - handle to a document.</para>
            <para>Returns |true| iff |document| is a tagged PDF.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_dataavail.FPDFAvailCreate(PDFiumCore.FX_FILEAVAIL,PDFiumCore.FPDF_FILEACCESS)">
            <summary>
            <para>Create a document availability provider.</para>
            <para>file_avail - pointer to file availability interface.</para>
            <para>file       - pointer to a file access interface.</para>
            <para>Returns a handle to the document availability provider, or NULL on error.</para>
            <para>FPDFAvail_Destroy() must be called when done with the availability provider.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_dataavail.FPDFAvailDestroy(PDFiumCore.FpdfAvailT)">
            <summary>
            <para>Destroy the |avail| document availability provider.</para>
            <para>avail - handle to document availability provider to be destroyed.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_dataavail.FPDFAvailIsDocAvail(PDFiumCore.FpdfAvailT,PDFiumCore.FX_DOWNLOADHINTS)">
            <summary>
            <para>Checks if the document is ready for loading, if not, gets download hints.</para>
            <para>avail - handle to document availability provider.</para>
            <para>hints - pointer to a download hints interface.</para>
            <para>Returns one of:</para>
            <para>PDF_DATA_ERROR: A common error is returned. Data availability unknown.</para>
            <para>PDF_DATA_NOTAVAIL: Data not yet available.</para>
            <para>PDF_DATA_AVAIL: Data available.</para>
            <para>Applications should call this function whenever new data arrives, and process</para>
            <para>all the generated download hints, if any, until the function returns</para>
            <para>|PDF_DATA_ERROR| or |PDF_DATA_AVAIL|.</para>
            <para>if hints is nullptr, the function just check current document availability.</para>
            <para>Once all data is available, call FPDFAvail_GetDocument() to get a document</para>
            <para>handle.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_dataavail.FPDFAvailGetDocument(PDFiumCore.FpdfAvailT,System.String)">
            <summary>
            <para>Get document from the availability provider.</para>
            <para>avail    - handle to document availability provider.</para>
            <para>password - password for decrypting the PDF file. Optional.</para>
            <para>Returns a handle to the document.</para>
            <para>When FPDFAvail_IsDocAvail() returns TRUE, call FPDFAvail_GetDocument() to</para>
            <para>retrieve the document handle.</para>
            <para>See the comments for FPDF_LoadDocument() regarding the encoding for</para>
            <para>|password|.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_dataavail.FPDFAvailGetFirstPageNum(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Get the page number for the first available page in a linearized PDF.</para>
            <para>doc - document handle.</para>
            <para>Returns the zero-based index for the first available page.</para>
            <para>For most linearized PDFs, the first available page will be the first page,</para>
            <para>however, some PDFs might make another page the first available page.</para>
            <para>For non-linearized PDFs, this function will always return zero.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_dataavail.FPDFAvailIsPageAvail(PDFiumCore.FpdfAvailT,System.Int32,PDFiumCore.FX_DOWNLOADHINTS)">
            <summary>
            <para>Check if |page_index| is ready for loading, if not, get the</para>
            <para>|FX_DOWNLOADHINTS|.</para>
            <para>avail      - handle to document availability provider.</para>
            <para>page_index - index number of the page. Zero for the first page.</para>
            <para>hints      - pointer to a download hints interface. Populated if</para>
            <para>|page_index| is not available.</para>
            <para>Returns one of:</para>
            <para>PDF_DATA_ERROR: A common error is returned. Data availability unknown.</para>
            <para>PDF_DATA_NOTAVAIL: Data not yet available.</para>
            <para>PDF_DATA_AVAIL: Data available.</para>
            <para>This function can be called only after FPDFAvail_GetDocument() is called.</para>
            <para>Applications should call this function whenever new data arrives and process</para>
            <para>all the generated download |hints|, if any, until this function returns</para>
            <para>|PDF_DATA_ERROR| or |PDF_DATA_AVAIL|. Applications can then perform page</para>
            <para>loading.</para>
            <para>if hints is nullptr, the function just check current availability of</para>
            <para>specified page.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_dataavail.FPDFAvailIsFormAvail(PDFiumCore.FpdfAvailT,PDFiumCore.FX_DOWNLOADHINTS)">
            <summary>
            <para>Check if form data is ready for initialization, if not, get the</para>
            <para>|FX_DOWNLOADHINTS|.</para>
            <para>avail - handle to document availability provider.</para>
            <para>hints - pointer to a download hints interface. Populated if form is not</para>
            <para>ready for initialization.</para>
            <para>Returns one of:</para>
            <para>PDF_FORM_ERROR: A common eror, in general incorrect parameters.</para>
            <para>PDF_FORM_NOTAVAIL: Data not available.</para>
            <para>PDF_FORM_AVAIL: Data available.</para>
            <para>PDF_FORM_NOTEXIST: No form data.</para>
            <para>This function can be called only after FPDFAvail_GetDocument() is called.</para>
            <para>The application should call this function whenever new data arrives and</para>
            <para>process all the generated download |hints|, if any, until the function</para>
            <para>|PDF_FORM_ERROR|, |PDF_FORM_AVAIL| or |PDF_FORM_NOTEXIST|.</para>
            <para>if hints is nullptr, the function just check current form availability.</para>
            <para>Applications can then perform page loading. It is recommend to call</para>
            <para>FPDFDOC_InitFormFillEnvironment() when |PDF_FORM_AVAIL| is returned.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_dataavail.FPDFAvailIsLinearized(PDFiumCore.FpdfAvailT)">
            <summary>
            <para>Check whether a document is a linearized PDF.</para>
            <para>avail - handle to document availability provider.</para>
            <para>Returns one of:</para>
            <para>PDF_LINEARIZED</para>
            <para>PDF_NOT_LINEARIZED</para>
            <para>PDF_LINEARIZATION_UNKNOWN</para>
            <para>FPDFAvail_IsLinearized() will return |PDF_LINEARIZED| or |PDF_NOT_LINEARIZED|</para>
            <para>when we have 1k  of data. If the files size less than 1k, it returns</para>
            <para>|PDF_LINEARIZATION_UNKNOWN| as there is insufficient information to determine</para>
            <para>if the PDF is linearlized.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFBookmarkGetFirstChild(PDFiumCore.FpdfDocumentT,PDFiumCore.FpdfBookmarkT)">
            <summary>
            <para>Get the first child of |bookmark|, or the first top-level bookmark item.</para>
            <para>document - handle to the document.</para>
            <para>bookmark - handle to the current bookmark. Pass NULL for the first top</para>
            <para>level item.</para>
            <para>Returns a handle to the first child of |bookmark| or the first top-level</para>
            <para>bookmark item. NULL if no child or top-level bookmark found.</para>
            <para>Note that another name for the bookmarks is the document outline, as</para>
            <para>described in ISO 32000-1:2008, section 12.3.3.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFBookmarkGetNextSibling(PDFiumCore.FpdfDocumentT,PDFiumCore.FpdfBookmarkT)">
            <summary>
            <para>Get the next sibling of |bookmark|.</para>
            <para>document - handle to the document.</para>
            <para>bookmark - handle to the current bookmark.</para>
            <para>Returns a handle to the next sibling of |bookmark|, or NULL if this is the</para>
            <para>last bookmark at this level.</para>
            <para>Note that the caller is responsible for handling circular bookmark</para>
            <para>references, as may arise from malformed documents.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFBookmarkGetTitle(PDFiumCore.FpdfBookmarkT,System.IntPtr,System.UInt32)">
            <summary>
            <para>Get the title of |bookmark|.</para>
            <para>bookmark - handle to the bookmark.</para>
            <para>buffer   - buffer for the title. May be NULL.</para>
            <para>buflen   - the length of the buffer in bytes. May be 0.</para>
            <para>Returns the number of bytes in the title, including the terminating NUL</para>
            <para>character. The number of bytes is returned regardless of the |buffer| and</para>
            <para>|buflen| parameters.</para>
            <para>Regardless of the platform, the |buffer| is always in UTF-16LE encoding. The</para>
            <para>string is terminated by a UTF16 NUL character. If |buflen| is less than the</para>
            <para>required length, or |buffer| is NULL, |buffer| will not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFBookmarkGetCount(PDFiumCore.FpdfBookmarkT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the number of chlidren of |bookmark|.</para>
            <para>bookmark - handle to the bookmark.</para>
            <para>Returns a signed integer that represents the number of sub-items the given</para>
            <para>bookmark has. If the value is positive, child items shall be shown by default</para>
            <para>(open state). If the value is negative, child items shall be hidden by</para>
            <para>default (closed state). Please refer to PDF 32000-1:2008, Table 153.</para>
            <para>Returns 0 if the bookmark has no children or is invalid.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFBookmarkFind(PDFiumCore.FpdfDocumentT,System.UInt16@)">
            <summary>
            <para>Find the bookmark with |title| in |document|.</para>
            <para>document - handle to the document.</para>
            <para>title    - the UTF-16LE encoded Unicode title for which to search.</para>
            <para>Returns the handle to the bookmark, or NULL if |title| can't be found.</para>
            <para>FPDFBookmark_Find() will always return the first bookmark found even if</para>
            <para>multiple bookmarks have the same |title|.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFBookmarkGetDest(PDFiumCore.FpdfDocumentT,PDFiumCore.FpdfBookmarkT)">
            <summary>
            <para>Get the destination associated with |bookmark|.</para>
            <para>document - handle to the document.</para>
            <para>bookmark - handle to the bookmark.</para>
            <para>Returns the handle to the destination data, or NULL if no destination is</para>
            <para>associated with |bookmark|.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFBookmarkGetAction(PDFiumCore.FpdfBookmarkT)">
            <summary>
            <para>Get the action associated with |bookmark|.</para>
            <para>bookmark - handle to the bookmark.</para>
            <para>Returns the handle to the action data, or NULL if no action is associated</para>
            <para>with |bookmark|.</para>
            <para>If this function returns a valid handle, it is valid as long as |bookmark| is</para>
            <para>valid.</para>
            <para>If this function returns NULL, FPDFBookmark_GetDest() should be called to get</para>
            <para>the |bookmark| destination data.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFActionGetType(PDFiumCore.FpdfActionT)">
            <summary>
            <para>Get the type of |action|.</para>
            <para>action - handle to the action.</para>
            <para>Returns one of:</para>
            <para>PDFACTION_UNSUPPORTED</para>
            <para>PDFACTION_GOTO</para>
            <para>PDFACTION_REMOTEGOTO</para>
            <para>PDFACTION_URI</para>
            <para>PDFACTION_LAUNCH</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFActionGetDest(PDFiumCore.FpdfDocumentT,PDFiumCore.FpdfActionT)">
            <summary>
            <para>Get the destination of |action|.</para>
            <para>document - handle to the document.</para>
            <para>action   - handle to the action. |action| must be a |PDFACTION_GOTO| or</para>
            <para>|PDFACTION_REMOTEGOTO|.</para>
            <para>Returns a handle to the destination data, or NULL on error, typically</para>
            <para>because the arguments were bad or the action was of the wrong type.</para>
            <para>In the case of |PDFACTION_REMOTEGOTO|, you must first call</para>
            <para>FPDFAction_GetFilePath(), then load the document at that path, then pass</para>
            <para>the document handle from that document as |document| to FPDFAction_GetDest().</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFActionGetFilePath(PDFiumCore.FpdfActionT,System.IntPtr,System.UInt32)">
            <summary>
            <para>Get the file path of |action|.</para>
            <para>action - handle to the action. |action| must be a |PDFACTION_LAUNCH| or</para>
            <para>|PDFACTION_REMOTEGOTO|.</para>
            <para>buffer - a buffer for output the path string. May be NULL.</para>
            <para>buflen - the length of the buffer, in bytes. May be 0.</para>
            <para>Returns the number of bytes in the file path, including the trailing NUL</para>
            <para>character, or 0 on error, typically because the arguments were bad or the</para>
            <para>action was of the wrong type.</para>
            <para>Regardless of the platform, the |buffer| is always in UTF-8 encoding.</para>
            <para>If |buflen| is less than the returned length, or |buffer| is NULL, |buffer|</para>
            <para>will not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFActionGetURIPath(PDFiumCore.FpdfDocumentT,PDFiumCore.FpdfActionT,System.IntPtr,System.UInt32)">
            <summary>
            <para>Get the URI path of |action|.</para>
            <para>document - handle to the document.</para>
            <para>action   - handle to the action. Must be a |PDFACTION_URI|.</para>
            <para>buffer   - a buffer for the path string. May be NULL.</para>
            <para>buflen   - the length of the buffer, in bytes. May be 0.</para>
            <para>Returns the number of bytes in the URI path, including the trailing NUL</para>
            <para>character, or 0 on error, typically because the arguments were bad or the</para>
            <para>action was of the wrong type.</para>
            <para>The |buffer| may contain badly encoded data. The caller should validate the</para>
            <para>output. e.g. Check to see if it is UTF-8.</para>
            <para>If |buflen| is less than the returned length, or |buffer| is NULL, |buffer|</para>
            <para>will not be modified.</para>
            <para>Historically, the documentation for this API claimed |buffer| is always</para>
            <para>encoded in 7-bit ASCII, but did not actually enforce it.</para>
            <para>https://pdfium.googlesource.com/pdfium.git/+/d609e84cee2e14a18333247485af91df48a40592</para>
            <para>added that enforcement, but that did not work well for real world PDFs that</para>
            <para>used UTF-8. As of this writing, this API reverted back to its original</para>
            <para>behavior prior to commit d609e84cee.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFDestGetDestPageIndex(PDFiumCore.FpdfDocumentT,PDFiumCore.FpdfDestT)">
            <summary>
            <para>Get the page index of |dest|.</para>
            <para>document - handle to the document.</para>
            <para>dest     - handle to the destination.</para>
            <para>Returns the 0-based page index containing |dest|. Returns -1 on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFDestGetView(PDFiumCore.FpdfDestT,System.UInt32@,System.Single@)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the view (fit type) specified by |dest|.</para>
            <para>dest         - handle to the destination.</para>
            <para>pNumParams   - receives the number of view parameters, which is at most 4.</para>
            <para>pParams      - buffer to write the view parameters. Must be at least 4</para>
            <para>FS_FLOATs long.</para>
            <para>Returns one of the PDFDEST_VIEW_* constants, PDFDEST_VIEW_UNKNOWN_MODE if</para>
            <para>|dest| does not specify a view.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFDestGetLocationInPage(PDFiumCore.FpdfDestT,System.Int32@,System.Int32@,System.Int32@,System.Single@,System.Single@,System.Single@)">
            <summary>
            <para>Get the (x, y, zoom) location of |dest| in the destination page, if the</para>
            <para>destination is in [page /XYZ x y zoom] syntax.</para>
            <para>dest       - handle to the destination.</para>
            <para>hasXVal    - out parameter; true if the x value is not null</para>
            <para>hasYVal    - out parameter; true if the y value is not null</para>
            <para>hasZoomVal - out parameter; true if the zoom value is not null</para>
            <para>x          - out parameter; the x coordinate, in page coordinates.</para>
            <para>y          - out parameter; the y coordinate, in page coordinates.</para>
            <para>zoom       - out parameter; the zoom value.</para>
            <para>Returns TRUE on successfully reading the /XYZ value.</para>
            <para>Note the [x, y, zoom] values are only set if the corresponding hasXVal,</para>
            <para>hasYVal or hasZoomVal flags are true.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFLinkGetLinkAtPoint(PDFiumCore.FpdfPageT,System.Double,System.Double)">
            <summary>
            <para>Find a link at point (|x|,|y|) on |page|.</para>
            <para>page - handle to the document page.</para>
            <para>x    - the x coordinate, in the page coordinate system.</para>
            <para>y    - the y coordinate, in the page coordinate system.</para>
            <para>Returns a handle to the link, or NULL if no link found at the given point.</para>
            <para>You can convert coordinates from screen coordinates to page coordinates using</para>
            <para>FPDF_DeviceToPage().</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFLinkGetLinkZOrderAtPoint(PDFiumCore.FpdfPageT,System.Double,System.Double)">
            <summary>
            <para>Find the Z-order of link at point (|x|,|y|) on |page|.</para>
            <para>page - handle to the document page.</para>
            <para>x    - the x coordinate, in the page coordinate system.</para>
            <para>y    - the y coordinate, in the page coordinate system.</para>
            <para>Returns the Z-order of the link, or -1 if no link found at the given point.</para>
            <para>Larger Z-order numbers are closer to the front.</para>
            <para>You can convert coordinates from screen coordinates to page coordinates using</para>
            <para>FPDF_DeviceToPage().</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFLinkGetDest(PDFiumCore.FpdfDocumentT,PDFiumCore.FpdfLinkT)">
            <summary>
            <para>Get destination info for |link|.</para>
            <para>document - handle to the document.</para>
            <para>link     - handle to the link.</para>
            <para>Returns a handle to the destination, or NULL if there is no destination</para>
            <para>associated with the link. In this case, you should call FPDFLink_GetAction()</para>
            <para>to retrieve the action associated with |link|.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFLinkGetAction(PDFiumCore.FpdfLinkT)">
            <summary>
            <para>Get action info for |link|.</para>
            <para>link - handle to the link.</para>
            <para>Returns a handle to the action associated to |link|, or NULL if no action.</para>
            <para>If this function returns a valid handle, it is valid as long as |link| is</para>
            <para>valid.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFLinkEnumerate(PDFiumCore.FpdfPageT,System.Int32@,PDFiumCore.FpdfLinkT)">
            <summary>
            <para>Enumerates all the link annotations in |page|.</para>
            <para>page       - handle to the page.</para>
            <para>start_pos  - the start position, should initially be 0 and is updated with</para>
            <para>the next start position on return.</para>
            <para>link_annot - the link handle for |startPos|.</para>
            <para>Returns TRUE on success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFLinkGetAnnot(PDFiumCore.FpdfPageT,PDFiumCore.FpdfLinkT)">
            <summary>
            <para>Experimental API.</para>
            <para>Gets FPDF_ANNOTATION object for |link_annot|.</para>
            <para>page       - handle to the page in which FPDF_LINK object is present.</para>
            <para>link_annot - handle to link annotation.</para>
            <para>Returns FPDF_ANNOTATION from the FPDF_LINK and NULL on failure,</para>
            <para>if the input link annot or page is NULL.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFLinkGetAnnotRect(PDFiumCore.FpdfLinkT,PDFiumCore.FS_RECTF_)">
            <summary>
            <para>Get the rectangle for |link_annot|.</para>
            <para>link_annot - handle to the link annotation.</para>
            <para>rect       - the annotation rectangle.</para>
            <para>Returns true on success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFLinkCountQuadPoints(PDFiumCore.FpdfLinkT)">
            <summary>
            <para>Get the count of quadrilateral points to the |link_annot|.</para>
            <para>link_annot - handle to the link annotation.</para>
            <para>Returns the count of quadrilateral points.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDFLinkGetQuadPoints(PDFiumCore.FpdfLinkT,System.Int32,PDFiumCore.FS_QUADPOINTSF)">
            <summary>
            <para>Get the quadrilateral points for the specified |quad_index| in |link_annot|.</para>
            <para>link_annot  - handle to the link annotation.</para>
            <para>quad_index  - the specified quad point index.</para>
            <para>quad_points - receives the quadrilateral points.</para>
            <para>Returns true on success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDF_GetPageAAction(PDFiumCore.FpdfPageT,System.Int32)">
            <summary>
            <para>Experimental API</para>
            <para>Gets an additional-action from |page|.</para>
            <para>page      - handle to the page, as returned by FPDF_LoadPage().</para>
            <para>aa_type   - the type of the page object's addtional-action, defined</para>
            <para>in public/fpdf_formfill.h</para>
            <para>Returns the handle to the action data, or NULL if there is no</para>
            <para>additional-action of type |aa_type|.</para>
            <para>If this function returns a valid handle, it is valid as long as |page| is</para>
            <para>valid.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDF_GetFileIdentifier(PDFiumCore.FpdfDocumentT,PDFiumCore.FPDF_FILEIDTYPE,System.IntPtr,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the file identifer defined in the trailer of |document|.</para>
            <para>document - handle to the document.</para>
            <para>id_type  - the file identifier type to retrieve.</para>
            <para>buffer   - a buffer for the file identifier. May be NULL.</para>
            <para>buflen   - the length of the buffer, in bytes. May be 0.</para>
            <para>Returns the number of bytes in the file identifier, including the NUL</para>
            <para>terminator.</para>
            <para>The |buffer| is always a byte string. The |buffer| is followed by a NUL</para>
            <para>terminator.  If |buflen| is less than the returned length, or |buffer| is</para>
            <para>NULL, |buffer| will not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDF_GetMetaText(PDFiumCore.FpdfDocumentT,System.String,System.IntPtr,System.UInt32)">
            <summary>
            <para>Get meta-data |tag| content from |document|.</para>
            <para>document - handle to the document.</para>
            <para>tag      - the tag to retrieve. The tag can be one of:</para>
            <para>Title, Author, Subject, Keywords, Creator, Producer,</para>
            <para>CreationDate, or ModDate.</para>
            <para>For detailed explanations of these tags and their respective</para>
            <para>values, please refer to PDF Reference 1.6, section 10.2.1,</para>
            <para>'Document Information Dictionary'.</para>
            <para>buffer   - a buffer for the tag. May be NULL.</para>
            <para>buflen   - the length of the buffer, in bytes. May be 0.</para>
            <para>Returns the number of bytes in the tag, including trailing zeros.</para>
            <para>The |buffer| is always encoded in UTF-16LE. The |buffer| is followed by two</para>
            <para>bytes of zeros indicating the end of the string.  If |buflen| is less than</para>
            <para>the returned length, or |buffer| is NULL, |buffer| will not be modified.</para>
            <para>For linearized files, FPDFAvail_IsFormAvail must be called before this, and</para>
            <para>it must have returned PDF_FORM_AVAIL or PDF_FORM_NOTEXIST. Before that, there</para>
            <para>is no guarantee the metadata has been loaded.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_doc.FPDF_GetPageLabel(PDFiumCore.FpdfDocumentT,System.Int32,System.IntPtr,System.UInt32)">
            <summary>
            <para>Get the page label for |page_index| from |document|.</para>
            <para>document    - handle to the document.</para>
            <para>page_index  - the 0-based index of the page.</para>
            <para>buffer      - a buffer for the page label. May be NULL.</para>
            <para>buflen      - the length of the buffer, in bytes. May be 0.</para>
            <para>Returns the number of bytes in the page label, including trailing zeros.</para>
            <para>The |buffer| is always encoded in UTF-16LE. The |buffer| is followed by two</para>
            <para>bytes of zeros indicating the end of the string.  If |buflen| is less than</para>
            <para>the returned length, or |buffer| is NULL, |buffer| will not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDF_CreateNewDocument">
            <summary>
            <para>Create a new PDF document.</para>
            <para>Returns a handle to a new document, or NULL on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageNew(PDFiumCore.FpdfDocumentT,System.Int32,System.Double,System.Double)">
            <summary>
            <para>Create a new PDF page.</para>
            <para>document   - handle to document.</para>
            <para>page_index - suggested 0-based index of the page to create. If it is larger</para>
            <para>than document's current last index(L), the created page index</para>
            <para>is the next available index -- L+1.</para>
            <para>width      - the page width in points.</para>
            <para>height     - the page height in points.</para>
            <para>Returns the handle to the new page or NULL on failure.</para>
            <para>The page should be closed with FPDF_ClosePage() when finished as</para>
            <para>with any other page in the document.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageDelete(PDFiumCore.FpdfDocumentT,System.Int32)">
            <summary>
            <para>Delete the page at |page_index|.</para>
            <para>document   - handle to document.</para>
            <para>page_index - the index of the page to delete.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDF_MovePages(PDFiumCore.FpdfDocumentT,System.Int32@,System.UInt32,System.Int32)">
            <summary>
            <para>Experimental API.</para>
            <para>Move the given pages to a new index position.</para>
            <para>page_indices     - the ordered list of pages to move. No duplicates allowed.</para>
            <para>page_indices_len - the number of elements in |page_indices|</para>
            <para>dest_page_index  - the new index position to which the pages in</para>
            <para>|page_indices| are moved.</para>
            <para>Returns TRUE on success. If it returns FALSE, the document may be left in an</para>
            <para>indeterminate state.</para>
            <para>Example: The PDF document starts out with pages [A, B, C, D], with indices</para>
            <para>[0, 1, 2, 3].</para>
            <para>Move(doc, [3, 2], 2, 1); // returns true</para>
            <para>// The document has pages [A, D, C, B].</para>
            <para></para>
            <para>Move(doc, [0, 4, 3], 3, 1); // returns false</para>
            <para>// Returned false because index 4 is out of range.</para>
            <para></para>
            <para>Move(doc, [0, 3, 1], 3, 2); // returns false</para>
            <para>// Returned false because index 2 is out of range for 3 page indices.</para>
            <para></para>
            <para>Move(doc, [2, 2], 2, 0); // returns false</para>
            <para>// Returned false because [2, 2] contains duplicates.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageGetRotation(PDFiumCore.FpdfPageT)">
            <summary>
            <para>Get the rotation of |page|.</para>
            <para>page - handle to a page</para>
            <para>Returns one of the following indicating the page rotation:</para>
            <para>0 - No rotation.</para>
            <para>1 - Rotated 90 degrees clockwise.</para>
            <para>2 - Rotated 180 degrees clockwise.</para>
            <para>3 - Rotated 270 degrees clockwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageSetRotation(PDFiumCore.FpdfPageT,System.Int32)">
            <summary>
            <para>Set rotation for |page|.</para>
            <para>page   - handle to a page.</para>
            <para>rotate - the rotation value, one of:</para>
            <para>0 - No rotation.</para>
            <para>1 - Rotated 90 degrees clockwise.</para>
            <para>2 - Rotated 180 degrees clockwise.</para>
            <para>3 - Rotated 270 degrees clockwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageInsertObject(PDFiumCore.FpdfPageT,PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Insert |page_object| into |page|.</para>
            <para>page        - handle to a page</para>
            <para>page_object - handle to a page object. The |page_object| will be</para>
            <para>automatically freed.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageRemoveObject(PDFiumCore.FpdfPageT,PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Experimental API.</para>
            <para>Remove |page_object| from |page|.</para>
            <para>page        - handle to a page</para>
            <para>page_object - handle to a page object to be removed.</para>
            <para>Returns TRUE on success.</para>
            <para>Ownership is transferred to the caller. Call FPDFPageObj_Destroy() to free</para>
            <para>it.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageCountObjects(PDFiumCore.FpdfPageT)">
            <summary>
            <para>Get number of page objects inside |page|.</para>
            <para>page - handle to a page.</para>
            <para>Returns the number of objects in |page|.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageGetObject(PDFiumCore.FpdfPageT,System.Int32)">
            <summary>
            <para>Get object in |page| at |index|.</para>
            <para>page  - handle to a page.</para>
            <para>index - the index of a page object.</para>
            <para>Returns the handle to the page object, or NULL on failed.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageHasTransparency(PDFiumCore.FpdfPageT)">
            <summary>
            <para>Checks if |page| contains transparency.</para>
            <para>page - handle to a page.</para>
            <para>Returns TRUE if |page| contains transparency.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageGenerateContent(PDFiumCore.FpdfPageT)">
            <summary>
            <para>Generate the content of |page|.</para>
            <para>page - handle to a page.</para>
            <para>Returns TRUE on success.</para>
            <para>Before you save the page to a file, or reload the page, you must call</para>
            <para>|FPDFPage_GenerateContent| or any changes to |page| will be lost.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjDestroy(PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Destroy |page_object| by releasing its resources. |page_object| must have</para>
            <para>been created by FPDFPageObj_CreateNew{Path|Rect}() or</para>
            <para>FPDFPageObj_New{Text|Image}Obj(). This function must be called on</para>
            <para>newly-created objects if they are not added to a page through</para>
            <para>FPDFPage_InsertObject() or to an annotation through FPDFAnnot_AppendObject().</para>
            <para>page_object - handle to a page object.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjHasTransparency(PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Checks if |page_object| contains transparency.</para>
            <para>page_object - handle to a page object.</para>
            <para>Returns TRUE if |page_object| contains transparency.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjGetType(PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Get type of |page_object|.</para>
            <para>page_object - handle to a page object.</para>
            <para>Returns one of the FPDF_PAGEOBJ_* values on success, FPDF_PAGEOBJ_UNKNOWN on</para>
            <para>error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjTransform(PDFiumCore.FpdfPageobjectT,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            <para>Transform |page_object| by the given matrix.</para>
            <para>page_object - handle to a page object.</para>
            <para>a           - matrix value.</para>
            <para>b           - matrix value.</para>
            <para>c           - matrix value.</para>
            <para>d           - matrix value.</para>
            <para>e           - matrix value.</para>
            <para>f           - matrix value.</para>
            <para>The matrix is composed as:</para>
            <para>|a c e|</para>
            <para>|b d f|</para>
            <para>and can be used to scale, rotate, shear and translate the |page_object|.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjGetMatrix(PDFiumCore.FpdfPageobjectT,PDFiumCore.FS_MATRIX_)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the transform matrix of a page object.</para>
            <para>page_object - handle to a page object.</para>
            <para>matrix      - pointer to struct to receive the matrix value.</para>
            <para>The matrix is composed as:</para>
            <para>|a c e|</para>
            <para>|b d f|</para>
            <para>and used to scale, rotate, shear and translate the page object.</para>
            <para>For page objects outside form objects, the matrix values are relative to the</para>
            <para>page that contains it.</para>
            <para>For page objects inside form objects, the matrix values are relative to the</para>
            <para>form that contains it.</para>
            <para>Returns TRUE on success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjSetMatrix(PDFiumCore.FpdfPageobjectT,PDFiumCore.FS_MATRIX_)">
            <summary>
            <para>Experimental API.</para>
            <para>Set the transform matrix of a page object.</para>
            <para>page_object - handle to a page object.</para>
            <para>matrix      - pointer to struct with the matrix value.</para>
            <para>The matrix is composed as:</para>
            <para>|a c e|</para>
            <para>|b d f|</para>
            <para>and can be used to scale, rotate, shear and translate the page object.</para>
            <para>Returns TRUE on success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageTransformAnnots(PDFiumCore.FpdfPageT,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            <para>Transform all annotations in |page|.</para>
            <para>page - handle to a page.</para>
            <para>a    - matrix value.</para>
            <para>b    - matrix value.</para>
            <para>c    - matrix value.</para>
            <para>d    - matrix value.</para>
            <para>e    - matrix value.</para>
            <para>f    - matrix value.</para>
            <para>The matrix is composed as:</para>
            <para>|a c e|</para>
            <para>|b d f|</para>
            <para>and can be used to scale, rotate, shear and translate the |page| annotations.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjNewImageObj(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Create a new image object.</para>
            <para>document - handle to a document.</para>
            <para>Returns a handle to a new image object.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjCountMarks(PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get number of content marks in |page_object|.</para>
            <para>page_object - handle to a page object.</para>
            <para>Returns the number of content marks in |page_object|, or -1 in case of</para>
            <para>failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjGetMark(PDFiumCore.FpdfPageobjectT,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get content mark in |page_object| at |index|.</para>
            <para>page_object - handle to a page object.</para>
            <para>index       - the index of a page object.</para>
            <para>Returns the handle to the content mark, or NULL on failure. The handle is</para>
            <para>still owned by the library, and it should not be freed directly. It becomes</para>
            <para>invalid if the page object is destroyed, either directly or indirectly by</para>
            <para>unloading the page.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjAddMark(PDFiumCore.FpdfPageobjectT,System.String)">
            <summary>
            <para>Experimental API.</para>
            <para>Add a new content mark to a |page_object|.</para>
            <para>page_object - handle to a page object.</para>
            <para>name        - the name (tag) of the mark.</para>
            <para>Returns the handle to the content mark, or NULL on failure. The handle is</para>
            <para>still owned by the library, and it should not be freed directly. It becomes</para>
            <para>invalid if the page object is destroyed, either directly or indirectly by</para>
            <para>unloading the page.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjRemoveMark(PDFiumCore.FpdfPageobjectT,PDFiumCore.FpdfPageobjectmarkT)">
            <summary>
            <para>Experimental API.</para>
            <para>Removes a content |mark| from a |page_object|.</para>
            <para>The mark handle will be invalid after the removal.</para>
            <para>page_object - handle to a page object.</para>
            <para>mark        - handle to a content mark in that object to remove.</para>
            <para>Returns TRUE if the operation succeeded, FALSE if it failed.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjMarkGetName(PDFiumCore.FpdfPageobjectmarkT,System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the name of a content mark.</para>
            <para>mark       - handle to a content mark.</para>
            <para>buffer     - buffer for holding the returned name in UTF-16LE. This is only</para>
            <para>modified if |buflen| is longer than the length of the name.</para>
            <para>Optional, pass null to just retrieve the size of the buffer</para>
            <para>needed.</para>
            <para>buflen     - length of the buffer.</para>
            <para>out_buflen - pointer to variable that will receive the minimum buffer size</para>
            <para>to contain the name. Not filled if FALSE is returned.</para>
            <para>Returns TRUE if the operation succeeded, FALSE if it failed.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjMarkCountParams(PDFiumCore.FpdfPageobjectmarkT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the number of key/value pair parameters in |mark|.</para>
            <para>mark   - handle to a content mark.</para>
            <para>Returns the number of key/value pair parameters |mark|, or -1 in case of</para>
            <para>failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjMarkGetParamKey(PDFiumCore.FpdfPageobjectmarkT,System.UInt32,System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the key of a property in a content mark.</para>
            <para>mark       - handle to a content mark.</para>
            <para>index      - index of the property.</para>
            <para>buffer     - buffer for holding the returned key in UTF-16LE. This is only</para>
            <para>modified if |buflen| is longer than the length of the key.</para>
            <para>Optional, pass null to just retrieve the size of the buffer</para>
            <para>needed.</para>
            <para>buflen     - length of the buffer.</para>
            <para>out_buflen - pointer to variable that will receive the minimum buffer size</para>
            <para>to contain the key. Not filled if FALSE is returned.</para>
            <para>Returns TRUE if the operation was successful, FALSE otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjMarkGetParamValueType(PDFiumCore.FpdfPageobjectmarkT,System.String)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the type of the value of a property in a content mark by key.</para>
            <para>mark   - handle to a content mark.</para>
            <para>key    - string key of the property.</para>
            <para>Returns the type of the value, or FPDF_OBJECT_UNKNOWN in case of failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjMarkGetParamIntValue(PDFiumCore.FpdfPageobjectmarkT,System.String,System.Int32@)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the value of a number property in a content mark by key as int.</para>
            <para>FPDFPageObjMark_GetParamValueType() should have returned FPDF_OBJECT_NUMBER</para>
            <para>for this property.</para>
            <para>mark      - handle to a content mark.</para>
            <para>key       - string key of the property.</para>
            <para>out_value - pointer to variable that will receive the value. Not filled if</para>
            <para>false is returned.</para>
            <para>Returns TRUE if the key maps to a number value, FALSE otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjMarkGetParamStringValue(PDFiumCore.FpdfPageobjectmarkT,System.String,System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the value of a string property in a content mark by key.</para>
            <para>mark       - handle to a content mark.</para>
            <para>key        - string key of the property.</para>
            <para>buffer     - buffer for holding the returned value in UTF-16LE. This is</para>
            <para>only modified if |buflen| is longer than the length of the</para>
            <para>value.</para>
            <para>Optional, pass null to just retrieve the size of the buffer</para>
            <para>needed.</para>
            <para>buflen     - length of the buffer.</para>
            <para>out_buflen - pointer to variable that will receive the minimum buffer size</para>
            <para>to contain the value. Not filled if FALSE is returned.</para>
            <para>Returns TRUE if the key maps to a string/blob value, FALSE otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjMarkGetParamBlobValue(PDFiumCore.FpdfPageobjectmarkT,System.String,System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the value of a blob property in a content mark by key.</para>
            <para>mark       - handle to a content mark.</para>
            <para>key        - string key of the property.</para>
            <para>buffer     - buffer for holding the returned value. This is only modified</para>
            <para>if |buflen| is at least as long as the length of the value.</para>
            <para>Optional, pass null to just retrieve the size of the buffer</para>
            <para>needed.</para>
            <para>buflen     - length of the buffer.</para>
            <para>out_buflen - pointer to variable that will receive the minimum buffer size</para>
            <para>to contain the value. Not filled if FALSE is returned.</para>
            <para>Returns TRUE if the key maps to a string/blob value, FALSE otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjMarkSetIntParam(PDFiumCore.FpdfDocumentT,PDFiumCore.FpdfPageobjectT,PDFiumCore.FpdfPageobjectmarkT,System.String,System.Int32)">
            <summary>
            <para>Experimental API.</para>
            <para>Set the value of an int property in a content mark by key. If a parameter</para>
            <para>with key |key| exists, its value is set to |value|. Otherwise, it is added as</para>
            <para>a new parameter.</para>
            <para>document    - handle to the document.</para>
            <para>page_object - handle to the page object with the mark.</para>
            <para>mark        - handle to a content mark.</para>
            <para>key         - string key of the property.</para>
            <para>value       - int value to set.</para>
            <para>Returns TRUE if the operation succeeded, FALSE otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjMarkSetStringParam(PDFiumCore.FpdfDocumentT,PDFiumCore.FpdfPageobjectT,PDFiumCore.FpdfPageobjectmarkT,System.String,System.String)">
            <summary>
            <para>Experimental API.</para>
            <para>Set the value of a string property in a content mark by key. If a parameter</para>
            <para>with key |key| exists, its value is set to |value|. Otherwise, it is added as</para>
            <para>a new parameter.</para>
            <para>document    - handle to the document.</para>
            <para>page_object - handle to the page object with the mark.</para>
            <para>mark        - handle to a content mark.</para>
            <para>key         - string key of the property.</para>
            <para>value       - string value to set.</para>
            <para>Returns TRUE if the operation succeeded, FALSE otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjMarkSetBlobParam(PDFiumCore.FpdfDocumentT,PDFiumCore.FpdfPageobjectT,PDFiumCore.FpdfPageobjectmarkT,System.String,System.IntPtr,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Set the value of a blob property in a content mark by key. If a parameter</para>
            <para>with key |key| exists, its value is set to |value|. Otherwise, it is added as</para>
            <para>a new parameter.</para>
            <para>document    - handle to the document.</para>
            <para>page_object - handle to the page object with the mark.</para>
            <para>mark        - handle to a content mark.</para>
            <para>key         - string key of the property.</para>
            <para>value       - pointer to blob value to set.</para>
            <para>value_len   - size in bytes of |value|.</para>
            <para>Returns TRUE if the operation succeeded, FALSE otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjMarkRemoveParam(PDFiumCore.FpdfPageobjectT,PDFiumCore.FpdfPageobjectmarkT,System.String)">
            <summary>
            <para>Experimental API.</para>
            <para>Removes a property from a content mark by key.</para>
            <para>page_object - handle to the page object with the mark.</para>
            <para>mark        - handle to a content mark.</para>
            <para>key         - string key of the property.</para>
            <para>Returns TRUE if the operation succeeded, FALSE otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFImageObjLoadJpegFile(PDFiumCore.FpdfPageT,System.Int32,PDFiumCore.FpdfPageobjectT,PDFiumCore.FPDF_FILEACCESS)">
            <summary>
            <para>Load an image from a JPEG image file and then set it into |image_object|.</para>
            <para>pages        - pointer to the start of all loaded pages, may be NULL.</para>
            <para>count        - number of |pages|, may be 0.</para>
            <para>image_object - handle to an image object.</para>
            <para>file_access  - file access handler which specifies the JPEG image file.</para>
            <para>Returns TRUE on success.</para>
            <para>The image object might already have an associated image, which is shared and</para>
            <para>cached by the loaded pages. In that case, we need to clear the cached image</para>
            <para>for all the loaded pages. Pass |pages| and page count (|count|) to this API</para>
            <para>to clear the image cache. If the image is not previously shared, or NULL is a</para>
            <para>valid |pages| value.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFImageObjLoadJpegFileInline(PDFiumCore.FpdfPageT,System.Int32,PDFiumCore.FpdfPageobjectT,PDFiumCore.FPDF_FILEACCESS)">
            <summary>
            <para>Load an image from a JPEG image file and then set it into |image_object|.</para>
            <para>pages        - pointer to the start of all loaded pages, may be NULL.</para>
            <para>count        - number of |pages|, may be 0.</para>
            <para>image_object - handle to an image object.</para>
            <para>file_access  - file access handler which specifies the JPEG image file.</para>
            <para>Returns TRUE on success.</para>
            <para>The image object might already have an associated image, which is shared and</para>
            <para>cached by the loaded pages. In that case, we need to clear the cached image</para>
            <para>for all the loaded pages. Pass |pages| and page count (|count|) to this API</para>
            <para>to clear the image cache. If the image is not previously shared, or NULL is a</para>
            <para>valid |pages| value. This function loads the JPEG image inline, so the image</para>
            <para>content is copied to the file. This allows |file_access| and its associated</para>
            <para>data to be deleted after this function returns.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFImageObjSetMatrix(PDFiumCore.FpdfPageobjectT,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            <para>TODO(thestig): Start deprecating this once FPDFPageObj_SetMatrix() is stable.</para>
            <para>Set the transform matrix of |image_object|.</para>
            <para>image_object - handle to an image object.</para>
            <para>a            - matrix value.</para>
            <para>b            - matrix value.</para>
            <para>c            - matrix value.</para>
            <para>d            - matrix value.</para>
            <para>e            - matrix value.</para>
            <para>f            - matrix value.</para>
            <para>The matrix is composed as:</para>
            <para>|a c e|</para>
            <para>|b d f|</para>
            <para>and can be used to scale, rotate, shear and translate the |image_object|.</para>
            <para>Returns TRUE on success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFImageObjSetBitmap(PDFiumCore.FpdfPageT,System.Int32,PDFiumCore.FpdfPageobjectT,PDFiumCore.FpdfBitmapT)">
            <summary>
            <para>Set |bitmap| to |image_object|.</para>
            <para>pages        - pointer to the start of all loaded pages, may be NULL.</para>
            <para>count        - number of |pages|, may be 0.</para>
            <para>image_object - handle to an image object.</para>
            <para>bitmap       - handle of the bitmap.</para>
            <para>Returns TRUE on success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFImageObjGetBitmap(PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Get a bitmap rasterization of |image_object|. FPDFImageObj_GetBitmap() only</para>
            <para>operates on |image_object| and does not take the associated image mask into</para>
            <para>account. It also ignores the matrix for |image_object|.</para>
            <para>The returned bitmap will be owned by the caller, and FPDFBitmap_Destroy()</para>
            <para>must be called on the returned bitmap when it is no longer needed.</para>
            <para>image_object - handle to an image object.</para>
            <para>Returns the bitmap.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFImageObjGetRenderedBitmap(PDFiumCore.FpdfDocumentT,PDFiumCore.FpdfPageT,PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get a bitmap rasterization of |image_object| that takes the image mask and</para>
            <para>image matrix into account. To render correctly, the caller must provide the</para>
            <para>|document| associated with |image_object|. If there is a |page| associated</para>
            <para>with |image_object|, the caller should provide that as well.</para>
            <para>The returned bitmap will be owned by the caller, and FPDFBitmap_Destroy()</para>
            <para>must be called on the returned bitmap when it is no longer needed.</para>
            <para>document     - handle to a document associated with |image_object|.</para>
            <para>page         - handle to an optional page associated with |image_object|.</para>
            <para>image_object - handle to an image object.</para>
            <para>Returns the bitmap or NULL on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFImageObjGetImageDataDecoded(PDFiumCore.FpdfPageobjectT,System.IntPtr,System.UInt32)">
            <summary>
            <para>Get the decoded image data of |image_object|. The decoded data is the</para>
            <para>uncompressed image data, i.e. the raw image data after having all filters</para>
            <para>applied. |buffer| is only modified if |buflen| is longer than the length of</para>
            <para>the decoded image data.</para>
            <para>image_object - handle to an image object.</para>
            <para>buffer       - buffer for holding the decoded image data.</para>
            <para>buflen       - length of the buffer in bytes.</para>
            <para>Returns the length of the decoded image data.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFImageObjGetImageDataRaw(PDFiumCore.FpdfPageobjectT,System.IntPtr,System.UInt32)">
            <summary>
            <para>Get the raw image data of |image_object|. The raw data is the image data as</para>
            <para>stored in the PDF without applying any filters. |buffer| is only modified if</para>
            <para>|buflen| is longer than the length of the raw image data.</para>
            <para>image_object - handle to an image object.</para>
            <para>buffer       - buffer for holding the raw image data.</para>
            <para>buflen       - length of the buffer in bytes.</para>
            <para>Returns the length of the raw image data.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFImageObjGetImageFilterCount(PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Get the number of filters (i.e. decoders) of the image in |image_object|.</para>
            <para>image_object - handle to an image object.</para>
            <para>Returns the number of |image_object|'s filters.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFImageObjGetImageFilter(PDFiumCore.FpdfPageobjectT,System.Int32,System.IntPtr,System.UInt32)">
            <summary>
            <para>Get the filter at |index| of |image_object|'s list of filters. Note that the</para>
            <para>filters need to be applied in order, i.e. the first filter should be applied</para>
            <para>first, then the second, etc. |buffer| is only modified if |buflen| is longer</para>
            <para>than the length of the filter string.</para>
            <para>image_object - handle to an image object.</para>
            <para>index        - the index of the filter requested.</para>
            <para>buffer       - buffer for holding filter string, encoded in UTF-8.</para>
            <para>buflen       - length of the buffer.</para>
            <para>Returns the length of the filter string.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFImageObjGetImageMetadata(PDFiumCore.FpdfPageobjectT,PDFiumCore.FpdfPageT,PDFiumCore.FPDF_IMAGEOBJ_METADATA)">
            <summary>
            <para>Get the image metadata of |image_object|, including dimension, DPI, bits per</para>
            <para>pixel, and colorspace. If the |image_object| is not an image object or if it</para>
            <para>does not have an image, then the return value will be false. Otherwise,</para>
            <para>failure to retrieve any specific parameter would result in its value being 0.</para>
            <para>image_object - handle to an image object.</para>
            <para>page         - handle to the page that |image_object| is on. Required for</para>
            <para>retrieving the image's bits per pixel and colorspace.</para>
            <para>metadata     - receives the image metadata; must not be NULL.</para>
            <para>Returns true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFImageObjGetImagePixelSize(PDFiumCore.FpdfPageobjectT,System.UInt32@,System.UInt32@)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the image size in pixels. Faster method to get only image size.</para>
            <para>image_object - handle to an image object.</para>
            <para>width        - receives the image width in pixels; must not be NULL.</para>
            <para>height       - receives the image height in pixels; must not be NULL.</para>
            <para>Returns true if successful.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjCreateNewPath(System.Single,System.Single)">
            <summary>
            <para>Create a new path object at an initial position.</para>
            <para>x - initial horizontal position.</para>
            <para>y - initial vertical position.</para>
            <para>Returns a handle to a new path object.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjCreateNewRect(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <para>Create a closed path consisting of a rectangle.</para>
            <para>x - horizontal position for the left boundary of the rectangle.</para>
            <para>y - vertical position for the bottom boundary of the rectangle.</para>
            <para>w - width of the rectangle.</para>
            <para>h - height of the rectangle.</para>
            <para>Returns a handle to the new path object.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjGetBounds(PDFiumCore.FpdfPageobjectT,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            <para>Get the bounding box of |page_object|.</para>
            <para>page_object  - handle to a page object.</para>
            <para>left         - pointer where the left coordinate will be stored</para>
            <para>bottom       - pointer where the bottom coordinate will be stored</para>
            <para>right        - pointer where the right coordinate will be stored</para>
            <para>top          - pointer where the top coordinate will be stored</para>
            <para>On success, returns TRUE and fills in the 4 coordinates.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjGetRotatedBounds(PDFiumCore.FpdfPageobjectT,PDFiumCore.FS_QUADPOINTSF)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the quad points that bounds |page_object|.</para>
            <para>page_object  - handle to a page object.</para>
            <para>quad_points  - pointer where the quadrilateral points will be stored.</para>
            <para>On success, returns TRUE and fills in |quad_points|.</para>
            <para>Similar to FPDFPageObj_GetBounds(), this returns the bounds of a page</para>
            <para>object. When the object is rotated by a non-multiple of 90 degrees, this API</para>
            <para>returns a tighter bound that cannot be represented with just the 4 sides of</para>
            <para>a rectangle.</para>
            <para>Currently only works the following |page_object| types: FPDF_PAGEOBJ_TEXT and</para>
            <para>FPDF_PAGEOBJ_IMAGE.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjSetBlendMode(PDFiumCore.FpdfPageobjectT,System.String)">
            <summary>
            <para>Set the blend mode of |page_object|.</para>
            <para>page_object  - handle to a page object.</para>
            <para>blend_mode   - string containing the blend mode.</para>
            <para>Blend mode can be one of following: Color, ColorBurn, ColorDodge, Darken,</para>
            <para>Difference, Exclusion, HardLight, Hue, Lighten, Luminosity, Multiply, Normal,</para>
            <para>Overlay, Saturation, Screen, SoftLight</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjSetStrokeColor(PDFiumCore.FpdfPageobjectT,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            <para>Set the stroke RGBA of a page object. Range of values: 0 - 255.</para>
            <para>page_object  - the handle to the page object.</para>
            <para>R            - the red component for the object's stroke color.</para>
            <para>G            - the green component for the object's stroke color.</para>
            <para>B            - the blue component for the object's stroke color.</para>
            <para>A            - the stroke alpha for the object.</para>
            <para>Returns TRUE on success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjGetStrokeColor(PDFiumCore.FpdfPageobjectT,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)">
            <summary>
            <para>Get the stroke RGBA of a page object. Range of values: 0 - 255.</para>
            <para>page_object  - the handle to the page object.</para>
            <para>R            - the red component of the path stroke color.</para>
            <para>G            - the green component of the object's stroke color.</para>
            <para>B            - the blue component of the object's stroke color.</para>
            <para>A            - the stroke alpha of the object.</para>
            <para>Returns TRUE on success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjSetStrokeWidth(PDFiumCore.FpdfPageobjectT,System.Single)">
            <summary>
            <para>Set the stroke width of a page object.</para>
            <para>path   - the handle to the page object.</para>
            <para>width  - the width of the stroke.</para>
            <para>Returns TRUE on success</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjGetStrokeWidth(PDFiumCore.FpdfPageobjectT,System.Single@)">
            <summary>
            <para>Get the stroke width of a page object.</para>
            <para>path   - the handle to the page object.</para>
            <para>width  - the width of the stroke.</para>
            <para>Returns TRUE on success</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjGetLineJoin(PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Get the line join of |page_object|.</para>
            <para>page_object  - handle to a page object.</para>
            <para>Returns the line join, or -1 on failure.</para>
            <para>Line join can be one of following: FPDF_LINEJOIN_MITER, FPDF_LINEJOIN_ROUND,</para>
            <para>FPDF_LINEJOIN_BEVEL</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjSetLineJoin(PDFiumCore.FpdfPageobjectT,System.Int32)">
            <summary>
            <para>Set the line join of |page_object|.</para>
            <para>page_object  - handle to a page object.</para>
            <para>line_join    - line join</para>
            <para>Line join can be one of following: FPDF_LINEJOIN_MITER, FPDF_LINEJOIN_ROUND,</para>
            <para>FPDF_LINEJOIN_BEVEL</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjGetLineCap(PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Get the line cap of |page_object|.</para>
            <para>page_object - handle to a page object.</para>
            <para>Returns the line cap, or -1 on failure.</para>
            <para>Line cap can be one of following: FPDF_LINECAP_BUTT, FPDF_LINECAP_ROUND,</para>
            <para>FPDF_LINECAP_PROJECTING_SQUARE</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjSetLineCap(PDFiumCore.FpdfPageobjectT,System.Int32)">
            <summary>
            <para>Set the line cap of |page_object|.</para>
            <para>page_object - handle to a page object.</para>
            <para>line_cap    - line cap</para>
            <para>Line cap can be one of following: FPDF_LINECAP_BUTT, FPDF_LINECAP_ROUND,</para>
            <para>FPDF_LINECAP_PROJECTING_SQUARE</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjSetFillColor(PDFiumCore.FpdfPageobjectT,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            <para>Set the fill RGBA of a page object. Range of values: 0 - 255.</para>
            <para>page_object  - the handle to the page object.</para>
            <para>R            - the red component for the object's fill color.</para>
            <para>G            - the green component for the object's fill color.</para>
            <para>B            - the blue component for the object's fill color.</para>
            <para>A            - the fill alpha for the object.</para>
            <para>Returns TRUE on success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjGetFillColor(PDFiumCore.FpdfPageobjectT,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)">
            <summary>
            <para>Get the fill RGBA of a page object. Range of values: 0 - 255.</para>
            <para>page_object  - the handle to the page object.</para>
            <para>R            - the red component of the object's fill color.</para>
            <para>G            - the green component of the object's fill color.</para>
            <para>B            - the blue component of the object's fill color.</para>
            <para>A            - the fill alpha of the object.</para>
            <para>Returns TRUE on success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjGetDashPhase(PDFiumCore.FpdfPageobjectT,System.Single@)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the line dash |phase| of |page_object|.</para>
            <para>page_object - handle to a page object.</para>
            <para>phase - pointer where the dashing phase will be stored.</para>
            <para>Returns TRUE on success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjSetDashPhase(PDFiumCore.FpdfPageobjectT,System.Single)">
            <summary>
            <para>Experimental API.</para>
            <para>Set the line dash phase of |page_object|.</para>
            <para>page_object - handle to a page object.</para>
            <para>phase - line dash phase.</para>
            <para>Returns TRUE on success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjGetDashCount(PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the line dash array of |page_object|.</para>
            <para>page_object - handle to a page object.</para>
            <para>Returns the line dash array size or -1 on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjGetDashArray(PDFiumCore.FpdfPageobjectT,System.Single@,System.UInt64)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the line dash array of |page_object|.</para>
            <para>page_object - handle to a page object.</para>
            <para>dash_array - pointer where the dashing array will be stored.</para>
            <para>dash_count - number of elements in |dash_array|.</para>
            <para>Returns TRUE on success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjSetDashArray(PDFiumCore.FpdfPageobjectT,System.Single@,System.UInt64,System.Single)">
            <summary>
            <para>Experimental API.</para>
            <para>Set the line dash array of |page_object|.</para>
            <para>page_object - handle to a page object.</para>
            <para>dash_array - the dash array.</para>
            <para>dash_count - number of elements in |dash_array|.</para>
            <para>phase - the line dash phase.</para>
            <para>Returns TRUE on success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPathCountSegments(PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Get number of segments inside |path|.</para>
            <para>path - handle to a path.</para>
            <para>A segment is a command, created by e.g. FPDFPath_MoveTo(),</para>
            <para>FPDFPath_LineTo() or FPDFPath_BezierTo().</para>
            <para>Returns the number of objects in |path| or -1 on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPathGetPathSegment(PDFiumCore.FpdfPageobjectT,System.Int32)">
            <summary>
            <para>Get segment in |path| at |index|.</para>
            <para>path  - handle to a path.</para>
            <para>index - the index of a segment.</para>
            <para>Returns the handle to the segment, or NULL on faiure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPathSegmentGetPoint(PDFiumCore.FpdfPathsegmentT,System.Single@,System.Single@)">
            <summary>
            <para>Get coordinates of |segment|.</para>
            <para>segment  - handle to a segment.</para>
            <para>x      - the horizontal position of the segment.</para>
            <para>y      - the vertical position of the segment.</para>
            <para>Returns TRUE on success, otherwise |x| and |y| is not set.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPathSegmentGetType(PDFiumCore.FpdfPathsegmentT)">
            <summary>
            <para>Get type of |segment|.</para>
            <para>segment - handle to a segment.</para>
            <para>Returns one of the FPDF_SEGMENT_* values on success,</para>
            <para>FPDF_SEGMENT_UNKNOWN on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPathSegmentGetClose(PDFiumCore.FpdfPathsegmentT)">
            <summary>
            <para>Gets if the |segment| closes the current subpath of a given path.</para>
            <para>segment - handle to a segment.</para>
            <para>Returns close flag for non-NULL segment, FALSE otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPathMoveTo(PDFiumCore.FpdfPageobjectT,System.Single,System.Single)">
            <summary>
            <para>Move a path's current point.</para>
            <para>path   - the handle to the path object.</para>
            <para>x      - the horizontal position of the new current point.</para>
            <para>y      - the vertical position of the new current point.</para>
            <para>Note that no line will be created between the previous current point and the</para>
            <para>new one.</para>
            <para>Returns TRUE on success</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPathLineTo(PDFiumCore.FpdfPageobjectT,System.Single,System.Single)">
            <summary>
            <para>Add a line between the current point and a new point in the path.</para>
            <para>path   - the handle to the path object.</para>
            <para>x      - the horizontal position of the new point.</para>
            <para>y      - the vertical position of the new point.</para>
            <para>The path's current point is changed to (x, y).</para>
            <para>Returns TRUE on success</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPathBezierTo(PDFiumCore.FpdfPageobjectT,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <para>Add a cubic Bezier curve to the given path, starting at the current point.</para>
            <para>path   - the handle to the path object.</para>
            <para>x1     - the horizontal position of the first Bezier control point.</para>
            <para>y1     - the vertical position of the first Bezier control point.</para>
            <para>x2     - the horizontal position of the second Bezier control point.</para>
            <para>y2     - the vertical position of the second Bezier control point.</para>
            <para>x3     - the horizontal position of the ending point of the Bezier curve.</para>
            <para>y3     - the vertical position of the ending point of the Bezier curve.</para>
            <para>Returns TRUE on success</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPathClose(PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Close the current subpath of a given path.</para>
            <para>path   - the handle to the path object.</para>
            <para>This will add a line between the current point and the initial point of the</para>
            <para>subpath, thus terminating the current subpath.</para>
            <para>Returns TRUE on success</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPathSetDrawMode(PDFiumCore.FpdfPageobjectT,System.Int32,System.Int32)">
            <summary>
            <para>Set the drawing mode of a path.</para>
            <para>path     - the handle to the path object.</para>
            <para>fillmode - the filling mode to be set: one of the FPDF_FILLMODE_* flags.</para>
            <para>stroke   - a boolean specifying if the path should be stroked or not.</para>
            <para>Returns TRUE on success</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPathGetDrawMode(PDFiumCore.FpdfPageobjectT,System.Int32@,System.Int32@)">
            <summary>
            <para>Get the drawing mode of a path.</para>
            <para>path     - the handle to the path object.</para>
            <para>fillmode - the filling mode of the path: one of the FPDF_FILLMODE_* flags.</para>
            <para>stroke   - a boolean specifying if the path is stroked or not.</para>
            <para>Returns TRUE on success</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjNewTextObj(PDFiumCore.FpdfDocumentT,System.String,System.Single)">
            <summary>
            <para>Create a new text object using one of the standard PDF fonts.</para>
            <para>document   - handle to the document.</para>
            <para>font       - string containing the font name, without spaces.</para>
            <para>font_size  - the font size for the new text object.</para>
            <para>Returns a handle to a new text object, or NULL on failure</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFTextSetText(PDFiumCore.FpdfPageobjectT,System.UInt16@)">
            <summary>
            <para>Set the text for a text object. If it had text, it will be replaced.</para>
            <para>text_object  - handle to the text object.</para>
            <para>text         - the UTF-16LE encoded string containing the text to be added.</para>
            <para>Returns TRUE on success</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFTextSetCharcodes(PDFiumCore.FpdfPageobjectT,System.UInt32@,System.UInt64)">
            <summary>
            <para>Experimental API.</para>
            <para>Set the text using charcodes for a text object. If it had text, it will be</para>
            <para>replaced.</para>
            <para>text_object  - handle to the text object.</para>
            <para>charcodes    - pointer to an array of charcodes to be added.</para>
            <para>count        - number of elements in |charcodes|.</para>
            <para>Returns TRUE on success</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFTextLoadFont(PDFiumCore.FpdfDocumentT,System.Byte*,System.UInt32,System.Int32,System.Int32)">
            <summary>
            <para>Returns a font object loaded from a stream of data. The font is loaded</para>
            <para>into the document. Various font data structures, such as the ToUnicode data,</para>
            <para>are auto-generated based on the inputs.</para>
            <para>document  - handle to the document.</para>
            <para>data      - the stream of font data, which will be copied by the font object.</para>
            <para>size      - the size of the font data, in bytes.</para>
            <para>font_type - FPDF_FONT_TYPE1 or FPDF_FONT_TRUETYPE depending on the font type.</para>
            <para>cid       - a boolean specifying if the font is a CID font or not.</para>
            <para>The loaded font can be closed using FPDFFont_Close().</para>
            <para>Returns NULL on failure</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFTextLoadStandardFont(PDFiumCore.FpdfDocumentT,System.String)">
            <summary>
            <para>Experimental API.</para>
            <para>Loads one of the standard 14 fonts per PDF spec 1.7 page 416. The preferred</para>
            <para>way of using font style is using a dash to separate the name from the style,</para>
            <para>for example 'Helvetica-BoldItalic'.</para>
            <para>document   - handle to the document.</para>
            <para>font       - string containing the font name, without spaces.</para>
            <para>The loaded font can be closed using FPDFFont_Close().</para>
            <para>Returns NULL on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFTextLoadCidType2Font(PDFiumCore.FpdfDocumentT,System.Byte*,System.UInt32,System.String,System.Byte*,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Returns a font object loaded from a stream of data for a type 2 CID font. The</para>
            <para>font is loaded into the document. Unlike FPDFText_LoadFont(), the ToUnicode</para>
            <para>data and the CIDToGIDMap data are caller provided, instead of auto-generated.</para>
            <para>document                 - handle to the document.</para>
            <para>font_data                - the stream of font data, which will be copied by</para>
            <para>the font object.</para>
            <para>font_data_size           - the size of the font data, in bytes.</para>
            <para>to_unicode_cmap          - the ToUnicode data.</para>
            <para>cid_to_gid_map_data      - the stream of CIDToGIDMap data.</para>
            <para>cid_to_gid_map_data_size - the size of the CIDToGIDMap data, in bytes.</para>
            <para>The loaded font can be closed using FPDFFont_Close().</para>
            <para>Returns NULL on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFTextObjGetFontSize(PDFiumCore.FpdfPageobjectT,System.Single@)">
            <summary>
            <para>Get the font size of a text object.</para>
            <para>text - handle to a text.</para>
            <para>size - pointer to the font size of the text object, measured in points</para>
            <para>(about 1/72 inch)</para>
            <para>Returns TRUE on success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFFontClose(PDFiumCore.FpdfFontT)">
            <summary>
            <para>Close a loaded PDF font.</para>
            <para>font   - Handle to the loaded font.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFPageObjCreateTextObj(PDFiumCore.FpdfDocumentT,PDFiumCore.FpdfFontT,System.Single)">
            <summary>
            <para>Create a new text object using a loaded font.</para>
            <para>document   - handle to the document.</para>
            <para>font       - handle to the font object.</para>
            <para>font_size  - the font size for the new text object.</para>
            <para>Returns a handle to a new text object, or NULL on failure</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFTextObjGetTextRenderMode(PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Get the text rendering mode of a text object.</para>
            <para>text     - the handle to the text object.</para>
            <para>Returns one of the known FPDF_TEXT_RENDERMODE enum values on success,</para>
            <para>FPDF_TEXTRENDERMODE_UNKNOWN on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFTextObjSetTextRenderMode(PDFiumCore.FpdfPageobjectT,PDFiumCore.FPDF_TEXT_RENDERMODE)">
            <summary>
            <para>Experimental API.</para>
            <para>Set the text rendering mode of a text object.</para>
            <para>text         - the handle to the text object.</para>
            <para>render_mode  - the FPDF_TEXT_RENDERMODE enum value to be set (cannot set to</para>
            <para>FPDF_TEXTRENDERMODE_UNKNOWN).</para>
            <para>Returns TRUE on success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFTextObjGetText(PDFiumCore.FpdfPageobjectT,PDFiumCore.FpdfTextpageT,System.UInt16@,System.UInt32)">
            <summary>
            <para>Get the text of a text object.</para>
            <para>text_object      - the handle to the text object.</para>
            <para>text_page        - the handle to the text page.</para>
            <para>buffer           - the address of a buffer that receives the text.</para>
            <para>length           - the size, in bytes, of |buffer|.</para>
            <para>Returns the number of bytes in the text (including the trailing NUL</para>
            <para>character) on success, 0 on error.</para>
            <para>Regardless of the platform, the |buffer| is always in UTF-16LE encoding.</para>
            <para>If |length| is less than the returned length, or |buffer| is NULL, |buffer|</para>
            <para>will not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFTextObjGetRenderedBitmap(PDFiumCore.FpdfDocumentT,PDFiumCore.FpdfPageT,PDFiumCore.FpdfPageobjectT,System.Single)">
            <summary>
            <para>Experimental API.</para>
            <para>Get a bitmap rasterization of |text_object|. To render correctly, the caller</para>
            <para>must provide the |document| associated with |text_object|. If there is a</para>
            <para>|page| associated with |text_object|, the caller should provide that as well.</para>
            <para>The returned bitmap will be owned by the caller, and FPDFBitmap_Destroy()</para>
            <para>must be called on the returned bitmap when it is no longer needed.</para>
            <para>document    - handle to a document associated with |text_object|.</para>
            <para>page        - handle to an optional page associated with |text_object|.</para>
            <para>text_object - handle to a text object.</para>
            <para>scale       - the scaling factor, which must be greater than 0.</para>
            <para>Returns the bitmap or NULL on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFTextObjGetFont(PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the font of a text object.</para>
            <para>text - the handle to the text object.</para>
            <para>Returns a handle to the font object held by |text| which retains ownership.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFFontGetFontName(PDFiumCore.FpdfFontT,System.SByte*,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the font name of a font.</para>
            <para>font   - the handle to the font object.</para>
            <para>buffer - the address of a buffer that receives the font name.</para>
            <para>length - the size, in bytes, of |buffer|.</para>
            <para>Returns the number of bytes in the font name (including the trailing NUL</para>
            <para>character) on success, 0 on error.</para>
            <para>Regardless of the platform, the |buffer| is always in UTF-8 encoding.</para>
            <para>If |length| is less than the returned length, or |buffer| is NULL, |buffer|</para>
            <para>will not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFFontGetFontData(PDFiumCore.FpdfFontT,System.Byte*,System.UInt64,System.UInt64@)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the decoded data from the |font| object.</para>
            <para>font       - The handle to the font object. (Required)</para>
            <para>buffer     - The address of a buffer that receives the font data.</para>
            <para>buflen     - Length of the buffer.</para>
            <para>out_buflen - Pointer to variable that will receive the minimum buffer size</para>
            <para>to contain the font data. Not filled if the return value is</para>
            <para>FALSE. (Required)</para>
            <para>Returns TRUE on success. In which case, |out_buflen| will be filled, and</para>
            <para>|buffer| will be filled if it is large enough. Returns FALSE if any of the</para>
            <para>required parameters are null.</para>
            <para>The decoded data is the uncompressed font data. i.e. the raw font data after</para>
            <para>having all stream filters applied, when the data is embedded.</para>
            <para>If the font is not embedded, then this API will instead return the data for</para>
            <para>the substitution font it is using.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFFontGetIsEmbedded(PDFiumCore.FpdfFontT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get whether |font| is embedded or not.</para>
            <para>font - the handle to the font object.</para>
            <para>Returns 1 if the font is embedded, 0 if it not, and -1 on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFFontGetFlags(PDFiumCore.FpdfFontT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the descriptor flags of a font.</para>
            <para>font - the handle to the font object.</para>
            <para>Returns the bit flags specifying various characteristics of the font as</para>
            <para>defined in ISO 32000-1:2008, table 123, -1 on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFFontGetWeight(PDFiumCore.FpdfFontT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the font weight of a font.</para>
            <para>font - the handle to the font object.</para>
            <para>Returns the font weight, -1 on failure.</para>
            <para>Typical values are 400 (normal) and 700 (bold).</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFFontGetItalicAngle(PDFiumCore.FpdfFontT,System.Int32@)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the italic angle of a font.</para>
            <para>font  - the handle to the font object.</para>
            <para>angle - pointer where the italic angle will be stored</para>
            <para>The italic angle of a |font| is defined as degrees counterclockwise</para>
            <para>from vertical. For a font that slopes to the right, this will be negative.</para>
            <para>Returns TRUE on success; |angle| unmodified on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFFontGetAscent(PDFiumCore.FpdfFontT,System.Single,System.Single@)">
            <summary>
            <para>Experimental API.</para>
            <para>Get ascent distance of a font.</para>
            <para>font       - the handle to the font object.</para>
            <para>font_size  - the size of the |font|.</para>
            <para>ascent     - pointer where the font ascent will be stored</para>
            <para>Ascent is the maximum distance in points above the baseline reached by the</para>
            <para>glyphs of the |font|. One point is 1/72 inch (around 0.3528 mm).</para>
            <para>Returns TRUE on success; |ascent| unmodified on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFFontGetDescent(PDFiumCore.FpdfFontT,System.Single,System.Single@)">
            <summary>
            <para>Experimental API.</para>
            <para>Get descent distance of a font.</para>
            <para>font       - the handle to the font object.</para>
            <para>font_size  - the size of the |font|.</para>
            <para>descent    - pointer where the font descent will be stored</para>
            <para>Descent is the maximum distance in points below the baseline reached by the</para>
            <para>glyphs of the |font|. One point is 1/72 inch (around 0.3528 mm).</para>
            <para>Returns TRUE on success; |descent| unmodified on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFFontGetGlyphWidth(PDFiumCore.FpdfFontT,System.UInt32,System.Single,System.Single@)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the width of a glyph in a font.</para>
            <para>font       - the handle to the font object.</para>
            <para>glyph      - the glyph.</para>
            <para>font_size  - the size of the font.</para>
            <para>width      - pointer where the glyph width will be stored</para>
            <para>Glyph width is the distance from the end of the prior glyph to the next</para>
            <para>glyph. This will be the vertical distance for vertical writing.</para>
            <para>Returns TRUE on success; |width| unmodified on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFFontGetGlyphPath(PDFiumCore.FpdfFontT,System.UInt32,System.Single)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the glyphpath describing how to draw a font glyph.</para>
            <para>font       - the handle to the font object.</para>
            <para>glyph      - the glyph being drawn.</para>
            <para>font_size  - the size of the font.</para>
            <para>Returns the handle to the segment, or NULL on faiure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFGlyphPathCountGlyphSegments(PDFiumCore.FpdfGlyphpathT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get number of segments inside glyphpath.</para>
            <para>glyphpath - handle to a glyph path.</para>
            <para>Returns the number of objects in |glyphpath| or -1 on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFGlyphPathGetGlyphPathSegment(PDFiumCore.FpdfGlyphpathT,System.Int32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get segment in glyphpath at index.</para>
            <para>glyphpath  - handle to a glyph path.</para>
            <para>index      - the index of a segment.</para>
            <para>Returns the handle to the segment, or NULL on faiure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFFormObjCountObjects(PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Get number of page objects inside |form_object|.</para>
            <para>form_object - handle to a form object.</para>
            <para>Returns the number of objects in |form_object| on success, -1 on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_edit.FPDFFormObjGetObject(PDFiumCore.FpdfPageobjectT,System.UInt32)">
            <summary>
            <para>Get page object in |form_object| at |index|.</para>
            <para>form_object - handle to a form object.</para>
            <para>index       - the 0-based index of a page object.</para>
            <para>Returns the handle to the page object, or NULL on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_flatten.FPDFPageFlatten(PDFiumCore.FpdfPageT,System.Int32)">
            <summary>
            <para>Flatten annotations and form fields into the page contents.</para>
            <para>page  - handle to the page.</para>
            <para>nFlag - One of the |FLAT_*| values denoting the page usage.</para>
            <para>Returns one of the |FLATTEN_*| values.</para>
            <para>Currently, all failures return |FLATTEN_FAIL| with no indication of the</para>
            <para>cause.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_javascript.FPDFDocGetJavaScriptActionCount(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the number of JavaScript actions in |document|.</para>
            <para>document - handle to a document.</para>
            <para>Returns the number of JavaScript actions in |document| or -1 on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_javascript.FPDFDocGetJavaScriptAction(PDFiumCore.FpdfDocumentT,System.Int32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the JavaScript action at |index| in |document|.</para>
            <para>document - handle to a document.</para>
            <para>index    - the index of the requested JavaScript action.</para>
            <para>Returns the handle to the JavaScript action, or NULL on failure.</para>
            <para>Caller owns the returned handle and must close it with</para>
            <para>FPDFDoc_CloseJavaScriptAction().</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_javascript.FPDFDocCloseJavaScriptAction(PDFiumCore.FpdfJavascriptActionT)">
            <summary>javascript - Handle to a JavaScript action.</summary>
        </member>
        <member name="M:PDFiumCore.fpdf_javascript.FPDFJavaScriptActionGetName(PDFiumCore.FpdfJavascriptActionT,System.UInt16@,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the name from the |javascript| handle. |buffer| is only modified if</para>
            <para>|buflen| is longer than the length of the name. On errors, |buffer| is</para>
            <para>unmodified and the returned length is 0.</para>
            <para>javascript - handle to an JavaScript action.</para>
            <para>buffer     - buffer for holding the name, encoded in UTF-16LE.</para>
            <para>buflen     - length of the buffer in bytes.</para>
            <para>Returns the length of the JavaScript action name in bytes.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_javascript.FPDFJavaScriptActionGetScript(PDFiumCore.FpdfJavascriptActionT,System.UInt16@,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the script from the |javascript| handle. |buffer| is only modified if</para>
            <para>|buflen| is longer than the length of the script. On errors, |buffer| is</para>
            <para>unmodified and the returned length is 0.</para>
            <para>javascript - handle to an JavaScript action.</para>
            <para>buffer     - buffer for holding the name, encoded in UTF-16LE.</para>
            <para>buflen     - length of the buffer in bytes.</para>
            <para>Returns the length of the JavaScript action name in bytes.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_ppo.FPDF_ImportPagesByIndex(PDFiumCore.FpdfDocumentT,PDFiumCore.FpdfDocumentT,System.Int32@,System.UInt32,System.Int32)">
            <summary>
            <para>Experimental API.</para>
            <para>Import pages to a FPDF_DOCUMENT.</para>
            <para>dest_doc     - The destination document for the pages.</para>
            <para>src_doc      - The document to be imported.</para>
            <para>page_indices - An array of page indices to be imported. The first page is</para>
            <para>zero. If |page_indices| is NULL, all pages from |src_doc|</para>
            <para>are imported.</para>
            <para>length       - The length of the |page_indices| array.</para>
            <para>index        - The page index at which to insert the first imported page</para>
            <para>into |dest_doc|. The first page is zero.</para>
            <para>Returns TRUE on success. Returns FALSE if any pages in |page_indices| is</para>
            <para>invalid.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_ppo.FPDF_ImportPages(PDFiumCore.FpdfDocumentT,PDFiumCore.FpdfDocumentT,System.String,System.Int32)">
            <summary>
            <para>Import pages to a FPDF_DOCUMENT.</para>
            <para>dest_doc  - The destination document for the pages.</para>
            <para>src_doc   - The document to be imported.</para>
            <para>pagerange - A page range string, Such as &quot;1,3,5-7&quot;. The first page is one.</para>
            <para>If |pagerange| is NULL, all pages from |src_doc| are imported.</para>
            <para>index     - The page index at which to insert the first imported page into</para>
            <para>|dest_doc|. The first page is zero.</para>
            <para>Returns TRUE on success. Returns FALSE if any pages in |pagerange| is</para>
            <para>invalid or if |pagerange| cannot be read.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_ppo.FPDF_ImportNPagesToOne(PDFiumCore.FpdfDocumentT,System.Single,System.Single,System.UInt64,System.UInt64)">
            <summary>
            <para>Experimental API.</para>
            <para>Create a new document from |src_doc|.  The pages of |src_doc| will be</para>
            <para>combined to provide |num_pages_on_x_axis x num_pages_on_y_axis| pages per</para>
            <para>|output_doc| page.</para>
            <para>src_doc             - The document to be imported.</para>
            <para>output_width        - The output page width in PDF &quot;user space&quot; units.</para>
            <para>output_height       - The output page height in PDF &quot;user space&quot; units.</para>
            <para>num_pages_on_x_axis - The number of pages on X Axis.</para>
            <para>num_pages_on_y_axis - The number of pages on Y Axis.</para>
            <para>Return value:</para>
            <para>A handle to the created document, or NULL on failure.</para>
            <para>Comments:</para>
            <para>number of pages per page = num_pages_on_x_axis * num_pages_on_y_axis</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_ppo.FPDF_NewXObjectFromPage(PDFiumCore.FpdfDocumentT,PDFiumCore.FpdfDocumentT,System.Int32)">
            <summary>
            <para>Experimental API.</para>
            <para>Create a template to generate form xobjects from |src_doc|'s page at</para>
            <para>|src_page_index|, for use in |dest_doc|.</para>
            <para>Returns a handle on success, or NULL on failure. Caller owns the newly</para>
            <para>created object.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_ppo.FPDF_CloseXObject(PDFiumCore.FpdfXobjectT)">
            <summary>
            <para>Experimental API.</para>
            <para>Close an FPDF_XOBJECT handle created by FPDF_NewXObjectFromPage().</para>
            <para>FPDF_PAGEOBJECTs created from the FPDF_XOBJECT handle are not affected.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_ppo.FPDF_NewFormObjectFromXObject(PDFiumCore.FpdfXobjectT)">
            <summary>
            <para>Experimental API.</para>
            <para>Create a new form object from an FPDF_XOBJECT object.</para>
            <para>Returns a new form object on success, or NULL on failure. Caller owns the</para>
            <para>newly created object.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_ppo.FPDF_CopyViewerPreferences(PDFiumCore.FpdfDocumentT,PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Copy the viewer preferences from |src_doc| into |dest_doc|.</para>
            <para>dest_doc - Document to write the viewer preferences into.</para>
            <para>src_doc  - Document to read the viewer preferences from.</para>
            <para>Returns TRUE on success.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_progressive.FPDF_RenderPageBitmapWithColorSchemeStart(PDFiumCore.FpdfBitmapT,PDFiumCore.FpdfPageT,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,PDFiumCore.FPDF_COLORSCHEME_,PDFiumCore.IFSDK_PAUSE)">
            <summary>
            <para>Function: FPDF_RenderPageBitmapWithColorScheme_Start</para>
            <para>Start to render page contents to a device independent bitmap</para>
            <para>progressively with a specified color scheme for the content.</para>
            <para>Parameters:</para>
            <para>bitmap       -   Handle to the device independent bitmap (as the output buffer). Bitmap handle can be created by FPDFBitmap_Create function.</para>
            <para>page         -   Handle to the page as returned by FPDF_LoadPage function.</para>
            <para>start_x      -   Left pixel position of the display area in the bitmap coordinate.</para>
            <para>start_y      -   Top pixel position of the display area in the bitmap coordinate.</para>
            <para>size_x       -   Horizontal size (in pixels) for displaying the page.</para>
            <para>size_y       -   Vertical size (in pixels) for displaying the page.</para>
            <para>rotate       -   Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</para>
            <para>flags        -   0 for normal display, or combination of flags defined in fpdfview.h. With FPDF_ANNOT flag, it renders all annotations that does not require user-interaction, which are all annotations except widget and popup annotations.</para>
            <para>color_scheme -   Color scheme to be used in rendering the |page|. If null, this function will work similar to FPDF_RenderPageBitmap_Start().</para>
            <para>pause        -   The IFSDK_PAUSE interface. A callback mechanism allowing the page rendering process.</para>
            <para>Return value:</para>
            <para>Rendering Status. See flags for progressive process status for the</para>
            <para>details.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_progressive.FPDF_RenderPageBitmapStart(PDFiumCore.FpdfBitmapT,PDFiumCore.FpdfPageT,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,PDFiumCore.IFSDK_PAUSE)">
            <summary>
            <para>Function: FPDF_RenderPageBitmap_Start</para>
            <para>Start to render page contents to a device independent bitmap</para>
            <para>progressively.</para>
            <para>Parameters:</para>
            <para>bitmap      -   Handle to the device independent bitmap (as the output buffer). Bitmap handle can be created by FPDFBitmap_Create().</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>start_x     -   Left pixel position of the display area in the bitmap coordinates.</para>
            <para>start_y     -   Top pixel position of the display area in the bitmap coordinates.</para>
            <para>size_x      -   Horizontal size (in pixels) for displaying the page.</para>
            <para>size_y      -   Vertical size (in pixels) for displaying the page.</para>
            <para>rotate      -   Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</para>
            <para>flags       -   0 for normal display, or combination of flags defined in fpdfview.h. With FPDF_ANNOT flag, it renders all annotations that does not require user-interaction, which are all annotations except widget and popup annotations.</para>
            <para>pause       -   The IFSDK_PAUSE interface.A callback mechanism allowing the page rendering process</para>
            <para>Return value:</para>
            <para>Rendering Status. See flags for progressive process status for the</para>
            <para>details.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_progressive.FPDF_RenderPageContinue(PDFiumCore.FpdfPageT,PDFiumCore.IFSDK_PAUSE)">
            <summary>
            <para>Function: FPDF_RenderPage_Continue</para>
            <para>Continue rendering a PDF page.</para>
            <para>Parameters:</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>pause       -   The IFSDK_PAUSE interface (a callback mechanism allowing the page rendering process to be paused before it's finished). This can be NULL if you don't want to pause.</para>
            <para>Return value:</para>
            <para>The rendering status. See flags for progressive process status for</para>
            <para>the details.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_progressive.FPDF_RenderPageClose(PDFiumCore.FpdfPageT)">
            <summary>
            <para>Function: FPDF_RenderPage_Close</para>
            <para>Release the resource allocate during page rendering. Need to be</para>
            <para>called after finishing rendering or</para>
            <para>cancel the rendering.</para>
            <para>Parameters:</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>Return value:</para>
            <para>None.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_save.FPDF_SaveAsCopy(PDFiumCore.FpdfDocumentT,PDFiumCore.FPDF_FILEWRITE_,System.UInt32)">
            <summary>
            <para>Function: FPDF_SaveAsCopy</para>
            <para>Saves the copy of specified document in custom way.</para>
            <para>Parameters:</para>
            <para>document        -   Handle to document, as returned by FPDF_LoadDocument() or FPDF_CreateNewDocument().</para>
            <para>pFileWrite      -   A pointer to a custom file write structure.</para>
            <para>flags           -   The creating flags.</para>
            <para>Return value:</para>
            <para>TRUE for succeed, FALSE for failed.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_save.FPDF_SaveWithVersion(PDFiumCore.FpdfDocumentT,PDFiumCore.FPDF_FILEWRITE_,System.UInt32,System.Int32)">
            <summary>
            <para>Function: FPDF_SaveWithVersion</para>
            <para>Same as FPDF_SaveAsCopy(), except the file version of the</para>
            <para>saved document can be specified by the caller.</para>
            <para>Parameters:</para>
            <para>document        -   Handle to document.</para>
            <para>pFileWrite      -   A pointer to a custom file write structure.</para>
            <para>flags           -   The creating flags.</para>
            <para>fileVersion     -   The PDF file version. File version: 14 for 1.4, 15 for 1.5, ...</para>
            <para>Return value:</para>
            <para>TRUE if succeed, FALSE if failed.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_searchex.FPDFTextGetCharIndexFromTextIndex(PDFiumCore.FpdfTextpageT,System.Int32)">
            <summary>
            <para>Get the character index in |text_page| internal character list.</para>
            <para>text_page  - a text page information structure.</para>
            <para>nTextIndex - index of the text returned from FPDFText_GetText().</para>
            <para>Returns the index of the character in internal character list. -1 for error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_searchex.FPDFTextGetTextIndexFromCharIndex(PDFiumCore.FpdfTextpageT,System.Int32)">
            <summary>
            <para>Get the text index in |text_page| internal character list.</para>
            <para>text_page  - a text page information structure.</para>
            <para>nCharIndex - index of the character in internal character list.</para>
            <para>Returns the index of the text returned from FPDFText_GetText(). -1 for error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_signature.FPDF_GetSignatureCount(PDFiumCore.FpdfDocumentT)">
            <summary>
            <para>Function: FPDF_GetSignatureCount</para>
            <para>Get total number of signatures in the document.</para>
            <para>Parameters:</para>
            <para>document    -   Handle to document. Returned by FPDF_LoadDocument().</para>
            <para>Return value:</para>
            <para>Total number of signatures in the document on success, -1 on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_signature.FPDF_GetSignatureObject(PDFiumCore.FpdfDocumentT,System.Int32)">
            <summary>
            <para>Function: FPDF_GetSignatureObject</para>
            <para>Get the Nth signature of the document.</para>
            <para>Parameters:</para>
            <para>document    -   Handle to document. Returned by FPDF_LoadDocument().</para>
            <para>index       -   Index into the array of signatures of the document.</para>
            <para>Return value:</para>
            <para>Returns the handle to the signature, or NULL on failure. The caller</para>
            <para>does not take ownership of the returned FPDF_SIGNATURE. Instead, it</para>
            <para>remains valid until FPDF_CloseDocument() is called for the document.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_signature.FPDFSignatureObjGetContents(PDFiumCore.FpdfSignatureT,System.IntPtr,System.UInt32)">
            <summary>
            <para>Function: FPDFSignatureObj_GetContents</para>
            <para>Get the contents of a signature object.</para>
            <para>Parameters:</para>
            <para>signature   -   Handle to the signature object. Returned by FPDF_GetSignatureObject().</para>
            <para>buffer      -   The address of a buffer that receives the contents.</para>
            <para>length      -   The size, in bytes, of |buffer|.</para>
            <para>Return value:</para>
            <para>Returns the number of bytes in the contents on success, 0 on error.</para>
            <para>For public-key signatures, |buffer| is either a DER-encoded PKCS#1 binary or</para>
            <para>a DER-encoded PKCS#7 binary. If |length| is less than the returned length, or</para>
            <para>|buffer| is NULL, |buffer| will not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_signature.FPDFSignatureObjGetByteRange(PDFiumCore.FpdfSignatureT,System.Int32@,System.UInt32)">
            <summary>
            <para>Function: FPDFSignatureObj_GetByteRange</para>
            <para>Get the byte range of a signature object.</para>
            <para>Parameters:</para>
            <para>signature   -   Handle to the signature object. Returned by FPDF_GetSignatureObject().</para>
            <para>buffer      -   The address of a buffer that receives the byte range.</para>
            <para>length      -   The size, in ints, of |buffer|.</para>
            <para>Return value:</para>
            <para>Returns the number of ints in the byte range on</para>
            <para>success, 0 on error.</para>
            <para>|buffer| is an array of pairs of integers (starting byte offset,</para>
            <para>length in bytes) that describes the exact byte range for the digest</para>
            <para>calculation. If |length| is less than the returned length, or</para>
            <para>|buffer| is NULL, |buffer| will not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_signature.FPDFSignatureObjGetSubFilter(PDFiumCore.FpdfSignatureT,System.SByte*,System.UInt32)">
            <summary>
            <para>Function: FPDFSignatureObj_GetSubFilter</para>
            <para>Get the encoding of the value of a signature object.</para>
            <para>Parameters:</para>
            <para>signature   -   Handle to the signature object. Returned by FPDF_GetSignatureObject().</para>
            <para>buffer      -   The address of a buffer that receives the encoding.</para>
            <para>length      -   The size, in bytes, of |buffer|.</para>
            <para>Return value:</para>
            <para>Returns the number of bytes in the encoding name (including the</para>
            <para>trailing NUL character) on success, 0 on error.</para>
            <para>The |buffer| is always encoded in 7-bit ASCII. If |length| is less than the</para>
            <para>returned length, or |buffer| is NULL, |buffer| will not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_signature.FPDFSignatureObjGetReason(PDFiumCore.FpdfSignatureT,System.IntPtr,System.UInt32)">
            <summary>
            <para>Function: FPDFSignatureObj_GetReason</para>
            <para>Get the reason (comment) of the signature object.</para>
            <para>Parameters:</para>
            <para>signature   -   Handle to the signature object. Returned by FPDF_GetSignatureObject().</para>
            <para>buffer      -   The address of a buffer that receives the reason.</para>
            <para>length      -   The size, in bytes, of |buffer|.</para>
            <para>Return value:</para>
            <para>Returns the number of bytes in the reason on success, 0 on error.</para>
            <para>Regardless of the platform, the |buffer| is always in UTF-16LE encoding. The</para>
            <para>string is terminated by a UTF16 NUL character. If |length| is less than the</para>
            <para>returned length, or |buffer| is NULL, |buffer| will not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_signature.FPDFSignatureObjGetTime(PDFiumCore.FpdfSignatureT,System.SByte*,System.UInt32)">
            <summary>
            <para>Function: FPDFSignatureObj_GetTime</para>
            <para>Get the time of signing of a signature object.</para>
            <para>Parameters:</para>
            <para>signature   -   Handle to the signature object. Returned by FPDF_GetSignatureObject().</para>
            <para>buffer      -   The address of a buffer that receives the time.</para>
            <para>length      -   The size, in bytes, of |buffer|.</para>
            <para>Return value:</para>
            <para>Returns the number of bytes in the encoding name (including the</para>
            <para>trailing NUL character) on success, 0 on error.</para>
            <para>The |buffer| is always encoded in 7-bit ASCII. If |length| is less than the</para>
            <para>returned length, or |buffer| is NULL, |buffer| will not be modified.</para>
            <para>The format of time is expected to be D:YYYYMMDDHHMMSS+XX'YY', i.e. it's</para>
            <para>percision is seconds, with timezone information. This value should be used</para>
            <para>only when the time of signing is not available in the (PKCS#7 binary)</para>
            <para>signature.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_signature.FPDFSignatureObjGetDocMDPPermission(PDFiumCore.FpdfSignatureT)">
            <summary>
            <para>Function: FPDFSignatureObj_GetDocMDPPermission</para>
            <para>Get the DocMDP permission of a signature object.</para>
            <para>Parameters:</para>
            <para>signature   -   Handle to the signature object. Returned by FPDF_GetSignatureObject().</para>
            <para>Return value:</para>
            <para>Returns the permission (1, 2 or 3) on success, 0 on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructTreeGetForPage(PDFiumCore.FpdfPageT)">
            <summary>
            <para>Function: FPDF_StructTree_GetForPage</para>
            <para>Get the structure tree for a page.</para>
            <para>Parameters:</para>
            <para>page        -   Handle to the page, as returned by FPDF_LoadPage().</para>
            <para>Return value:</para>
            <para>A handle to the structure tree or NULL on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructTreeClose(PDFiumCore.FpdfStructtreeT)">
            <summary>
            <para>Function: FPDF_StructTree_Close</para>
            <para>Release a resource allocated by FPDF_StructTree_GetForPage().</para>
            <para>Parameters:</para>
            <para>struct_tree -   Handle to the structure tree, as returned by FPDF_StructTree_LoadPage().</para>
            <para>Return value:</para>
            <para>None.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructTreeCountChildren(PDFiumCore.FpdfStructtreeT)">
            <summary>
            <para>Function: FPDF_StructTree_CountChildren</para>
            <para>Count the number of children for the structure tree.</para>
            <para>Parameters:</para>
            <para>struct_tree -   Handle to the structure tree, as returned by FPDF_StructTree_LoadPage().</para>
            <para>Return value:</para>
            <para>The number of children, or -1 on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructTreeGetChildAtIndex(PDFiumCore.FpdfStructtreeT,System.Int32)">
            <summary>
            <para>Function: FPDF_StructTree_GetChildAtIndex</para>
            <para>Get a child in the structure tree.</para>
            <para>Parameters:</para>
            <para>struct_tree -   Handle to the structure tree, as returned by FPDF_StructTree_LoadPage().</para>
            <para>index       -   The index for the child, 0-based.</para>
            <para>Return value:</para>
            <para>The child at the n-th index or NULL on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementGetAltText(PDFiumCore.FpdfStructelementT,System.IntPtr,System.UInt32)">
            <summary>
            <para>Function: FPDF_StructElement_GetAltText</para>
            <para>Get the alt text for a given element.</para>
            <para>Parameters:</para>
            <para>struct_element -   Handle to the struct element.</para>
            <para>buffer         -   A buffer for output the alt text. May be NULL.</para>
            <para>buflen         -   The length of the buffer, in bytes. May be 0.</para>
            <para>Return value:</para>
            <para>The number of bytes in the alt text, including the terminating NUL</para>
            <para>character. The number of bytes is returned regardless of the</para>
            <para>|buffer| and |buflen| parameters.</para>
            <para>Comments: Regardless of the platform, the |buffer| is always in UTF-16LE encoding. The string is terminated by a UTF16 NUL character. If |buflen| is less than the required length, or |buffer| is NULL, |buffer| will not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementGetActualText(PDFiumCore.FpdfStructelementT,System.IntPtr,System.UInt32)">
            <summary>
            <para>Function: FPDF_StructElement_GetActualText</para>
            <para>Get the actual text for a given element.</para>
            <para>Parameters:</para>
            <para>struct_element -   Handle to the struct element.</para>
            <para>buffer         -   A buffer for output the actual text. May be NULL.</para>
            <para>buflen         -   The length of the buffer, in bytes. May be 0.</para>
            <para>Return value:</para>
            <para>The number of bytes in the actual text, including the terminating</para>
            <para>NUL character. The number of bytes is returned regardless of the</para>
            <para>|buffer| and |buflen| parameters.</para>
            <para>Comments: Regardless of the platform, the |buffer| is always in UTF-16LE encoding. The string is terminated by a UTF16 NUL character. If |buflen| is less than the required length, or |buffer| is NULL, |buffer| will not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementGetID(PDFiumCore.FpdfStructelementT,System.IntPtr,System.UInt32)">
            <summary>
            <para>Function: FPDF_StructElement_GetID</para>
            <para>Get the ID for a given element.</para>
            <para>Parameters:</para>
            <para>struct_element -   Handle to the struct element.</para>
            <para>buffer         -   A buffer for output the ID string. May be NULL.</para>
            <para>buflen         -   The length of the buffer, in bytes. May be 0.</para>
            <para>Return value:</para>
            <para>The number of bytes in the ID string, including the terminating NUL</para>
            <para>character. The number of bytes is returned regardless of the</para>
            <para>|buffer| and |buflen| parameters.</para>
            <para>Comments: Regardless of the platform, the |buffer| is always in UTF-16LE encoding. The string is terminated by a UTF16 NUL character. If |buflen| is less than the required length, or |buffer| is NULL, |buffer| will not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementGetLang(PDFiumCore.FpdfStructelementT,System.IntPtr,System.UInt32)">
            <summary>
            <para>Function: FPDF_StructElement_GetLang</para>
            <para>Get the case-insensitive IETF BCP 47 language code for an element.</para>
            <para>Parameters:</para>
            <para>struct_element -   Handle to the struct element.</para>
            <para>buffer         -   A buffer for output the lang string. May be NULL.</para>
            <para>buflen         -   The length of the buffer, in bytes. May be 0.</para>
            <para>Return value:</para>
            <para>The number of bytes in the ID string, including the terminating NUL</para>
            <para>character. The number of bytes is returned regardless of the</para>
            <para>|buffer| and |buflen| parameters.</para>
            <para>Comments: Regardless of the platform, the |buffer| is always in UTF-16LE encoding. The string is terminated by a UTF16 NUL character. If |buflen| is less than the required length, or |buffer| is NULL, |buffer| will not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementGetStringAttribute(PDFiumCore.FpdfStructelementT,System.String,System.IntPtr,System.UInt32)">
            <summary>
            <para>Function: FPDF_StructElement_GetStringAttribute</para>
            <para>Get a struct element attribute of type &quot;name&quot; or &quot;string&quot;.</para>
            <para>Parameters:</para>
            <para>struct_element -   Handle to the struct element.</para>
            <para>attr_name      -   The name of the attribute to retrieve.</para>
            <para>buffer         -   A buffer for output. May be NULL.</para>
            <para>buflen         -   The length of the buffer, in bytes. May be 0.</para>
            <para>Return value:</para>
            <para>The number of bytes in the attribute value, including the</para>
            <para>terminating NUL character. The number of bytes is returned</para>
            <para>regardless of the |buffer| and |buflen| parameters.</para>
            <para>Comments: Regardless of the platform, the |buffer| is always in UTF-16LE encoding. The string is terminated by a UTF16 NUL character. If |buflen| is less than the required length, or |buffer| is NULL, |buffer| will not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementGetMarkedContentID(PDFiumCore.FpdfStructelementT)">
            <summary>
            <para>Function: FPDF_StructElement_GetMarkedContentID</para>
            <para>Get the marked content ID for a given element.</para>
            <para>Parameters:</para>
            <para>struct_element -   Handle to the struct element.</para>
            <para>Return value:</para>
            <para>The marked content ID of the element. If no ID exists, returns</para>
            <para>-1.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementGetType(PDFiumCore.FpdfStructelementT,System.IntPtr,System.UInt32)">
            <summary>
            <para>Function: FPDF_StructElement_GetType</para>
            <para>Get the type (/S) for a given element.</para>
            <para>Parameters:</para>
            <para>struct_element - Handle to the struct element.</para>
            <para>buffer         - A buffer for output. May be NULL.</para>
            <para>buflen         - The length of the buffer, in bytes. May be 0.</para>
            <para>Return value:</para>
            <para>The number of bytes in the type, including the terminating NUL</para>
            <para>character. The number of bytes is returned regardless of the</para>
            <para>|buffer| and |buflen| parameters.</para>
            <para>Comments: Regardless of the platform, the |buffer| is always in UTF-16LE encoding. The string is terminated by a UTF16 NUL character. If |buflen| is less than the required length, or |buffer| is NULL, |buffer| will not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementGetObjType(PDFiumCore.FpdfStructelementT,System.IntPtr,System.UInt32)">
            <summary>
            <para>Function: FPDF_StructElement_GetObjType</para>
            <para>Get the object type (/Type) for a given element.</para>
            <para>Parameters:</para>
            <para>struct_element - Handle to the struct element.</para>
            <para>buffer         - A buffer for output. May be NULL.</para>
            <para>buflen         - The length of the buffer, in bytes. May be 0.</para>
            <para>Return value:</para>
            <para>The number of bytes in the object type, including the terminating</para>
            <para>NUL character. The number of bytes is returned regardless of the</para>
            <para>|buffer| and |buflen| parameters.</para>
            <para>Comments: Regardless of the platform, the |buffer| is always in UTF-16LE encoding. The string is terminated by a UTF16 NUL character. If |buflen| is less than the required length, or |buffer| is NULL, |buffer| will not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementGetTitle(PDFiumCore.FpdfStructelementT,System.IntPtr,System.UInt32)">
            <summary>
            <para>Function: FPDF_StructElement_GetTitle</para>
            <para>Get the title (/T) for a given element.</para>
            <para>Parameters:</para>
            <para>struct_element - Handle to the struct element.</para>
            <para>buffer         - A buffer for output. May be NULL.</para>
            <para>buflen         - The length of the buffer, in bytes. May be 0.</para>
            <para>Return value:</para>
            <para>The number of bytes in the title, including the terminating NUL</para>
            <para>character. The number of bytes is returned regardless of the</para>
            <para>|buffer| and |buflen| parameters.</para>
            <para>Comments: Regardless of the platform, the |buffer| is always in UTF-16LE encoding. The string is terminated by a UTF16 NUL character. If |buflen| is less than the required length, or |buffer| is NULL, |buffer| will not be modified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementCountChildren(PDFiumCore.FpdfStructelementT)">
            <summary>
            <para>Function: FPDF_StructElement_CountChildren</para>
            <para>Count the number of children for the structure element.</para>
            <para>Parameters:</para>
            <para>struct_element -   Handle to the struct element.</para>
            <para>Return value:</para>
            <para>The number of children, or -1 on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementGetChildAtIndex(PDFiumCore.FpdfStructelementT,System.Int32)">
            <summary>
            <para>Function: FPDF_StructElement_GetChildAtIndex</para>
            <para>Get a child in the structure element.</para>
            <para>Parameters:</para>
            <para>struct_element -   Handle to the struct element.</para>
            <para>index          -   The index for the child, 0-based.</para>
            <para>Return value:</para>
            <para>The child at the n-th index or NULL on error.</para>
            <para>Comments: If the child exists but is not an element, then this function will return NULL. This will also return NULL for out of bounds indices.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementGetChildMarkedContentID(PDFiumCore.FpdfStructelementT,System.Int32)">
            <summary>
            <para>Function: FPDF_StructElement_GetChildMarkedContentID</para>
            <para>Get the child's content id</para>
            <para>Parameters:</para>
            <para>struct_element -   Handle to the struct element.</para>
            <para>index          -   The index for the child, 0-based.</para>
            <para>Return value:</para>
            <para>The marked content ID of the child. If no ID exists, returns -1.</para>
            <para>Comments: If the child exists but is not a stream or object, then this function will return -1. This will also return -1 for out of bounds indices. Compared to FPDF_StructElement_GetMarkedContentIdAtIndex, it is scoped to the current page.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementGetParent(PDFiumCore.FpdfStructelementT)">
            <summary>
            <para>Function: FPDF_StructElement_GetParent</para>
            <para>Get the parent of the structure element.</para>
            <para>Parameters:</para>
            <para>struct_element -   Handle to the struct element.</para>
            <para>Return value:</para>
            <para>The parent structure element or NULL on error.</para>
            <para>Comments: If structure element is StructTreeRoot, then this function will return NULL.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementGetAttributeCount(PDFiumCore.FpdfStructelementT)">
            <summary>
            <para>Function: FPDF_StructElement_GetAttributeCount</para>
            <para>Count the number of attributes for the structure element.</para>
            <para>Parameters:</para>
            <para>struct_element -   Handle to the struct element.</para>
            <para>Return value:</para>
            <para>The number of attributes, or -1 on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementGetAttributeAtIndex(PDFiumCore.FpdfStructelementT,System.Int32)">
            <summary>
            <para>Function: FPDF_StructElement_GetAttributeAtIndex</para>
            <para>Get an attribute object in the structure element.</para>
            <para>Parameters:</para>
            <para>struct_element -   Handle to the struct element.</para>
            <para>index          -   The index for the attribute object, 0-based.</para>
            <para>Return value:</para>
            <para>The attribute object at the n-th index or NULL on error.</para>
            <para>Comments: If the attribute object exists but is not a dict, then this function will return NULL. This will also return NULL for out of bounds indices.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementAttrGetCount(PDFiumCore.FpdfStructelementAttrT)">
            <summary>
            <para>Function: FPDF_StructElement_Attr_GetCount</para>
            <para>Count the number of attributes in a structure element attribute map.</para>
            <para>Parameters:</para>
            <para>struct_attribute - Handle to the struct element attribute.</para>
            <para>Return value:</para>
            <para>The number of attributes, or -1 on error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementAttrGetName(PDFiumCore.FpdfStructelementAttrT,System.Int32,System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            <para>Function: FPDF_StructElement_Attr_GetName</para>
            <para>Get the name of an attribute in a structure element attribute map.</para>
            <para>Parameters:</para>
            <para>struct_attribute   - Handle to the struct element attribute.</para>
            <para>index              - The index of attribute in the map.</para>
            <para>buffer             - A buffer for output. May be NULL. This is only modified if |buflen| is longer than the length of the key. Optional, pass null to just retrieve the size of the buffer needed.</para>
            <para>buflen             - The length of the buffer.</para>
            <para>out_buflen         - A pointer to variable that will receive the minimum buffer size to contain the key. Not filled if FALSE is returned.</para>
            <para>Return value:</para>
            <para>TRUE if the operation was successful, FALSE otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementAttrGetType(PDFiumCore.FpdfStructelementAttrT,System.String)">
            <summary>
            <para>Function: FPDF_StructElement_Attr_GetType</para>
            <para>Get the type of an attribute in a structure element attribute map.</para>
            <para>Parameters:</para>
            <para>struct_attribute   - Handle to the struct element attribute.</para>
            <para>name               - The attribute name.</para>
            <para>Return value:</para>
            <para>Returns the type of the value, or FPDF_OBJECT_UNKNOWN in case of</para>
            <para>failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementAttrGetBooleanValue(PDFiumCore.FpdfStructelementAttrT,System.String,System.Int32@)">
            <summary>
            <para>Function: FPDF_StructElement_Attr_GetBooleanValue</para>
            <para>Get the value of a boolean attribute in an attribute map by name as</para>
            <para>FPDF_BOOL. FPDF_StructElement_Attr_GetType() should have returned</para>
            <para>FPDF_OBJECT_BOOLEAN for this property.</para>
            <para>Parameters:</para>
            <para>struct_attribute   - Handle to the struct element attribute.</para>
            <para>name               - The attribute name.</para>
            <para>out_value          - A pointer to variable that will receive the value. Not filled if false is returned.</para>
            <para>Return value:</para>
            <para>Returns TRUE if the name maps to a boolean value, FALSE otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementAttrGetNumberValue(PDFiumCore.FpdfStructelementAttrT,System.String,System.Single@)">
            <summary>
            <para>Function: FPDF_StructElement_Attr_GetNumberValue</para>
            <para>Get the value of a number attribute in an attribute map by name as</para>
            <para>float. FPDF_StructElement_Attr_GetType() should have returned</para>
            <para>FPDF_OBJECT_NUMBER for this property.</para>
            <para>Parameters:</para>
            <para>struct_attribute   - Handle to the struct element attribute.</para>
            <para>name               - The attribute name.</para>
            <para>out_value          - A pointer to variable that will receive the value. Not filled if false is returned.</para>
            <para>Return value:</para>
            <para>Returns TRUE if the name maps to a number value, FALSE otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementAttrGetStringValue(PDFiumCore.FpdfStructelementAttrT,System.String,System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            <para>Function: FPDF_StructElement_Attr_GetStringValue</para>
            <para>Get the value of a string attribute in an attribute map by name as</para>
            <para>string. FPDF_StructElement_Attr_GetType() should have returned</para>
            <para>FPDF_OBJECT_STRING or FPDF_OBJECT_NAME for this property.</para>
            <para>Parameters:</para>
            <para>struct_attribute   - Handle to the struct element attribute.</para>
            <para>name               - The attribute name.</para>
            <para>buffer             - A buffer for holding the returned key in UTF-16LE. This is only modified if |buflen| is longer than the length of the key. Optional, pass null to just retrieve the size of the buffer needed.</para>
            <para>buflen             - The length of the buffer.</para>
            <para>out_buflen         - A pointer to variable that will receive the minimum buffer size to contain the key. Not filled if FALSE is returned.</para>
            <para>Return value:</para>
            <para>Returns TRUE if the name maps to a string value, FALSE otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementAttrGetBlobValue(PDFiumCore.FpdfStructelementAttrT,System.String,System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            <para>Function: FPDF_StructElement_Attr_GetBlobValue</para>
            <para>Get the value of a blob attribute in an attribute map by name as</para>
            <para>string.</para>
            <para>Parameters:</para>
            <para>struct_attribute   - Handle to the struct element attribute.</para>
            <para>name               - The attribute name.</para>
            <para>buffer             - A buffer for holding the returned value. This is only modified if |buflen| is at least as long as the length of the value. Optional, pass null to just retrieve the size of the buffer needed.</para>
            <para>buflen             - The length of the buffer.</para>
            <para>out_buflen         - A pointer to variable that will receive the minimum buffer size to contain the key. Not filled if FALSE is returned.</para>
            <para>Return value:</para>
            <para>Returns TRUE if the name maps to a string value, FALSE otherwise.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementGetMarkedContentIdCount(PDFiumCore.FpdfStructelementT)">
            <summary>
            <para>Function: FPDF_StructElement_GetMarkedContentIdCount</para>
            <para>Get the count of marked content ids for a given element.</para>
            <para>Parameters:</para>
            <para>struct_element -   Handle to the struct element.</para>
            <para>Return value:</para>
            <para>The count of marked content ids or -1 if none exists.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_structtree.FPDF_StructElementGetMarkedContentIdAtIndex(PDFiumCore.FpdfStructelementT,System.Int32)">
            <summary>
            <para>Function: FPDF_StructElement_GetMarkedContentIdAtIndex</para>
            <para>Get the marked content id at a given index for a given element.</para>
            <para>Parameters:</para>
            <para>struct_element -   Handle to the struct element.</para>
            <para>index          -   The index of the marked content id, 0-based.</para>
            <para>Return value:</para>
            <para>The marked content ID of the element. If no ID exists, returns</para>
            <para>-1.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_sysfontinfo.FPDF_GetDefaultTTFMap">
            <summary>
            <para>Function: FPDF_GetDefaultTTFMap</para>
            <para>Returns a pointer to the default character set to TT Font name map. The</para>
            <para>map is an array of FPDF_CharsetFontMap structs, with its end indicated</para>
            <para>by a { -1, NULL } entry.</para>
            <para>Parameters:</para>
            <para>None.</para>
            <para>Return Value:</para>
            <para>Pointer to the Charset Font Map.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_sysfontinfo.FPDF_AddInstalledFont(System.IntPtr,System.String,System.Int32)">
            <summary>
            <para>Function: FPDF_AddInstalledFont</para>
            <para>Add a system font to the list in PDFium.</para>
            <para>Comments: This function is only called during the system font list building process.</para>
            <para>Parameters:</para>
            <para>mapper          -   Opaque pointer to Foxit font mapper</para>
            <para>face            -   The font face name</para>
            <para>charset         -   Font character set. See above defined constants.</para>
            <para>Return Value:</para>
            <para>None.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_sysfontinfo.FPDF_SetSystemFontInfo(PDFiumCore.FPDF_SYSFONTINFO)">
            <summary>
            <para>Function: FPDF_SetSystemFontInfo</para>
            <para>Set the system font info interface into PDFium</para>
            <para>Parameters:</para>
            <para>pFontInfo       -   Pointer to a FPDF_SYSFONTINFO structure</para>
            <para>Return Value:</para>
            <para>None</para>
            <para>Comments: Platform support implementation should implement required methods of FFDF_SYSFONTINFO interface, then call this function during PDFium initialization process.</para>
            <para>Call this with NULL to tell PDFium to stop using a previously set |FPDF_SYSFONTINFO|.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_sysfontinfo.FPDF_GetDefaultSystemFontInfo">
            <summary>
            <para>Function: FPDF_GetDefaultSystemFontInfo</para>
            <para>Get default system font info interface for current platform</para>
            <para>Parameters:</para>
            <para>None</para>
            <para>Return Value:</para>
            <para>Pointer to a FPDF_SYSFONTINFO structure describing the default</para>
            <para>interface, or NULL if the platform doesn't have a default interface.</para>
            <para>Application should call FPDF_FreeDefaultSystemFontInfo to free the</para>
            <para>returned pointer.</para>
            <para>Comments: For some platforms, PDFium implements a default version of system font info interface. The default implementation can be passed to FPDF_SetSystemFontInfo().</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_sysfontinfo.FPDF_FreeDefaultSystemFontInfo(PDFiumCore.FPDF_SYSFONTINFO)">
            <summary>
            <para>Function: FPDF_FreeDefaultSystemFontInfo</para>
            <para>Free a default system font info interface</para>
            <para>Parameters:</para>
            <para>pFontInfo       -   Pointer to a FPDF_SYSFONTINFO structure</para>
            <para>Return Value:</para>
            <para>None</para>
            <para>Comments: This function should be called on the output from FPDF_GetDefaultSystemFontInfo() once it is no longer needed.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextLoadPage(PDFiumCore.FpdfPageT)">
            <summary>
            <para>Function: FPDFText_LoadPage</para>
            <para>Prepare information about all characters in a page.</para>
            <para>Parameters:</para>
            <para>page    -   Handle to the page. Returned by FPDF_LoadPage function (in FPDFVIEW module).</para>
            <para>Return value:</para>
            <para>A handle to the text page information structure.</para>
            <para>NULL if something goes wrong.</para>
            <para>Comments: Application must call FPDFText_ClosePage to release the text page information.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextClosePage(PDFiumCore.FpdfTextpageT)">
            <summary>
            <para>Function: FPDFText_ClosePage</para>
            <para>Release all resources allocated for a text page information</para>
            <para>structure.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>Return Value:</para>
            <para>None.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextCountChars(PDFiumCore.FpdfTextpageT)">
            <summary>
            <para>Function: FPDFText_CountChars</para>
            <para>Get number of characters in a page.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>Return value:</para>
            <para>Number of characters in the page. Return -1 for error.</para>
            <para>Generated characters, like additional space characters, new line</para>
            <para>characters, are also counted.</para>
            <para>Comments: Characters in a page form a &quot;stream&quot;, inside the stream, each character has an index. We will use the index parameters in many of FPDFTEXT functions. The first character in the page has an index value of zero.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextGetUnicode(PDFiumCore.FpdfTextpageT,System.Int32)">
            <summary>
            <para>Function: FPDFText_GetUnicode</para>
            <para>Get Unicode of a character in a page.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>index       -   Zero-based index of the character.</para>
            <para>Return value:</para>
            <para>The Unicode of the particular character.</para>
            <para>If a character is not encoded in Unicode and Foxit engine can't</para>
            <para>convert to Unicode,</para>
            <para>the return value will be zero.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextIsGenerated(PDFiumCore.FpdfTextpageT,System.Int32)">
            <summary>
            <para>Function: FPDFText_IsGenerated</para>
            <para>Get if a character in a page is generated by PDFium.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>index       -   Zero-based index of the character.</para>
            <para>Return value:</para>
            <para>1 if the character is generated by PDFium.</para>
            <para>0 if the character is not generated by PDFium.</para>
            <para>-1 if there was an error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextIsHyphen(PDFiumCore.FpdfTextpageT,System.Int32)">
            <summary>
            <para>Function: FPDFText_IsHyphen</para>
            <para>Get if a character in a page is a hyphen.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>index       -   Zero-based index of the character.</para>
            <para>Return value:</para>
            <para>1 if the character is a hyphen.</para>
            <para>0 if the character is not a hyphen.</para>
            <para>-1 if there was an error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextHasUnicodeMapError(PDFiumCore.FpdfTextpageT,System.Int32)">
            <summary>
            <para>Function: FPDFText_HasUnicodeMapError</para>
            <para>Get if a character in a page has an invalid unicode mapping.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>index       -   Zero-based index of the character.</para>
            <para>Return value:</para>
            <para>1 if the character has an invalid unicode mapping.</para>
            <para>0 if the character has no known unicode mapping issues.</para>
            <para>-1 if there was an error.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextGetFontSize(PDFiumCore.FpdfTextpageT,System.Int32)">
            <summary>
            <para>Function: FPDFText_GetFontSize</para>
            <para>Get the font size of a particular character.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>index       -   Zero-based index of the character.</para>
            <para>Return value:</para>
            <para>The font size of the particular character, measured in points (about</para>
            <para>1/72 inch). This is the typographic size of the font (so called</para>
            <para>&quot;em size&quot;).</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextGetFontInfo(PDFiumCore.FpdfTextpageT,System.Int32,System.IntPtr,System.UInt32,System.Int32@)">
            <summary>
            <para>Function: FPDFText_GetFontInfo</para>
            <para>Get the font name and flags of a particular character.</para>
            <para>Parameters:</para>
            <para>text_page - Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>index     - Zero-based index of the character.</para>
            <para>buffer    - A buffer receiving the font name.</para>
            <para>buflen    - The length of |buffer| in bytes.</para>
            <para>flags     - Optional pointer to an int receiving the font flags. These flags should be interpreted per PDF spec 1.7 Section 5.7.1 Font Descriptor Flags.</para>
            <para>Return value:</para>
            <para>On success, return the length of the font name, including the</para>
            <para>trailing NUL character, in bytes. If this length is less than or</para>
            <para>equal to |length|, |buffer| is set to the font name, |flags| is</para>
            <para>set to the font flags. |buffer| is in UTF-8 encoding. Return 0 on</para>
            <para>failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextGetFontWeight(PDFiumCore.FpdfTextpageT,System.Int32)">
            <summary>
            <para>Function: FPDFText_GetFontWeight</para>
            <para>Get the font weight of a particular character.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>index       -   Zero-based index of the character.</para>
            <para>Return value:</para>
            <para>On success, return the font weight of the particular character. If</para>
            <para>|text_page| is invalid, if |index| is out of bounds, or if the</para>
            <para>character's text object is undefined, return -1.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextGetTextRenderMode(PDFiumCore.FpdfTextpageT,System.Int32)">
            <summary>
            <para>Function: FPDFText_GetTextRenderMode</para>
            <para>Get text rendering mode of character.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>index       -   Zero-based index of the character.</para>
            <para>Return Value:</para>
            <para>On success, return the render mode value. A valid value is of type</para>
            <para>FPDF_TEXT_RENDERMODE. If |text_page| is invalid, if |index| is out</para>
            <para>of bounds, or if the text object is undefined, then return</para>
            <para>FPDF_TEXTRENDERMODE_UNKNOWN.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextGetFillColor(PDFiumCore.FpdfTextpageT,System.Int32,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)">
            <summary>
            <para>Function: FPDFText_GetFillColor</para>
            <para>Get the fill color of a particular character.</para>
            <para>Parameters:</para>
            <para>text_page      -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>index          -   Zero-based index of the character.</para>
            <para>R              -   Pointer to an unsigned int number receiving the red value of the fill color.</para>
            <para>G              -   Pointer to an unsigned int number receiving the green value of the fill color.</para>
            <para>B              -   Pointer to an unsigned int number receiving the blue value of the fill color.</para>
            <para>A              -   Pointer to an unsigned int number receiving the alpha value of the fill color.</para>
            <para>Return value:</para>
            <para>Whether the call succeeded. If false, |R|, |G|, |B| and |A| are</para>
            <para>unchanged.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextGetStrokeColor(PDFiumCore.FpdfTextpageT,System.Int32,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)">
            <summary>
            <para>Function: FPDFText_GetStrokeColor</para>
            <para>Get the stroke color of a particular character.</para>
            <para>Parameters:</para>
            <para>text_page      -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>index          -   Zero-based index of the character.</para>
            <para>R              -   Pointer to an unsigned int number receiving the red value of the stroke color.</para>
            <para>G              -   Pointer to an unsigned int number receiving the green value of the stroke color.</para>
            <para>B              -   Pointer to an unsigned int number receiving the blue value of the stroke color.</para>
            <para>A              -   Pointer to an unsigned int number receiving the alpha value of the stroke color.</para>
            <para>Return value:</para>
            <para>Whether the call succeeded. If false, |R|, |G|, |B| and |A| are</para>
            <para>unchanged.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextGetCharAngle(PDFiumCore.FpdfTextpageT,System.Int32)">
            <summary>
            <para>Function: FPDFText_GetCharAngle</para>
            <para>Get character rotation angle.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>index       -   Zero-based index of the character.</para>
            <para>Return Value:</para>
            <para>On success, return the angle value in radian. Value will always be</para>
            <para>greater or equal to 0. If |text_page| is invalid, or if |index| is</para>
            <para>out of bounds, then return -1.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextGetCharBox(PDFiumCore.FpdfTextpageT,System.Int32,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            <para>Function: FPDFText_GetCharBox</para>
            <para>Get bounding box of a particular character.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>index       -   Zero-based index of the character.</para>
            <para>left        -   Pointer to a double number receiving left position of the character box.</para>
            <para>right       -   Pointer to a double number receiving right position of the character box.</para>
            <para>bottom      -   Pointer to a double number receiving bottom position of the character box.</para>
            <para>top         -   Pointer to a double number receiving top position of the character box.</para>
            <para>Return Value:</para>
            <para>On success, return TRUE and fill in |left|, |right|, |bottom|, and</para>
            <para>|top|. If |text_page| is invalid, or if |index| is out of bounds,</para>
            <para>then return FALSE, and the out parameters remain unmodified.</para>
            <para>Comments: All positions are measured in PDF &quot;user space&quot;.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextGetLooseCharBox(PDFiumCore.FpdfTextpageT,System.Int32,PDFiumCore.FS_RECTF_)">
            <summary>
            <para>Function: FPDFText_GetLooseCharBox</para>
            <para>Get a &quot;loose&quot; bounding box of a particular character, i.e., covering</para>
            <para>the entire glyph bounds, without taking the actual glyph shape into</para>
            <para>account.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>index       -   Zero-based index of the character.</para>
            <para>rect        -   Pointer to a FS_RECTF receiving the character box.</para>
            <para>Return Value:</para>
            <para>On success, return TRUE and fill in |rect|. If |text_page| is</para>
            <para>invalid, or if |index| is out of bounds, then return FALSE, and the</para>
            <para>|rect| out parameter remains unmodified.</para>
            <para>Comments: All positions are measured in PDF &quot;user space&quot;.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextGetMatrix(PDFiumCore.FpdfTextpageT,System.Int32,PDFiumCore.FS_MATRIX_)">
            <summary>
            <para>Function: FPDFText_GetMatrix</para>
            <para>Get the effective transformation matrix for a particular character.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage().</para>
            <para>index       -   Zero-based index of the character.</para>
            <para>matrix      -   Pointer to a FS_MATRIX receiving the transformation matrix.</para>
            <para>Return Value:</para>
            <para>On success, return TRUE and fill in |matrix|. If |text_page| is</para>
            <para>invalid, or if |index| is out of bounds, or if |matrix| is NULL,</para>
            <para>then return FALSE, and |matrix| remains unmodified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextGetCharOrigin(PDFiumCore.FpdfTextpageT,System.Int32,System.Double@,System.Double@)">
            <summary>
            <para>Function: FPDFText_GetCharOrigin</para>
            <para>Get origin of a particular character.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>index       -   Zero-based index of the character.</para>
            <para>x           -   Pointer to a double number receiving x coordinate of the character origin.</para>
            <para>y           -   Pointer to a double number receiving y coordinate of the character origin.</para>
            <para>Return Value:</para>
            <para>Whether the call succeeded. If false, x and y are unchanged.</para>
            <para>Comments: All positions are measured in PDF &quot;user space&quot;.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextGetCharIndexAtPos(PDFiumCore.FpdfTextpageT,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            <para>Function: FPDFText_GetCharIndexAtPos</para>
            <para>Get the index of a character at or nearby a certain position on the</para>
            <para>page.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>x           -   X position in PDF &quot;user space&quot;.</para>
            <para>y           -   Y position in PDF &quot;user space&quot;.</para>
            <para>xTolerance  -   An x-axis tolerance value for character hit detection, in point units.</para>
            <para>yTolerance  -   A y-axis tolerance value for character hit detection, in point units.</para>
            <para>Return Value:</para>
            <para>The zero-based index of the character at, or nearby the point (x,y).</para>
            <para>If there is no character at or nearby the point, return value will</para>
            <para>be -1. If an error occurs, -3 will be returned.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextGetText(PDFiumCore.FpdfTextpageT,System.Int32,System.Int32,System.UInt16@)">
            <summary>
            <para>Function: FPDFText_GetText</para>
            <para>Extract unicode text string from the page.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>start_index -   Index for the start characters.</para>
            <para>count       -   Number of characters to be extracted.</para>
            <para>result      -   A buffer (allocated by application) receiving the extracted unicodes. The size of the buffer must be able to hold the number of characters plus a terminator.</para>
            <para>Return Value:</para>
            <para>Number of characters written into the result buffer, including the</para>
            <para>trailing terminator.</para>
            <para>Comments: This function ignores characters without unicode information. It returns all characters on the page, even those that are not visible when the page has a cropbox. To filter out the characters outside of the cropbox, use FPDF_GetPageBoundingBox() and FPDFText_GetCharBox().</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextCountRects(PDFiumCore.FpdfTextpageT,System.Int32,System.Int32)">
            <summary>
            <para>Function: FPDFText_CountRects</para>
            <para>Counts number of rectangular areas occupied by a segment of text,</para>
            <para>and caches the result for subsequent FPDFText_GetRect() calls.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>start_index -   Index for the start character.</para>
            <para>count       -   Number of characters, or -1 for all remaining.</para>
            <para>Return value:</para>
            <para>Number of rectangles, 0 if text_page is null, or -1 on bad</para>
            <para>start_index.</para>
            <para>Comments: This function, along with FPDFText_GetRect can be used by applications to detect the position on the page for a text segment, so proper areas can be highlighted. The FPDFText_* functions will automatically merge small character boxes into bigger one if those characters are on the same line and use same font settings.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextGetRect(PDFiumCore.FpdfTextpageT,System.Int32,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            <para>Function: FPDFText_GetRect</para>
            <para>Get a rectangular area from the result generated by</para>
            <para>FPDFText_CountRects.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>rect_index  -   Zero-based index for the rectangle.</para>
            <para>left        -   Pointer to a double value receiving the rectangle left boundary.</para>
            <para>top         -   Pointer to a double value receiving the rectangle top boundary.</para>
            <para>right       -   Pointer to a double value receiving the rectangle right boundary.</para>
            <para>bottom      -   Pointer to a double value receiving the rectangle bottom boundary.</para>
            <para>Return Value:</para>
            <para>On success, return TRUE and fill in |left|, |top|, |right|, and</para>
            <para>|bottom|. If |text_page| is invalid then return FALSE, and the out</para>
            <para>parameters remain unmodified. If |text_page| is valid but</para>
            <para>|rect_index| is out of bounds, then return FALSE and set the out</para>
            <para>parameters to 0.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextGetBoundedText(PDFiumCore.FpdfTextpageT,System.Double,System.Double,System.Double,System.Double,System.UInt16@,System.Int32)">
            <summary>
            <para>Function: FPDFText_GetBoundedText</para>
            <para>Extract unicode text within a rectangular boundary on the page.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>left        -   Left boundary.</para>
            <para>top         -   Top boundary.</para>
            <para>right       -   Right boundary.</para>
            <para>bottom      -   Bottom boundary.</para>
            <para>buffer      -   A unicode buffer.</para>
            <para>buflen      -   Number of characters (not bytes) for the buffer, excluding an additional terminator.</para>
            <para>Return Value:</para>
            <para>If buffer is NULL or buflen is zero, return number of characters</para>
            <para>(not bytes) of text present within the rectangle, excluding a</para>
            <para>terminating NUL. Generally you should pass a buffer at least one</para>
            <para>larger than this if you want a terminating NUL, which will be</para>
            <para>provided if space is available. Otherwise, return number of</para>
            <para>characters copied into the buffer, including the terminating NUL</para>
            <para>when space for it is available.</para>
            <para>Comment:</para>
            <para>If the buffer is too small, as much text as will fit is copied into</para>
            <para>it.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextFindStart(PDFiumCore.FpdfTextpageT,System.UInt16@,System.UInt32,System.Int32)">
            <summary>
            <para>Function: FPDFText_FindStart</para>
            <para>Start a search.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>findwhat    -   A unicode match pattern.</para>
            <para>flags       -   Option flags.</para>
            <para>start_index -   Start from this character. -1 for end of the page.</para>
            <para>Return Value:</para>
            <para>A handle for the search context. FPDFText_FindClose must be called</para>
            <para>to release this handle.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextFindNext(PDFiumCore.FpdfSchhandleT)">
            <summary>
            <para>Function: FPDFText_FindNext</para>
            <para>Search in the direction from page start to end.</para>
            <para>Parameters:</para>
            <para>handle      -   A search context handle returned by FPDFText_FindStart.</para>
            <para>Return Value:</para>
            <para>Whether a match is found.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextFindPrev(PDFiumCore.FpdfSchhandleT)">
            <summary>
            <para>Function: FPDFText_FindPrev</para>
            <para>Search in the direction from page end to start.</para>
            <para>Parameters:</para>
            <para>handle      -   A search context handle returned by FPDFText_FindStart.</para>
            <para>Return Value:</para>
            <para>Whether a match is found.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextGetSchResultIndex(PDFiumCore.FpdfSchhandleT)">
            <summary>
            <para>Function: FPDFText_GetSchResultIndex</para>
            <para>Get the starting character index of the search result.</para>
            <para>Parameters:</para>
            <para>handle      -   A search context handle returned by FPDFText_FindStart.</para>
            <para>Return Value:</para>
            <para>Index for the starting character.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextGetSchCount(PDFiumCore.FpdfSchhandleT)">
            <summary>
            <para>Function: FPDFText_GetSchCount</para>
            <para>Get the number of matched characters in the search result.</para>
            <para>Parameters:</para>
            <para>handle      -   A search context handle returned by FPDFText_FindStart.</para>
            <para>Return Value:</para>
            <para>Number of matched characters.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFTextFindClose(PDFiumCore.FpdfSchhandleT)">
            <summary>
            <para>Function: FPDFText_FindClose</para>
            <para>Release a search context.</para>
            <para>Parameters:</para>
            <para>handle      -   A search context handle returned by FPDFText_FindStart.</para>
            <para>Return Value:</para>
            <para>None.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFLinkLoadWebLinks(PDFiumCore.FpdfTextpageT)">
            <summary>
            <para>Function: FPDFLink_LoadWebLinks</para>
            <para>Prepare information about weblinks in a page.</para>
            <para>Parameters:</para>
            <para>text_page   -   Handle to a text page information structure. Returned by FPDFText_LoadPage function.</para>
            <para>Return Value:</para>
            <para>A handle to the page's links information structure, or</para>
            <para>NULL if something goes wrong.</para>
            <para>Comments: Weblinks are those links implicitly embedded in PDF pages. PDF also has a type of annotation called &quot;link&quot; (FPDFTEXT doesn't deal with that kind of link). FPDFTEXT weblink feature is useful for automatically detecting links in the page contents. For example, things like &quot;https://www.example.com&quot; will be detected, so applications can allow user to click on those characters to activate the link, even the PDF doesn't come with link annotations.</para>
            <para>FPDFLink_CloseWebLinks must be called to release resources.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFLinkCountWebLinks(PDFiumCore.FpdfPagelinkT)">
            <summary>
            <para>Function: FPDFLink_CountWebLinks</para>
            <para>Count number of detected web links.</para>
            <para>Parameters:</para>
            <para>link_page   -   Handle returned by FPDFLink_LoadWebLinks.</para>
            <para>Return Value:</para>
            <para>Number of detected web links.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFLinkGetURL(PDFiumCore.FpdfPagelinkT,System.Int32,System.UInt16@,System.Int32)">
            <summary>
            <para>Function: FPDFLink_GetURL</para>
            <para>Fetch the URL information for a detected web link.</para>
            <para>Parameters:</para>
            <para>link_page   -   Handle returned by FPDFLink_LoadWebLinks.</para>
            <para>link_index  -   Zero-based index for the link.</para>
            <para>buffer      -   A unicode buffer for the result.</para>
            <para>buflen      -   Number of 16-bit code units (not bytes) for the buffer, including an additional terminator.</para>
            <para>Return Value:</para>
            <para>If |buffer| is NULL or |buflen| is zero, return the number of 16-bit</para>
            <para>code units (not bytes) needed to buffer the result (an additional</para>
            <para>terminator is included in this count).</para>
            <para>Otherwise, copy the result into |buffer|, truncating at |buflen| if</para>
            <para>the result is too large to fit, and return the number of 16-bit code</para>
            <para>units actually copied into the buffer (the additional terminator is</para>
            <para>also included in this count).</para>
            <para>If |link_index| does not correspond to a valid link, then the result</para>
            <para>is an empty string.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFLinkCountRects(PDFiumCore.FpdfPagelinkT,System.Int32)">
            <summary>
            <para>Function: FPDFLink_CountRects</para>
            <para>Count number of rectangular areas for the link.</para>
            <para>Parameters:</para>
            <para>link_page   -   Handle returned by FPDFLink_LoadWebLinks.</para>
            <para>link_index  -   Zero-based index for the link.</para>
            <para>Return Value:</para>
            <para>Number of rectangular areas for the link.  If |link_index| does</para>
            <para>not correspond to a valid link, then 0 is returned.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFLinkGetRect(PDFiumCore.FpdfPagelinkT,System.Int32,System.Int32,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            <para>Function: FPDFLink_GetRect</para>
            <para>Fetch the boundaries of a rectangle for a link.</para>
            <para>Parameters:</para>
            <para>link_page   -   Handle returned by FPDFLink_LoadWebLinks.</para>
            <para>link_index  -   Zero-based index for the link.</para>
            <para>rect_index  -   Zero-based index for a rectangle.</para>
            <para>left        -   Pointer to a double value receiving the rectangle left boundary.</para>
            <para>top         -   Pointer to a double value receiving the rectangle top boundary.</para>
            <para>right       -   Pointer to a double value receiving the rectangle right boundary.</para>
            <para>bottom      -   Pointer to a double value receiving the rectangle bottom boundary.</para>
            <para>Return Value:</para>
            <para>On success, return TRUE and fill in |left|, |top|, |right|, and</para>
            <para>|bottom|. If |link_page| is invalid or if |link_index| does not</para>
            <para>correspond to a valid link, then return FALSE, and the out</para>
            <para>parameters remain unmodified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFLinkGetTextRange(PDFiumCore.FpdfPagelinkT,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            <para>Function: FPDFLink_GetTextRange</para>
            <para>Fetch the start char index and char count for a link.</para>
            <para>Parameters:</para>
            <para>link_page         -   Handle returned by FPDFLink_LoadWebLinks.</para>
            <para>link_index        -   Zero-based index for the link.</para>
            <para>start_char_index  -   pointer to int receiving the start char index</para>
            <para>char_count        -   pointer to int receiving the char count</para>
            <para>Return Value:</para>
            <para>On success, return TRUE and fill in |start_char_index| and</para>
            <para>|char_count|. if |link_page| is invalid or if |link_index| does</para>
            <para>not correspond to a valid link, then return FALSE and the out</para>
            <para>parameters remain unmodified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_text.FPDFLinkCloseWebLinks(PDFiumCore.FpdfPagelinkT)">
            <summary>
            <para>Function: FPDFLink_CloseWebLinks</para>
            <para>Release resources used by weblink feature.</para>
            <para>Parameters:</para>
            <para>link_page   -   Handle returned by FPDFLink_LoadWebLinks.</para>
            <para>Return Value:</para>
            <para>None.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_thumbnail.FPDFPageGetDecodedThumbnailData(PDFiumCore.FpdfPageT,System.IntPtr,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Gets the decoded data from the thumbnail of |page| if it exists.</para>
            <para>This only modifies |buffer| if |buflen| less than or equal to the</para>
            <para>size of the decoded data. Returns the size of the decoded</para>
            <para>data or 0 if thumbnail DNE. Optional, pass null to just retrieve</para>
            <para>the size of the buffer needed.</para>
            <para>page    - handle to a page.</para>
            <para>buffer  - buffer for holding the decoded image data.</para>
            <para>buflen  - length of the buffer in bytes.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_thumbnail.FPDFPageGetRawThumbnailData(PDFiumCore.FpdfPageT,System.IntPtr,System.UInt32)">
            <summary>
            <para>Experimental API.</para>
            <para>Gets the raw data from the thumbnail of |page| if it exists.</para>
            <para>This only modifies |buffer| if |buflen| is less than or equal to</para>
            <para>the size of the raw data. Returns the size of the raw data or 0</para>
            <para>if thumbnail DNE. Optional, pass null to just retrieve the size</para>
            <para>of the buffer needed.</para>
            <para>page    - handle to a page.</para>
            <para>buffer  - buffer for holding the raw image data.</para>
            <para>buflen  - length of the buffer in bytes.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_thumbnail.FPDFPageGetThumbnailAsBitmap(PDFiumCore.FpdfPageT)">
            <summary>
            <para>Experimental API.</para>
            <para>Returns the thumbnail of |page| as a FPDF_BITMAP. Returns a nullptr</para>
            <para>if unable to access the thumbnail's stream.</para>
            <para>page - handle to a page.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_transformpage.FPDFPageSetMediaBox(PDFiumCore.FpdfPageT,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <para>*</para>
            <para>Set &quot;MediaBox&quot; entry to the page dictionary.</para>
            <para>page   - Handle to a page.</para>
            <para>left   - The left of the rectangle.</para>
            <para>bottom - The bottom of the rectangle.</para>
            <para>right  - The right of the rectangle.</para>
            <para>top    - The top of the rectangle.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_transformpage.FPDFPageSetCropBox(PDFiumCore.FpdfPageT,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <para>*</para>
            <para>Set &quot;CropBox&quot; entry to the page dictionary.</para>
            <para>page   - Handle to a page.</para>
            <para>left   - The left of the rectangle.</para>
            <para>bottom - The bottom of the rectangle.</para>
            <para>right  - The right of the rectangle.</para>
            <para>top    - The top of the rectangle.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_transformpage.FPDFPageSetBleedBox(PDFiumCore.FpdfPageT,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <para>*</para>
            <para>Set &quot;BleedBox&quot; entry to the page dictionary.</para>
            <para>page   - Handle to a page.</para>
            <para>left   - The left of the rectangle.</para>
            <para>bottom - The bottom of the rectangle.</para>
            <para>right  - The right of the rectangle.</para>
            <para>top    - The top of the rectangle.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_transformpage.FPDFPageSetTrimBox(PDFiumCore.FpdfPageT,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <para>*</para>
            <para>Set &quot;TrimBox&quot; entry to the page dictionary.</para>
            <para>page   - Handle to a page.</para>
            <para>left   - The left of the rectangle.</para>
            <para>bottom - The bottom of the rectangle.</para>
            <para>right  - The right of the rectangle.</para>
            <para>top    - The top of the rectangle.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_transformpage.FPDFPageSetArtBox(PDFiumCore.FpdfPageT,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <para>*</para>
            <para>Set &quot;ArtBox&quot; entry to the page dictionary.</para>
            <para>page   - Handle to a page.</para>
            <para>left   - The left of the rectangle.</para>
            <para>bottom - The bottom of the rectangle.</para>
            <para>right  - The right of the rectangle.</para>
            <para>top    - The top of the rectangle.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_transformpage.FPDFPageGetMediaBox(PDFiumCore.FpdfPageT,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            <para>*</para>
            <para>Get &quot;MediaBox&quot; entry from the page dictionary.</para>
            <para>page   - Handle to a page.</para>
            <para>left   - Pointer to a float value receiving the left of the rectangle.</para>
            <para>bottom - Pointer to a float value receiving the bottom of the rectangle.</para>
            <para>right  - Pointer to a float value receiving the right of the rectangle.</para>
            <para>top    - Pointer to a float value receiving the top of the rectangle.</para>
            <para>On success, return true and write to the out parameters. Otherwise return</para>
            <para>false and leave the out parameters unmodified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_transformpage.FPDFPageGetCropBox(PDFiumCore.FpdfPageT,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            <para>*</para>
            <para>Get &quot;CropBox&quot; entry from the page dictionary.</para>
            <para>page   - Handle to a page.</para>
            <para>left   - Pointer to a float value receiving the left of the rectangle.</para>
            <para>bottom - Pointer to a float value receiving the bottom of the rectangle.</para>
            <para>right  - Pointer to a float value receiving the right of the rectangle.</para>
            <para>top    - Pointer to a float value receiving the top of the rectangle.</para>
            <para>On success, return true and write to the out parameters. Otherwise return</para>
            <para>false and leave the out parameters unmodified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_transformpage.FPDFPageGetBleedBox(PDFiumCore.FpdfPageT,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            <para>*</para>
            <para>Get &quot;BleedBox&quot; entry from the page dictionary.</para>
            <para>page   - Handle to a page.</para>
            <para>left   - Pointer to a float value receiving the left of the rectangle.</para>
            <para>bottom - Pointer to a float value receiving the bottom of the rectangle.</para>
            <para>right  - Pointer to a float value receiving the right of the rectangle.</para>
            <para>top    - Pointer to a float value receiving the top of the rectangle.</para>
            <para>On success, return true and write to the out parameters. Otherwise return</para>
            <para>false and leave the out parameters unmodified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_transformpage.FPDFPageGetTrimBox(PDFiumCore.FpdfPageT,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            <para>*</para>
            <para>Get &quot;TrimBox&quot; entry from the page dictionary.</para>
            <para>page   - Handle to a page.</para>
            <para>left   - Pointer to a float value receiving the left of the rectangle.</para>
            <para>bottom - Pointer to a float value receiving the bottom of the rectangle.</para>
            <para>right  - Pointer to a float value receiving the right of the rectangle.</para>
            <para>top    - Pointer to a float value receiving the top of the rectangle.</para>
            <para>On success, return true and write to the out parameters. Otherwise return</para>
            <para>false and leave the out parameters unmodified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_transformpage.FPDFPageGetArtBox(PDFiumCore.FpdfPageT,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            <para>*</para>
            <para>Get &quot;ArtBox&quot; entry from the page dictionary.</para>
            <para>page   - Handle to a page.</para>
            <para>left   - Pointer to a float value receiving the left of the rectangle.</para>
            <para>bottom - Pointer to a float value receiving the bottom of the rectangle.</para>
            <para>right  - Pointer to a float value receiving the right of the rectangle.</para>
            <para>top    - Pointer to a float value receiving the top of the rectangle.</para>
            <para>On success, return true and write to the out parameters. Otherwise return</para>
            <para>false and leave the out parameters unmodified.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_transformpage.FPDFPageTransFormWithClip(PDFiumCore.FpdfPageT,PDFiumCore.FS_MATRIX_,PDFiumCore.FS_RECTF_)">
            <summary>
            <para>*</para>
            <para>Apply transforms to |page|.</para>
            <para>If |matrix| is provided it will be applied to transform the page.</para>
            <para>If |clipRect| is provided it will be used to clip the resulting page.</para>
            <para>If neither |matrix| or |clipRect| are provided this method returns |false|.</para>
            <para>Returns |true| if transforms are applied.</para>
            <para>This function will transform the whole page, and would take effect to all the</para>
            <para>objects in the page.</para>
            <para>page        - Page handle.</para>
            <para>matrix      - Transform matrix.</para>
            <para>clipRect    - Clipping rectangle.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_transformpage.FPDFPageObjTransformClipPath(PDFiumCore.FpdfPageobjectT,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            <para>*</para>
            <para>Transform (scale, rotate, shear, move) the clip path of page object.</para>
            <para>page_object - Handle to a page object. Returned by</para>
            <para>FPDFPageObj_NewImageObj().</para>
            <para>a  - The coefficient &quot;a&quot; of the matrix.</para>
            <para>b  - The coefficient &quot;b&quot; of the matrix.</para>
            <para>c  - The coefficient &quot;c&quot; of the matrix.</para>
            <para>d  - The coefficient &quot;d&quot; of the matrix.</para>
            <para>e  - The coefficient &quot;e&quot; of the matrix.</para>
            <para>f  - The coefficient &quot;f&quot; of the matrix.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_transformpage.FPDFPageObjGetClipPath(PDFiumCore.FpdfPageobjectT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get the clip path of the page object.</para>
            <para>page object - Handle to a page object. Returned by e.g.</para>
            <para>FPDFPage_GetObject().</para>
            <para>Returns the handle to the clip path, or NULL on failure. The caller does not</para>
            <para>take ownership of the returned FPDF_CLIPPATH. Instead, it remains valid until</para>
            <para>FPDF_ClosePage() is called for the page containing |page_object|.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_transformpage.FPDFClipPathCountPaths(PDFiumCore.FpdfClippathT)">
            <summary>
            <para>Experimental API.</para>
            <para>Get number of paths inside |clip_path|.</para>
            <para>clip_path - handle to a clip_path.</para>
            <para>Returns the number of objects in |clip_path| or -1 on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_transformpage.FPDFClipPathCountPathSegments(PDFiumCore.FpdfClippathT,System.Int32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get number of segments inside one path of |clip_path|.</para>
            <para>clip_path  - handle to a clip_path.</para>
            <para>path_index - index into the array of paths of the clip path.</para>
            <para>Returns the number of segments or -1 on failure.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_transformpage.FPDFClipPathGetPathSegment(PDFiumCore.FpdfClippathT,System.Int32,System.Int32)">
            <summary>
            <para>Experimental API.</para>
            <para>Get segment in one specific path of |clip_path| at index.</para>
            <para>clip_path     - handle to a clip_path.</para>
            <para>path_index    - the index of a path.</para>
            <para>segment_index - the index of a segment.</para>
            <para>Returns the handle to the segment, or NULL on failure. The caller does not</para>
            <para>take ownership of the returned FPDF_PATHSEGMENT. Instead, it remains valid</para>
            <para>until FPDF_ClosePage() is called for the page containing |clip_path|.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_transformpage.FPDF_CreateClipPath(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <para>*</para>
            <para>Create a new clip path, with a rectangle inserted.</para>
            <para>Caller takes ownership of the returned FPDF_CLIPPATH. It should be freed with</para>
            <para>FPDF_DestroyClipPath().</para>
            <para>left   - The left of the clip box.</para>
            <para>bottom - The bottom of the clip box.</para>
            <para>right  - The right of the clip box.</para>
            <para>top    - The top of the clip box.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_transformpage.FPDF_DestroyClipPath(PDFiumCore.FpdfClippathT)">
            <summary>
            <para>*</para>
            <para>Destroy the clip path.</para>
            <para>clipPath - A handle to the clip path. It will be invalid after this call.</para>
            </summary>
        </member>
        <member name="M:PDFiumCore.fpdf_transformpage.FPDFPageInsertClipPath(PDFiumCore.FpdfPageT,PDFiumCore.FpdfClippathT)">
            <summary>
            <para>*</para>
            <para>Clip the page content, the page content that outside the clipping region</para>
            <para>become invisible.</para>
            <para>A clip path will be inserted before the page content stream or content array.</para>
            <para>In this way, the page content will be clipped by this clip path.</para>
            <para>page        - A page handle.</para>
            <para>clipPath    - A handle to the clip path. (Does not take ownership.)</para>
            </summary>
        </member>
        <member name="F:PDFiumCore.RenderFlags.RenderAnnotations">
            <summary>
            FPDF_ANNOT: Set if annotations are to be rendered.
            </summary>
        </member>
        <member name="F:PDFiumCore.RenderFlags.OptimizeTextForLcd">
            <summary>
            FPDF_LCD_TEXT: Set if using text rendering optimized for LCD display. This flag will only take effect if anti-aliasing is enabled for text.
            </summary>
        </member>
        <member name="F:PDFiumCore.RenderFlags.NoNativeText">
            <summary>
            FPDF_NO_NATIVETEXT: Don't use the native text output available on some platforms
            </summary>
        </member>
        <member name="F:PDFiumCore.RenderFlags.Grayscale">
            <summary>
            FPDF_GRAYSCALE: Grayscale output
            </summary>
        </member>
        <member name="F:PDFiumCore.RenderFlags.LimitImageCacheSize">
            <summary>
            // FPDF_RENDER_LIMITEDIMAGECACHE: Limit image cache size
            </summary>
        </member>
        <member name="F:PDFiumCore.RenderFlags.ForceHalftone">
            <summary>
            FPDF_RENDER_FORCEHALFTONE: Always use halftone for image stretching
            </summary>
        </member>
        <member name="F:PDFiumCore.RenderFlags.RenderForPrinting">
            <summary>
            FPDF_PRINTING: Render for printing
            </summary>
        </member>
        <member name="F:PDFiumCore.RenderFlags.DisableTextAntialiasing">
            <summary>
            FPDF_RENDER_NO_SMOOTHTEXT: Set to disable anti-aliasing on text. This flag will also disable LCD optimization for text rendering
            </summary>
        </member>
        <member name="F:PDFiumCore.RenderFlags.DisableImageAntialiasing">
            <summary>
            FPDF_RENDER_NO_SMOOTHIMAGE: Set to disable anti-aliasing on images.
            </summary>
        </member>
        <member name="F:PDFiumCore.RenderFlags.DisablePathAntialiasing">
            <summary>
            FPDF_RENDER_NO_SMOOTHPATH: Set to disable anti-aliasing on paths.
            </summary>
        </member>
    </members>
</doc>
